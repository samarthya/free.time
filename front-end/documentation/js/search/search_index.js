var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.317,1,0.871]],["body/components/AboutComponent.html",[0,0.538,1,1.431,2,0.982,3,0.214,4,0.272,5,0.839,6,0.839,7,0.905,8,0.905,9,0.158,10,2.115,11,0.572,12,3.222,13,2.717,14,1.431,15,3.705,16,3.705,17,3.11,18,1.683,19,3.705,20,3.705,21,3.11,22,3.705,23,3.11,24,3.11,25,3.705,26,1.33,27,2.001,28,0.905,29,1.33,30,4.394,31,1.33,32,3.705,33,0.185,34,0.715,35,1.462,36,0.841,37,2.001,38,2.19,39,5.161,40,0.92,41,0.977,42,0.947,43,0.914,44,2.52,45,2.906,46,3.705,47,3.11,48,2.424,49,2.424,50,4.331,51,0.715,52,0.03,53,0.498,54,0.372,55,0.656,56,3.11,57,3.705,58,2.52,59,3.705,60,3.531,61,0.713,62,1.06,63,1.858,64,2.52,65,4.844,66,3.11,67,3.705,68,3.11,69,2.52,70,2.52,71,3.705,72,2.52,73,2.52,74,3.705,75,1.33,76,0.65,77,1.49,78,0.486,79,1.996,80,2.52,81,0.905,82,0.214,83,0.214,84,2.52,85,1.057,86,2.115,87,2.597,88,3.687,89,3.687,90,3.222,91,4.394,92,0.905,93,1.244,94,1.842,95,2.52,96,3.222,97,3.222,98,1.848,99,2.52,100,2.52,101,2.115,102,2.52,103,2.115,104,1.49,105,0.721,106,4.394,107,2.52,108,2.52,109,2.52,110,2.52,111,2.115,112,0.619,113,1.848,114,1.244,115,2.52,116,0.778,117,0.839,118,0.778,119,1.33,120,1.33,121,0.905,122,1.739,123,0.905,124,2.162,125,0.668,126,1.665,127,0.905,128,0.668,129,0.905,130,0.668,131,0.905,132,0.668,133,1.578,134,0.905,135,0.668,136,0.905,137,0.668,138,0.905,139,0.668,140,0.905,141,0.619,142,0.905,143,0.668,144,0.905,145,0.668,146,0.905,147,0.905,148,0.011,149,0.016,150,0.011]],["title/classes/ActivatedRouteStub.html",[83,0.278,151,1.941]],["body/classes/ActivatedRouteStub.html",[3,0.317,4,0.275,9,0.235,11,0.361,33,0.275,34,0.941,35,1.805,36,1.107,40,0.784,43,1.018,51,0.941,52,0.03,53,0.47,54,0.413,55,0.864,60,3.19,61,0.607,62,1.071,75,2.193,76,0.721,82,0.317,83,0.317,114,2.407,148,0.016,149,0.021,150,0.016,151,2.882,152,2.745,153,5,154,2.745,155,4.092,156,3.576,157,4.092,158,4.677,159,2.609,160,3.576,161,4.092,162,2.882,163,4.822,164,4.551,165,4.551,166,4.551,167,4.092,168,4.092,169,5.294,170,4.092,171,3.141,172,3.576,173,1.751,174,4.092,175,3.141,176,4.092,177,1.293,178,4.551,179,4.092,180,3.141,181,4.092,182,3.141,183,1.7,184,1.7,185,3.141,186,3.141]],["title/classes/ActivatedRouteStub-1.html",[83,0.233,92,0.987,151,1.625]],["body/classes/ActivatedRouteStub-1.html",[3,0.317,4,0.275,9,0.235,11,0.361,33,0.275,34,0.941,35,1.805,36,1.107,40,0.784,43,1.018,51,0.941,52,0.03,53,0.47,54,0.413,55,0.864,60,3.19,61,0.607,62,1.071,75,2.193,76,0.721,82,0.317,83,0.317,114,2.407,148,0.016,149,0.021,150,0.016,151,2.882,152,2.745,154,2.745,155,4.092,156,3.576,157,4.092,158,4.677,159,2.609,160,3.576,161,4.092,162,2.882,163,4.822,164,4.551,165,4.551,166,4.551,167,4.092,168,4.092,169,5.294,170,4.092,171,3.141,172,3.576,173,1.751,174,4.092,175,3.141,176,4.092,177,1.293,178,4.551,179,4.092,180,3.141,181,4.092,182,3.141,183,1.7,184,1.7,185,3.141,186,3.141,187,5]],["title/components/AppComponent.html",[0,0.317,125,0.871]],["body/components/AppComponent.html",[0,0.597,1,0.976,2,1.426,3,0.312,4,0.27,5,1.225,6,1.225,7,1.931,8,1.321,9,0.231,11,0.355,12,3.536,28,1.321,29,1.731,31,1.731,40,0.771,41,1.426,42,0.986,43,0.652,51,0.71,52,0.03,53,0.55,54,0.312,55,0.652,76,0.713,78,0.71,82,0.312,83,0.456,105,1.053,116,1.135,118,1.135,119,1.731,120,1.731,121,1.321,122,2.049,123,1.321,124,2.348,125,1.571,126,1.94,127,1.321,128,0.976,129,1.321,130,0.976,131,1.321,132,0.976,133,1.931,134,1.321,135,0.976,136,1.321,137,0.976,138,1.321,139,0.976,140,1.321,141,0.903,142,1.321,143,0.976,144,1.321,145,0.976,146,1.321,147,1.321,148,0.016,149,0.021,150,0.016,188,3.088,189,3.155,190,4.046,191,3.074,192,4.821,193,4.821,194,5.378,195,4.046,196,3.679,197,3.088,198,3.679,199,3.679,200,3.088,201,3.679]],["title/injectables/AppEffects.html",[202,1.093,203,2.149]],["body/injectables/AppEffects.html",[0,0.475,2,1.448,3,0.221,4,0.192,9,0.163,11,0.251,18,1.726,33,0.192,34,0.733,35,1.639,40,0.796,42,0.727,43,0.794,51,0.503,52,0.03,53,0.251,54,0.463,55,0.462,75,1.364,76,0.871,78,0.503,82,0.221,83,0.221,112,0.933,116,0.805,117,1.265,148,0.011,149,0.017,150,0.011,159,2.377,173,1.364,177,1.007,183,1.185,184,1.185,202,1.265,203,2.932,204,1.405,205,2.189,206,3.799,207,3.799,208,6.287,209,4.132,210,4.923,211,3.229,212,4.923,213,4.923,214,4.923,215,3.799,216,3.799,217,3.799,218,3.189,219,1.593,220,4.923,221,5.024,222,3.799,223,2.786,224,4.923,225,3.799,226,4.006,227,3.799,228,3.799,229,3.799,230,3.799,231,3.799,232,3.799,233,2.786,234,3.799,235,3.799,236,3.799,237,3.799,238,3.189,239,2.608,240,3.189,241,3.189,242,2.486,243,3.799,244,3.037,245,3.287,246,2.608,247,4.481,248,3.689,249,4.481,250,3.611,251,2.608,252,5.462,253,5.233,254,3.799,255,3.799,256,3.799,257,3.799,258,1.492,259,3.799,260,3.799,261,3.799,262,3.799,263,3.799,264,3.189,265,3.189,266,1.473,267,2.608,268,3.799,269,4.132,270,3.799,271,1.593,272,2.608,273,2.608,274,2.608,275,1.913,276,2.189,277,2.189,278,2.608,279,1.542,280,1.913,281,2.189,282,2.608,283,1.913,284,1.542,285,3.799,286,2.608,287,2.189]],["title/modules/AppModule.html",[288,2.149,289,2.149]],["body/modules/AppModule.html",[0,0.34,1,1.396,2,1.33,3,0.2,4,0.173,9,0.148,11,0.227,14,0.934,18,1.601,42,0.91,43,0.624,52,0.03,61,0.382,68,2.958,76,0.941,78,0.454,82,0.2,83,0.299,105,0.674,116,0.727,118,0.727,125,1.593,128,1.396,130,1.396,132,1.521,135,1.396,137,1.396,139,1.521,141,1.408,143,1.521,145,1.396,148,0.01,149,0.016,150,0.01,183,1.07,189,2.762,190,3.543,191,2.524,203,1.541,271,0.987,275,1.728,284,2.083,288,3.445,289,4.35,290,1.541,291,1.541,292,3.096,293,2.496,294,3.543,295,1.977,296,1.977,297,1.977,298,1.977,299,1.977,300,2.958,301,1.728,302,1.728,303,2.356,304,3.524,305,2.584,306,3.524,307,3.524,308,4.686,309,2.958,310,3.524,311,1.977,312,2.584,313,3.524,314,3.524,315,1.541,316,4.222,317,2.356,318,2.356,319,3.524,320,1.977,321,3.524,322,2.083,323,1.728,324,1.728,325,2.306,326,2.356,327,2.356,328,1.728,329,2.584,330,1.977,331,2.356,332,2.356,333,2.356,334,1.977,335,1.541,336,2.356,337,3.524,338,1.977,339,1.977,340,2.356,341,2.356,342,2.356,343,2.356,344,1.977,345,3.096,346,1.977,347,3.524,348,3.524,349,3.524,350,3.524,351,3.524,352,3.524,353,2.958,354,1.977,355,2.958,356,3.524,357,3.524,358,3.524,359,3.524,360,3.524,361,1.541,362,1.728,363,1.977,364,2.356,365,1.977,366,2.356,367,2.356,368,2.356,369,2.274,370,2.356,371,1.728,372,3.524,373,2.356,374,2.958,375,2.356,376,2.356,377,1.977,378,2.356,379,2.356,380,2.356,381,2.356,382,2.356,383,2.356,384,2.356,385,2.356,386,1.977,387,2.356,388,1.977,389,2.356,390,2.356,391,2.356,392,2.356,393,2.356,394,2.356,395,2.356,396,2.356,397,2.356,398,1.393,399,2.356,400,2.356]],["title/interfaces/AppState.html",[401,0.871,402,1.621]],["body/interfaces/AppState.html",[3,0.31,4,0.269,9,0.229,11,0.353,14,1.274,33,0.269,34,0.927,52,0.03,54,0.407,61,0.593,76,0.541,82,0.524,112,1.398,148,0.016,149,0.021,150,0.016,219,2.686,258,2.059,271,2.014,279,2.163,398,3.17,401,1.274,402,2.996,403,1.662,404,2.163,405,4.031,406,4.452,407,4.452,408,2.888,409,4.031,410,4.031,411,3.523,412,1.825,413,2.587,414,3.933,415,3.07,416,3.143,417,3.496,418,2.84,419,3.17,420,1.314,421,1.314,422,2.84,423,2.84,424,1.725,425,2.394,426,2.394,427,3.07]],["title/components/ContactComponent.html",[0,0.317,128,0.871]],["body/components/ContactComponent.html",[0,0.36,1,0.512,2,0.802,3,0.164,4,0.142,5,0.642,6,0.642,7,0.693,8,0.693,9,0.121,11,0.186,14,0.802,18,1.374,26,1.086,27,1.446,28,0.693,29,1.086,31,1.086,33,0.142,34,0.584,35,1.007,36,0.687,37,1.778,40,0.404,41,0.748,42,0.789,43,0.981,51,0.584,52,0.03,53,0.574,54,0.412,55,0.536,61,0.744,62,1.312,63,0.596,75,1.647,76,0.678,77,2.497,78,0.372,81,0.693,82,0.164,83,0.316,85,2.642,87,1.788,104,1.141,105,0.552,112,1.037,113,2.219,116,1.151,117,1.619,118,0.596,119,1.086,120,1.516,121,0.693,122,1.516,123,0.693,124,2.089,125,0.512,126,1.625,127,0.693,128,1.29,129,0.693,130,0.512,131,0.693,132,0.512,133,1.34,134,0.693,135,0.512,136,0.693,137,0.512,138,0.693,139,0.512,140,0.693,141,0.474,142,0.693,143,0.512,144,0.693,145,0.512,146,0.693,147,0.693,148,0.008,149,0.013,150,0.008,159,1.374,162,1.788,173,1.34,177,1.349,183,0.877,211,1.788,233,2.219,242,1.979,250,3.73,266,1.173,271,1.268,315,1.979,361,1.979,398,1.788,408,2.275,412,0.934,414,3.097,417,2.497,420,2.06,424,1.34,428,1.62,429,4.223,430,5.738,431,2.539,432,1.268,433,3.025,434,3.025,435,2.539,436,3.025,437,3.025,438,4.419,439,3.731,440,3.025,441,4.083,442,4.586,443,4.223,444,4.223,445,3.025,446,4.223,447,2.736,448,3.544,449,3.025,450,1.93,451,3.025,452,3.025,453,3.025,454,1.93,455,3.025,456,3.025,457,4.223,458,3.025,459,2.539,460,2.539,461,3.025,462,1.93,463,3.025,464,3.544,465,1.93,466,3.025,467,1.93,468,2.736,469,4.883,470,4.083,471,3.544,472,1.93,473,3.731,474,2.539,475,1.93,476,3.025,477,1.93,478,3.025,479,3.025,480,2.539,481,3.025,482,3.025,483,3.025,484,3.025,485,3.131,486,1.62,487,1.93,488,1.93,489,1.93,490,1.93,491,1.93,492,1.93,493,1.93,494,1.93,495,1.93,496,3.025,497,1.93,498,1.93,499,1.93,500,1.93,501,1.93,502,1.93,503,1.93,504,1.93,505,1.93,506,1.93,507,1.93,508,1.93,509,1.93,510,1.93,511,1.93,512,3.025,513,3.025,514,3.025,515,2.219,516,2.539,517,3.025,518,2.539,519,3.025,520,1.93,521,3.131,522,2.539,523,1.62,524,2.539,525,2.219,526,2.539,527,2.219,528,1.62,529,1.62,530,2.539,531,1.62,532,1.62,533,1.62,534,1.62,535,1.93,536,1.416,537,1.93,538,1.62,539,1.62,540,1.979,541,1.263,542,1.93,543,1.263,544,1.93,545,1.93,546,1.93,547,1.93,548,1.62]],["title/components/ErrorpageComponent.html",[0,0.317,130,0.871]],["body/components/ErrorpageComponent.html",[0,0.558,1,0.907,2,1.218,3,0.29,4,0.251,5,1.138,6,1.138,7,1.228,8,1.228,9,0.214,11,0.33,12,4.066,14,1.218,18,2.086,26,1.649,27,2.011,28,1.228,29,1.649,31,1.649,33,0.251,36,1.043,37,2.242,40,0.716,41,1.326,42,0.966,43,0.814,51,0.66,52,0.03,53,0.534,54,0.29,55,0.606,61,0.555,62,0.979,76,0.679,78,0.66,81,1.228,82,0.29,83,0.29,105,0.979,116,1.056,117,1.138,118,1.056,119,1.649,120,1.649,121,1.228,122,1.991,123,1.228,124,2.324,125,0.907,126,1.909,127,1.228,128,0.907,129,1.228,130,1.534,131,1.228,132,0.907,133,1.862,134,1.228,135,0.907,136,1.228,137,0.907,138,1.228,139,0.907,140,1.228,141,0.84,142,1.228,143,0.907,144,1.228,145,0.907,146,1.228,147,1.228,148,0.015,149,0.02,150,0.015,266,1.781,549,2.871,550,3.628,551,4.653,552,4.593,553,4.593,554,4.593,555,4.593,556,3.855,557,4.593,558,4.593,559,4.593,560,5.187,561,4.593,562,3.42,563,3.42,564,4.593,565,4.593,566,4.593,567,3.855,568,4.593,569,3.369]],["title/components/FooterComponent.html",[0,0.317,132,0.871]],["body/components/FooterComponent.html",[0,0.556,1,0.901,2,1.212,3,0.288,4,0.25,5,1.13,6,1.13,7,1.22,8,1.22,9,0.213,11,0.327,14,1.212,26,1.642,27,2.143,28,1.22,29,1.642,31,1.642,33,0.25,36,1.038,37,2.143,40,0.711,42,0.897,43,0.81,45,2.462,51,0.655,52,0.03,53,0.533,54,0.288,55,0.602,61,0.551,62,0.972,76,0.676,78,0.655,81,1.22,82,0.288,83,0.288,105,0.972,117,1.13,118,1.048,119,1.642,120,1.642,121,1.22,122,1.985,123,1.22,124,2.322,125,0.901,126,1.834,127,1.22,128,0.901,129,1.22,130,0.901,131,1.22,132,1.53,133,2.072,134,1.22,135,0.901,136,1.22,137,0.901,138,1.22,139,0.901,140,1.22,141,0.834,142,1.22,143,0.901,144,1.22,145,0.901,146,1.22,147,1.22,148,0.015,149,0.02,150,0.015,569,3.353,570,2.85,571,5.529,572,3.353,573,4.572,574,3.353,575,4.572,576,4.572,577,3.837,578,4.572,579,4.572,580,5.168,581,4.572,582,3.396,583,3.396,584,4.572,585,3.396,586,3.396,587,4.572,588,4.572,589,4.572,590,4.572,591,3.396,592,5.168,593,3.396,594,3.396,595,3.396,596,4.572,597,3.396,598,2.85,599,3.396]],["title/components/HomeComponent.html",[0,0.317,135,0.871]],["body/components/HomeComponent.html",[0,0.536,1,0.728,2,1.045,3,0.233,4,0.202,5,0.914,6,0.914,7,0.986,8,0.986,9,0.172,11,0.265,13,2.013,26,1.415,27,1.788,28,0.986,29,1.415,31,1.415,33,0.202,36,0.895,37,2.07,40,0.575,42,0.818,43,0.893,45,2.123,51,0.529,52,0.03,53,0.486,54,0.391,55,0.486,61,0.445,62,0.785,63,1.556,76,0.583,77,2.727,78,0.529,81,0.986,82,0.233,83,0.233,87,3.156,105,0.785,117,0.914,118,0.847,119,1.415,120,1.415,121,0.986,122,1.81,123,0.986,124,2.244,125,0.728,126,1.808,127,0.986,128,0.728,129,0.986,130,0.728,131,0.986,132,0.728,133,1.656,134,0.986,135,1.337,136,0.986,137,0.728,138,0.986,139,0.728,140,0.986,141,0.674,142,0.986,143,0.728,144,0.986,145,0.728,146,0.986,147,0.986,148,0.012,149,0.017,150,0.012,177,1.045,242,2.579,362,2.891,460,3.308,515,3.697,525,2.891,540,1.796,541,1.796,543,2.579,556,3.308,572,2.891,598,2.303,600,2.303,601,3.308,602,2.33,603,3.942,604,3.942,605,3.942,606,3.871,607,4.612,608,3.942,609,3.308,610,4.612,611,2.745,612,3.942,613,3.942,614,2.745,615,2.745,616,2.745,617,5.041,618,5.558,619,3.308,620,3.942,621,4.231,622,3.942,623,3.308,624,3.942,625,3.942,626,3.942,627,3.942,628,3.942,629,3.942,630,3.942,631,3.942,632,3.942,633,3.308,634,3.942,635,3.942,636,3.942,637,3.308,638,5.041,639,5.041,640,3.942,641,3.942,642,3.942,643,3.942,644,3.942,645,3.942,646,3.942,647,3.308,648,3.942,649,3.942,650,3.942,651,3.308,652,3.942,653,3.942,654,3.942,655,3.942,656,3.942,657,3.942,658,3.942,659,3.942,660,3.942,661,2.303,662,2.303,663,2.303,664,2.013,665,2.745,666,2.303,667,2.891,668,3.942,669,2.745,670,2.745]],["title/interfaces/IDetails.html",[401,0.871,671,1.769]],["body/interfaces/IDetails.html",[3,0.29,4,0.251,9,0.214,11,0.587,14,1.375,33,0.251,34,0.886,52,0.03,53,0.558,54,0.47,63,2.008,82,0.49,83,0.29,92,1.228,93,1.688,94,1.926,148,0.015,149,0.02,150,0.015,177,0.907,258,1.529,401,1.47,403,1.553,412,1.954,420,2.077,421,1.862,424,1.228,432,2.174,602,2.022,671,2.793,672,1.842,673,2.855,674,2.855,675,2.855,676,2.716,677,2.763,678,3.784,679,3.006,680,3.066,681,3.006,682,2.022,683,2.474,684,2.022,685,2.022,686,2.267,687,2.238,688,2.238,689,1.781,690,1.688,691,1.842,692,1.842,693,1.842,694,1.842,695,1.842,696,1.842,697,1.688]],["title/interfaces/IPrincipal.html",[258,1.093,401,0.871]],["body/interfaces/IPrincipal.html",[3,0.299,4,0.259,9,0.221,11,0.508,14,1.396,33,0.259,34,0.904,52,0.03,53,0.579,54,0.397,63,1.994,82,0.495,83,0.299,92,1.266,93,1.74,94,1.965,148,0.016,149,0.021,150,0.016,177,0.935,258,1.753,401,1.488,403,1.601,412,1.994,420,2.236,421,2.201,424,1.266,432,2.208,602,2.084,671,2.525,672,1.899,673,2.314,674,2.314,675,2.314,676,2.084,677,2.654,678,3.446,679,2.307,680,2.084,681,2.307,682,2.771,683,2.525,684,2.084,685,2.084,686,2.314,687,2.307,688,2.307,689,1.817,690,1.74,691,1.899,692,1.899,693,1.899,694,1.899,695,1.899,696,1.899,697,1.74]],["title/interfaces/IProfile.html",[79,1.769,401,0.871]],["body/interfaces/IProfile.html",[3,0.378,4,0.328,9,0.28,11,0.59,33,0.328,34,1.051,52,0.029,54,0.541,63,2.092,79,2.935,82,0.378,87,3.621,90,4.492,94,2.568,96,4.492,97,4.492,148,0.02,149,0.024,150,0.02,401,1.184,403,2.028,698,3.747]],["title/interfaces/IUser.html",[401,0.871,683,1.769]],["body/interfaces/IUser.html",[3,0.294,4,0.255,9,0.217,11,0.504,14,1.385,33,0.255,34,0.895,52,0.03,53,0.612,54,0.443,63,2.012,82,0.493,83,0.294,92,1.246,93,1.712,94,2.436,148,0.015,149,0.02,150,0.015,177,0.92,258,1.543,401,1.479,403,1.576,412,1.989,420,2.002,421,1.876,424,1.246,432,2.19,602,2.741,671,2.498,672,1.868,673,2.289,674,2.289,675,2.289,676,2.051,677,2.64,678,3.649,679,2.27,680,2.051,681,2.27,682,2.051,683,2.813,684,2.741,685,2.741,686,2.868,687,2.27,688,2.27,689,1.798,690,1.712,691,1.868,692,1.868,693,1.868,694,1.868,695,1.868,696,1.868,697,1.712]],["title/interfaces/IUserProfile.html",[401,0.871,689,1.273]],["body/interfaces/IUserProfile.html",[3,0.291,4,0.252,9,0.215,11,0.535,14,1.581,33,0.252,34,0.888,52,0.03,53,0.558,54,0.44,63,1.91,82,0.491,83,0.39,92,1.232,93,1.694,94,1.93,148,0.015,149,0.02,150,0.015,177,1.221,258,1.848,401,1.472,403,1.559,412,2.034,420,1.994,421,1.866,424,1.232,432,2.553,602,2.029,671,2.99,672,1.849,673,2.273,674,2.273,675,2.273,676,2.029,677,2.848,678,3.4,679,2.246,680,2.029,681,2.246,682,2.029,683,2.99,684,2.029,685,2.029,686,2.273,687,3.013,688,3.013,689,2.014,690,1.694,691,1.849,692,1.849,693,1.849,694,1.849,695,1.849,696,1.849,697,1.694]],["title/injectables/InMemoryDataService.html",[202,1.093,325,2.149]],["body/injectables/InMemoryDataService.html",[3,0.365,4,0.317,9,0.27,11,0.415,33,0.317,36,1.21,43,0.763,52,0.03,53,0.415,61,0.698,76,0.788,78,0.831,82,0.365,83,0.365,92,1.546,93,2.126,94,1.805,112,1.057,148,0.019,149,0.023,150,0.019,191,2.319,202,1.774,204,2.319,244,3.118,279,2.546,322,3.151,325,3.487,412,1.329,420,1.546,421,1.546,424,1.546,432,1.805,673,2.126,674,2.126,675,2.126,677,1.956,686,2.126,689,2.066,691,2.319,692,2.319,693,2.319,694,2.319,695,2.319,696,2.319,697,2.126,699,4.473,700,3.614,701,6.049,702,4.306,703,3.158]],["title/injectables/Logger.html",[42,0.533,202,1.093]],["body/injectables/Logger.html",[3,0.273,4,0.237,9,0.202,11,0.485,33,0.237,34,0.851,35,1.947,36,1.001,38,2.608,40,1.054,42,0.715,43,1.081,48,2.886,49,3.828,51,1.044,52,0.03,53,0.521,54,0.458,55,1.004,61,0.877,62,1.548,75,1.942,76,0.476,78,0.622,82,0.273,83,0.426,85,1.849,104,2.608,112,0.791,114,1.59,148,0.014,149,0.019,150,0.014,173,1.584,177,1.17,202,1.468,204,1.735,266,2.268,369,3.052,413,2.376,550,3.539,704,2.704,705,3.702,706,3.235,707,3.702,708,3.702,709,4.222,710,4.222,711,3.702,712,3.702,713,4.222,714,4.411,715,3.702,716,3.222,717,3.235,718,5.119,719,3.702,720,3.702,721,3.222,722,3.235,723,3.702,724,3.222,725,3.967,726,3.222,727,2.704,728,3.222,729,2.704,730,3.222,731,4.222,732,2.704,733,2.704,734,2.704,735,3.702,736,2.704]],["title/injectables/Logger-1.html",[42,0.446,92,0.987,202,0.915]],["body/injectables/Logger-1.html",[3,0.272,4,0.236,9,0.201,11,0.484,33,0.236,34,0.848,35,1.944,36,0.998,38,2.599,40,1.051,42,0.713,43,1.079,48,2.876,49,3.823,51,1.041,52,0.03,53,0.52,54,0.457,55,1.002,61,0.876,62,1.545,75,1.938,76,0.474,78,0.619,82,0.272,83,0.425,85,1.843,104,2.599,112,0.787,114,1.582,148,0.014,149,0.019,150,0.014,173,1.579,177,1.166,191,1.727,202,1.463,204,1.727,266,2.265,369,3.046,413,2.368,550,3.532,703,2.351,705,3.69,706,3.224,707,3.69,708,3.69,709,4.211,710,4.211,711,3.69,712,3.69,713,4.211,715,3.69,717,3.224,718,5.113,719,3.69,720,3.69,722,3.224,723,3.69,725,3.959,727,2.691,729,2.691,731,4.211,732,2.691,733,2.691,734,2.691,735,3.69,736,2.691,737,2.691,738,4.396,739,3.206,740,3.206,741,3.206,742,3.206,743,3.206,744,3.206]],["title/components/LoginComponent.html",[0,0.317,137,0.871]],["body/components/LoginComponent.html",[0,0.49,1,0.645,2,0.957,3,0.206,4,0.179,5,0.81,6,0.81,7,0.873,8,0.873,9,0.152,11,0.415,13,1.784,18,1.639,26,1.296,27,1.668,28,0.873,29,1.296,31,1.296,33,0.179,34,0.696,35,1.585,36,0.819,37,1.972,40,0.51,41,0.943,42,0.864,43,1.025,51,0.469,52,0.03,53,0.459,54,0.431,55,0.431,61,0.772,62,1.231,76,0.856,78,0.469,81,0.873,82,0.206,83,0.206,85,2.426,105,0.696,112,1.169,116,1.114,117,0.81,118,0.751,119,1.296,120,1.296,121,0.873,122,1.709,123,0.873,124,2.194,125,0.645,126,1.748,127,0.873,128,0.645,129,0.873,130,0.645,131,0.873,132,0.645,133,1.545,134,0.873,135,0.645,136,0.873,137,1.348,138,0.873,139,0.645,140,0.873,141,0.597,142,0.873,143,0.645,144,0.873,145,0.645,146,0.873,147,0.873,148,0.011,149,0.016,150,0.011,159,1.954,162,2.134,177,1.141,184,1.105,211,3.26,219,1.513,244,2.869,258,1.201,271,1.513,276,2.041,284,1.438,315,1.591,408,2.564,420,0.873,421,2.114,424,1.545,464,3.029,468,2.647,469,4.628,470,3.029,471,3.995,474,2.041,485,3.611,486,2.041,536,1.784,539,2.041,540,1.591,541,2.361,543,2.361,601,2.041,661,2.041,662,2.041,663,2.041,667,3.156,745,2.041,746,4.303,747,3.609,748,3.611,749,4.303,750,4.628,751,4.268,752,3.995,753,4.761,754,3.609,755,2.432,756,3.609,757,2.432,758,2.432,759,2.432,760,2.432,761,2.432,762,2.432,763,1.784,764,2.432,765,2.041,766,1.784,767,1.784,768,3.609,769,2.432,770,3.609,771,2.432,772,2.432,773,2.041,774,2.041,775,3.029,776,2.432,777,2.432,778,2.432,779,2.432,780,2.432,781,2.432,782,2.432,783,2.432,784,2.432,785,3.609,786,3.609,787,3.029,788,3.609,789,3.609,790,2.432,791,2.432,792,2.432,793,2.432,794,2.041,795,2.432,796,2.041,797,2.432,798,2.432,799,2.432]],["title/injectables/LoginService.html",[202,1.093,248,2.149]],["body/injectables/LoginService.html",[3,0.228,4,0.198,9,0.169,11,0.259,14,1.031,18,1.765,33,0.198,34,0.75,35,2.007,36,0.882,40,0.564,42,0.923,43,0.978,45,1.45,51,1.022,52,0.03,53,0.532,54,0.482,55,0.978,61,0.81,63,1.962,75,1.794,76,0.817,78,0.519,82,0.228,83,0.228,85,1.912,104,2.298,105,0.77,112,1.431,116,0.831,117,0.896,126,1.408,148,0.026,149,0.017,150,0.012,159,2.647,172,1.974,173,1.396,177,0.714,184,1.222,191,1.45,202,1.294,204,1.45,223,1.974,244,1.45,248,2.543,269,2.259,277,2.259,279,1.591,280,1.974,281,2.259,283,1.974,287,2.259,305,2.85,309,2.259,320,2.259,371,3.664,412,1.2,413,1.45,418,1.591,421,2.044,424,0.966,521,2.259,550,2.985,689,1.937,690,1.918,703,1.974,717,2.85,750,3.262,751,4.193,800,2.259,801,4.562,802,3.887,803,3.887,804,3.887,805,2.691,806,4.996,807,3.887,808,2.691,809,3.887,810,3.887,811,3.262,812,3.887,813,3.887,814,2.691,815,3.887,816,3.887,817,4.447,818,2.691,819,3.887,820,5.828,821,5.299,822,3.887,823,3.887,824,2.691,825,3.887,826,3.887,827,2.691,828,2.691,829,2.259,830,2.691,831,2.691,832,2.691,833,2.691,834,2.691,835,2.691,836,2.691,837,2.691,838,2.691,839,2.691,840,3.887,841,2.691,842,2.691,843,2.691,844,2.691,845,2.691,846,2.691,847,2.691,848,2.691]],["title/components/NavbarComponent.html",[0,0.317,139,0.871]],["body/components/NavbarComponent.html",[0,0.512,1,0.72,2,1.037,3,0.23,4,0.199,5,0.903,6,0.903,7,0.975,8,0.975,9,0.17,11,0.262,14,1.037,26,1.404,27,1.777,28,0.975,29,1.404,31,1.404,33,0.199,34,0.754,35,1.899,36,0.887,37,2.061,40,0.569,41,1.052,42,0.898,43,0.981,51,0.524,52,0.03,53,0.483,54,0.388,55,0.481,61,0.862,62,0.777,63,1.207,75,0.975,76,0.819,78,0.524,81,0.975,82,0.23,83,0.23,85,2.321,105,0.777,112,0.96,116,0.838,117,0.903,118,0.838,119,1.404,120,1.404,121,0.975,122,1.801,123,0.975,124,2.239,125,0.72,126,1.709,127,0.975,128,0.72,129,0.975,130,0.72,131,0.975,132,0.72,133,1.909,134,0.975,135,0.72,136,0.975,137,0.72,138,0.975,139,1.41,140,0.975,141,0.666,142,0.975,143,0.72,144,0.975,145,0.72,146,0.975,147,0.975,148,0.012,149,0.017,150,0.012,159,2.082,173,0.975,184,1.233,211,3.374,219,1.138,226,3.678,258,1.526,284,1.604,305,2.868,402,1.93,408,2.106,411,2.868,412,1.548,413,2.701,438,3.282,574,2.868,577,3.282,606,3.282,664,2.868,706,2.868,748,3.847,763,1.99,765,2.278,773,3.282,849,2.278,850,4.647,851,3.91,852,3.91,853,3.91,854,3.91,855,4.583,856,3.91,857,4.583,858,5.537,859,5.015,860,3.91,861,2.714,862,2.714,863,2.714,864,3.282,865,3.91,866,2.714,867,4.583,868,3.282,869,2.714,870,2.714,871,2.714,872,2.714,873,3.91,874,2.714,875,1.776,876,5.015,877,3.282,878,3.91,879,3.91,880,3.91,881,3.91]],["title/components/PersonComponent.html",[0,0.317,141,0.806]],["body/components/PersonComponent.html",[0,0.61,1,0.863,2,1.178,3,0.276,4,0.239,5,1.083,6,1.083,7,1.169,8,1.169,9,0.204,11,0.314,26,1.595,27,1.96,28,1.169,29,1.595,31,1.595,33,0.239,36,1.008,37,2.204,40,0.682,41,1.262,42,0.952,43,0.896,51,0.628,52,0.03,53,0.524,54,0.376,55,0.577,61,0.528,62,0.931,76,0.748,77,3.211,78,0.628,79,2.723,81,1.169,82,0.276,83,0.276,86,3.728,105,0.931,116,1.004,117,1.083,118,1.004,119,1.595,120,1.595,121,1.169,122,1.951,123,1.169,124,2.307,125,0.863,126,1.811,127,1.169,128,0.863,129,1.169,130,0.863,131,1.169,132,0.863,133,2.042,134,1.169,135,0.863,136,1.169,137,0.863,138,1.169,139,0.863,140,1.169,141,1.396,142,1.169,143,0.863,144,1.169,145,0.863,146,1.169,147,1.169,148,0.014,149,0.02,150,0.014,233,3.257,293,2.626,480,4.559,516,3.728,609,3.728,677,2.296,811,3.728,882,2.731,883,3.728,884,4.441,885,4.441,886,4.441,887,4.441,888,3.728,889,4.441,890,4.441,891,5.056,892,4.441,893,4.441,894,3.254,895,3.254,896,4.441,897,4.441,898,4.441]],["title/components/RegisterComponent.html",[0,0.317,143,0.871]],["body/components/RegisterComponent.html",[0,0.399,1,0.606,2,0.913,3,0.194,4,0.168,5,0.76,6,0.76,7,0.82,8,0.82,9,0.143,11,0.477,14,0.913,26,1.236,27,1.607,28,0.82,29,1.236,31,1.236,33,0.168,34,0.664,35,1.732,36,0.781,37,1.919,38,2.035,40,0.478,41,0.885,42,0.844,43,1.008,45,1.854,51,0.799,52,0.03,53,0.575,54,0.391,55,0.734,61,0.748,62,1.186,63,1.716,75,1.488,76,0.613,78,0.441,81,0.82,82,0.194,83,0.194,85,1.443,94,1.443,105,0.653,112,1.133,114,1.699,116,0.705,117,0.76,118,0.705,119,1.236,120,1.236,121,0.82,122,1.657,123,0.82,124,2.167,125,0.606,126,1.716,127,0.82,128,0.606,129,0.82,130,0.606,131,0.82,132,0.606,133,1.488,134,0.82,135,0.606,136,0.82,137,0.606,138,0.82,139,0.606,140,0.82,141,0.561,142,0.82,143,1.223,144,0.82,145,0.606,146,0.82,147,0.82,148,0.01,149,0.015,150,0.01,173,0.82,218,2.889,271,0.957,361,2.253,369,1.23,408,1.854,412,1.817,420,1.869,421,1.657,424,1.236,432,1.443,468,2.525,522,2.889,523,1.917,524,2.889,525,2.525,526,2.889,527,3.039,528,1.917,529,1.917,530,2.889,531,2.889,532,2.889,533,1.917,534,1.917,536,1.675,538,1.917,540,2.253,541,2.253,543,2.253,548,1.917,567,2.889,667,2.525,673,1.699,674,1.699,675,1.699,677,2.096,682,2.035,684,2.035,685,2.035,686,2.568,689,1.919,752,3.872,763,1.675,796,1.917,868,2.889,875,3.239,883,2.889,899,1.917,900,3.443,901,3.443,902,3.443,903,4.144,904,4.144,905,3.443,906,4.144,907,4.144,908,4.144,909,2.284,910,2.284,911,2.284,912,2.284,913,2.284,914,2.284,915,2.284,916,2.284,917,2.284,918,2.284,919,2.284,920,2.284,921,2.284,922,3.443,923,2.284,924,3.443,925,2.284,926,3.443,927,2.284,928,3.443,929,3.443,930,2.284,931,3.443,932,2.284,933,3.443,934,3.443,935,3.443,936,2.284,937,3.443,938,3.443,939,2.284,940,2.284,941,2.284]],["title/interfaces/State.html",[219,1.377,401,0.871]],["body/interfaces/State.html",[3,0.318,4,0.276,9,0.235,11,0.362,14,0.996,33,0.276,34,0.943,52,0.03,54,0.318,61,0.609,76,0.556,82,0.528,112,1.412,148,0.017,149,0.022,150,0.017,219,2.761,258,1.985,271,2.049,279,2.221,398,3.212,401,1.296,402,3.073,403,1.707,404,2.221,405,3.153,406,3.984,407,3.984,408,2.024,409,3.153,410,3.153,411,2.756,412,1.677,413,2.024,414,3.984,415,4.102,416,3.198,417,3.526,418,2.89,419,3.212,420,1.349,421,1.349,422,2.89,423,2.89,424,1.755,425,2.458,426,2.458,427,3.153]],["title/components/ThankyouComponent.html",[0,0.317,145,0.871]],["body/components/ThankyouComponent.html",[0,0.484,1,0.852,2,1.167,3,0.272,4,0.236,5,1.069,6,1.069,7,1.153,8,1.153,9,0.201,26,1.58,27,1.947,28,1.153,29,1.58,31,1.58,33,0.236,34,0.849,35,1.945,36,0.999,37,2.194,38,2.602,40,0.673,41,1.245,42,0.948,43,0.957,51,0.62,52,0.03,53,0.521,54,0.373,55,0.569,61,0.521,62,0.919,63,1.55,76,0.864,78,0.62,81,1.153,82,0.272,83,0.272,105,0.919,112,1.08,116,0.991,117,1.069,118,0.991,119,1.58,120,1.58,121,1.153,122,1.94,123,1.153,124,2.268,125,0.852,126,1.804,127,1.153,128,0.852,129,1.153,130,0.852,131,1.153,132,0.852,133,1.803,134,1.153,135,0.852,136,1.153,137,0.852,138,1.153,139,0.852,140,1.153,141,0.788,142,1.153,143,0.852,144,1.153,145,1.501,146,1.153,147,1.153,148,0.014,149,0.019,150,0.014,158,2.355,159,1.999,183,1.459,184,1.459,250,4.389,266,2.194,280,2.355,283,2.355,447,3.683,448,4.534,767,2.355,942,2.695,943,5.021,944,4.401,945,5.659,946,4.401,947,3.211,948,3.211,949,3.211,950,3.211,951,5.021,952,3.211,953,3.211,954,3.211,955,3.211,956,4.401]],["title/guards/ThankyouResolver.html",[957,2.149,958,2.409]],["body/guards/ThankyouResolver.html",[3,0.355,4,0.308,9,0.262,26,1.503,33,0.308,36,1.189,40,0.877,41,1.623,42,1.02,43,0.928,51,1.01,52,0.03,53,0.505,54,0.444,55,0.928,60,3.426,61,0.679,76,0.886,78,0.808,81,1.503,82,0.355,83,0.355,85,2.396,105,1.198,112,1.028,116,1.292,148,0.018,149,0.023,150,0.018,183,1.901,202,1.743,266,1.623,447,4.191,664,3.841,767,3.07,957,2.739,958,4.191,959,4.186,960,3.513,961,6.165,962,4.186,963,5.237,964,5.988,965,4.186,966,3.841,967,5.237,968,4.186,969,4.186]],["title/coverage.html",[970,3.751]],["body/coverage.html",[0,0.601,1,0.793,9,0.187,10,2.509,42,0.679,52,0.03,54,0.253,66,5.387,79,1.61,83,0.355,125,0.793,128,0.793,130,0.793,132,0.793,135,0.793,137,0.793,139,0.793,141,0.734,143,0.793,145,0.793,148,0.013,149,0.018,150,0.013,151,2.476,153,2.509,154,3.071,177,0.793,187,2.509,188,2.509,202,1.836,203,1.956,205,2.509,219,1.253,244,1.61,245,2.192,248,1.956,258,0.995,266,1.159,322,1.767,325,1.956,328,2.192,329,2.192,335,2.74,386,3.515,401,1.556,402,1.475,404,3.47,417,3.097,419,1.767,422,1.767,423,1.767,425,1.956,426,1.956,428,2.509,549,2.509,570,2.509,600,2.509,671,1.61,672,2.97,683,1.61,689,1.159,690,1.475,698,2.509,699,2.509,700,2.509,704,2.509,737,2.509,745,2.509,766,2.192,800,2.509,849,2.509,875,4.241,882,2.509,899,2.509,942,2.509,957,1.956,958,2.192,960,2.509,970,2.509,971,2.989,972,2.989,973,2.989,974,4.188,975,4.188,976,4.188,977,4.188,978,4.188,979,5.989,980,4.188,981,4.396,982,5.515,983,2.509,984,6.381,985,2.509,986,3.515,987,2.989,988,2.989,989,4.834,990,4.834,991,4.188,992,2.989,993,4.834,994,4.834,995,2.989,996,2.989,997,2.989,998,2.989,999,2.509,1000,2.509,1001,2.989,1002,2.989,1003,2.989,1004,2.989,1005,2.989,1006,2.989,1007,2.989,1008,2.989,1009,2.989,1010,2.989,1011,3.842,1012,2.192,1013,2.509,1014,2.989,1015,2.509,1016,2.509,1017,2.989,1018,2.989]],["title/dependencies.html",[291,2.582,1019,2.749]],["body/dependencies.html",[52,0.03,78,0.827,148,0.019,149,0.023,150,0.019,183,1.947,184,1.947,189,2.805,275,3.144,284,3.142,291,2.805,293,2.535,311,4.461,312,3.898,315,2.805,322,2.535,323,3.144,324,3.144,334,3.598,338,3.598,339,3.598,344,3.598,345,4.237,346,3.598,353,4.461,354,3.598,355,4.461,361,2.805,1020,4.287,1021,6.414,1022,4.287,1023,6.039,1024,4.287,1025,4.287,1026,4.287,1027,4.287,1028,5.315,1029,4.287,1030,4.287,1031,4.287,1032,4.287,1033,4.287,1034,4.287,1035,4.287,1036,4.287,1037,4.287,1038,4.287,1039,4.287,1040,4.287,1041,4.287]],["title/miscellaneous/functions.html",[1042,1.799,1043,3.312]],["body/miscellaneous/functions.html",[33,0.344,51,0.903,52,0.028,53,0.451,55,0.829,61,1.009,112,1.149,148,0.021,149,0.025,150,0.021,219,2.516,226,4.112,258,1.558,402,2.767,404,2.766,412,1.444,416,3.668,417,3.314,418,3.314,419,3.549,422,3.549,423,3.549,1011,3.432,1012,4.112,1042,3.062,1043,3.927,1044,5.038,1045,3.927,1046,4.679]],["title/index.html",[33,0.202,1047,2.749,1048,2.749]],["body/index.html",[0,0.508,2,0.471,4,0.131,5,1.342,6,0.943,9,0.32,14,0.471,17,1.491,18,0.807,21,1.491,23,1.491,24,1.491,45,2.373,47,2.378,48,1.163,49,1.163,50,1.491,52,0.027,53,0.341,56,3.384,77,1.675,92,0.638,98,1.303,101,1.491,111,2.378,113,2.592,114,0.877,126,1.449,141,0.436,148,0.008,149,0.012,150,0.012,156,2.957,160,4.409,162,2.384,173,1.448,177,1.463,189,3.866,191,1.526,195,1.491,197,3.384,200,1.491,209,1.491,211,1.675,223,2.592,238,1.491,240,1.491,241,1.491,242,1.163,266,0.689,271,1.188,288,1.854,290,1.163,292,1.303,293,1.05,301,1.303,302,1.303,322,1.05,323,2.592,324,1.303,335,1.163,362,1.303,363,1.491,365,1.491,369,3.072,371,1.303,374,2.378,377,1.491,398,2.912,416,1.163,418,1.05,432,0.745,435,1.491,441,1.491,459,3.384,515,3.443,518,2.378,527,3.443,551,2.378,569,2.592,572,2.592,574,1.303,619,2.378,621,1.491,623,2.378,633,1.491,637,1.491,647,1.491,651,2.378,666,1.491,676,3.554,697,0.877,722,1.303,725,2.078,787,1.491,794,3.384,817,1.491,829,1.491,850,1.491,864,1.491,877,1.491,888,1.491,966,3.231,1049,1.777,1050,5.519,1051,2.833,1052,3.534,1053,2.833,1054,2.833,1055,1.777,1056,1.777,1057,1.777,1058,1.777,1059,1.777,1060,1.777,1061,2.833,1062,2.833,1063,1.777,1064,5.405,1065,1.777,1066,1.777,1067,1.777,1068,4.033,1069,1.777,1070,1.777,1071,3.534,1072,1.777,1073,2.833,1074,1.777,1075,1.777,1076,2.833,1077,1.777,1078,3.534,1079,1.777,1080,1.777,1081,1.777,1082,1.777,1083,4.695,1084,1.777,1085,1.777,1086,2.833,1087,1.777,1088,1.777,1089,1.777,1090,1.777,1091,1.777,1092,1.777,1093,1.777,1094,2.833,1095,1.777,1096,1.777,1097,3.534,1098,1.777,1099,2.833,1100,4.033,1101,2.833,1102,1.777,1103,4.033,1104,1.777,1105,1.777,1106,1.777,1107,1.777,1108,3.534,1109,1.777,1110,1.777,1111,1.777,1112,1.777,1113,1.777,1114,1.777,1115,1.777,1116,1.777,1117,1.777,1118,1.777,1119,1.777,1120,1.777,1121,4.033,1122,1.777,1123,1.777,1124,1.777,1125,1.777,1126,1.777,1127,1.777,1128,3.534,1129,1.777,1130,4.406,1131,5.115,1132,3.534,1133,2.833,1134,1.777,1135,1.777,1136,1.777,1137,2.833,1138,4.033,1139,1.777,1140,3.534,1141,2.833,1142,1.777,1143,2.833,1144,3.534,1145,2.833,1146,4.033,1147,1.777,1148,4.406,1149,1.777,1150,1.777,1151,1.777,1152,1.777,1153,3.534,1154,1.777,1155,1.777,1156,2.833,1157,1.777,1158,1.777,1159,1.777,1160,1.777,1161,1.777,1162,1.777,1163,1.777,1164,2.833,1165,4.695,1166,1.777,1167,4.406,1168,2.833,1169,4.033,1170,2.833,1171,2.833,1172,1.777,1173,4.406,1174,1.777,1175,1.777,1176,1.777,1177,1.777,1178,2.833,1179,1.777,1180,1.777,1181,3.534,1182,1.777,1183,1.777,1184,1.777,1185,4.695,1186,1.777,1187,1.777,1188,1.777,1189,1.777,1190,1.777,1191,1.777,1192,3.534,1193,2.833,1194,1.777,1195,1.777,1196,1.777,1197,1.777,1198,1.777,1199,1.777,1200,1.777,1201,1.777,1202,1.777,1203,1.777,1204,1.777,1205,2.833,1206,2.378,1207,1.777,1208,1.777,1209,1.777,1210,1.777,1211,1.777,1212,3.534,1213,2.833,1214,2.833,1215,2.833,1216,2.833,1217,4.406,1218,2.833,1219,1.777,1220,1.777,1221,1.777,1222,1.777,1223,3.534,1224,1.777,1225,2.833,1226,2.833,1227,2.833,1228,4.926,1229,1.777,1230,1.777,1231,2.833,1232,1.777,1233,1.777,1234,1.777,1235,2.833,1236,1.777,1237,1.777,1238,1.777,1239,1.777,1240,1.777,1241,2.833,1242,1.777,1243,1.777,1244,1.777,1245,1.777,1246,1.777,1247,1.777,1248,1.777,1249,1.777,1250,1.777,1251,1.777,1252,1.777,1253,2.833,1254,1.777,1255,1.777,1256,3.534,1257,1.777,1258,1.777,1259,2.833,1260,1.777,1261,1.777,1262,1.777,1263,1.777,1264,1.777,1265,1.777,1266,1.777,1267,1.777,1268,1.777,1269,1.777,1270,1.777,1271,1.777,1272,1.777,1273,1.777,1274,1.777,1275,1.777,1276,1.777,1277,1.777,1278,1.777,1279,1.777,1280,2.833,1281,1.777,1282,1.777,1283,1.777,1284,1.777,1285,1.777,1286,1.777,1287,1.777,1288,1.777,1289,1.777,1290,1.777,1291,1.777,1292,2.833,1293,1.777,1294,1.777,1295,1.777,1296,1.777,1297,1.777,1298,1.777,1299,1.777,1300,1.777,1301,1.777,1302,1.777,1303,1.777,1304,1.777,1305,1.777,1306,1.777,1307,3.534,1308,1.777,1309,1.777,1310,1.777,1311,1.777,1312,1.777,1313,1.777,1314,1.777,1315,1.777,1316,1.777,1317,1.777,1318,1.777,1319,1.777,1320,1.777,1321,1.777,1322,1.777,1323,1.491,1324,1.777,1325,1.777,1326,1.777,1327,1.777]],["title/modules.html",[290,2.924]],["body/modules.html",[52,0.026,148,0.023,149,0.026,150,0.023,289,3.406,290,3.406,312,3.818,345,3.818,1328,5.205,1329,5.205]],["title/overview.html",[1330,3.751]],["body/overview.html",[1,1.475,2,1.047,42,0.902,52,0.03,92,1.812,98,2.895,118,1.218,125,1.67,128,1.475,130,1.475,132,1.554,135,1.475,137,1.475,139,1.554,141,1.439,143,1.554,145,1.475,148,0.017,149,0.022,150,0.017,152,2.895,204,2.126,288,3.302,289,4.476,291,2.583,292,2.895,293,2.334,294,3.313,295,3.313,296,3.313,297,3.313,298,3.313,299,3.313,300,4.235,301,2.895,302,2.895,403,1.793,875,2.583,957,2.583,1330,3.313,1331,3.948,1332,3.948,1333,3.948]],["title/routes.html",[1334,3.751]],["body/routes.html",[52,0.026,148,0.023,149,0.026,150,0.023,1334,4.428]],["title/miscellaneous/variables.html",[1042,1.799,1335,3.312]],["body/miscellaneous/variables.html",[11,0.405,33,0.22,52,0.03,53,0.289,54,0.529,55,0.531,63,0.925,75,2.306,79,1.615,87,1.773,88,2.516,89,3.522,90,2.199,92,1.077,93,2.072,94,1.759,96,2.199,97,2.199,103,2.516,112,1.03,148,0.013,149,0.018,150,0.013,173,2.306,219,2.513,221,3.522,244,3.082,245,3.078,264,2.516,265,2.516,266,1.877,271,2.03,328,3.078,329,3.078,330,3.522,335,3.432,369,2.261,388,2.516,402,1.48,404,1.773,406,3.551,407,3.551,412,0.925,419,1.773,420,1.077,421,1.077,422,1.773,423,1.773,425,3.168,426,2.746,431,2.516,432,1.257,672,1.615,673,1.48,674,1.48,675,1.48,677,1.362,680,1.773,686,1.48,689,1.163,690,2.072,691,1.615,692,1.615,693,2.261,694,1.615,695,1.615,696,1.615,697,1.48,766,3.078,774,2.516,775,3.522,966,2.199,981,2.516,983,3.522,985,4.064,986,2.516,999,2.516,1000,3.522,1011,2.199,1012,3.078,1013,3.522,1015,2.516,1016,2.516,1042,1.962,1044,3.522,1045,4.064,1206,3.522,1323,2.516,1335,2.516,1336,2.998,1337,2.998,1338,2.998,1339,5.245,1340,4.197,1341,2.998,1342,4.197,1343,4.842,1344,2.998,1345,4.842,1346,2.998,1347,2.998,1348,2.998,1349,2.998,1350,2.998,1351,2.998,1352,2.998,1353,2.998,1354,2.998,1355,2.998,1356,2.998,1357,2.998,1358,2.998,1359,2.998,1360,2.998,1361,2.998,1362,2.998,1363,2.998,1364,2.998,1365,2.998]]],"invertedIndex":[["",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":875,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.10.1",{"_index":1041,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":1026,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":1029,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":984,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1001,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":998,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1004,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":92,"title":{"classes/ActivatedRouteStub-1.html":{},"injectables/Logger-1.html":{}},"body":{"components/AboutComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.15.0",{"_index":1036,"title":{},"body":{"dependencies.html":{}}}],["1.2.21",{"_index":1027,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1039,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":982,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":977,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":990,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":978,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":992,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":997,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":979,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":1331,"title":{},"body":{"overview.html":{}}}],["16",{"_index":996,"title":{},"body":{"coverage.html":{}}}],["180",{"_index":544,"title":{},"body":{"components/ContactComponent.html":{}}}],["2",{"_index":98,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{},"overview.html":{}}}],["2/10",{"_index":995,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1008,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":1003,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":991,"title":{},"body":{"coverage.html":{}}}],["2019",{"_index":590,"title":{},"body":{"components/FooterComponent.html":{}}}],["25",{"_index":386,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["28",{"_index":1002,"title":{},"body":{"coverage.html":{}}}],["2em",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["3.4.1",{"_index":1034,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1014,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1010,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":975,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":994,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["305",{"_index":542,"title":{},"body":{"components/ContactComponent.html":{}}}],["33",{"_index":989,"title":{},"body":{"coverage.html":{}}}],["330px",{"_index":792,"title":{},"body":{"components/LoginComponent.html":{}}}],["4.3.1",{"_index":1030,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":980,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1006,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":799,"title":{},"body":{"components/LoginComponent.html":{}}}],["42",{"_index":993,"title":{},"body":{"coverage.html":{}}}],["42a948",{"_index":533,"title":{},"body":{"components/ContactComponent.html":{},"components/RegisterComponent.html":{}}}],["480px",{"_index":663,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["4px",{"_index":537,"title":{},"body":{"components/ContactComponent.html":{}}}],["5",{"_index":1332,"title":{},"body":{"overview.html":{}}}],["5.10.1",{"_index":1028,"title":{},"body":{"dependencies.html":{}}}],["5.2.4",{"_index":1032,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":976,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["500px",{"_index":798,"title":{},"body":{"components/LoginComponent.html":{}}}],["5px",{"_index":532,"title":{},"body":{"components/ContactComponent.html":{},"components/RegisterComponent.html":{}}}],["6.5.2",{"_index":1037,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":974,"title":{},"body":{"coverage.html":{}}}],["63",{"_index":987,"title":{},"body":{"coverage.html":{}}}],["640px",{"_index":668,"title":{},"body":{"components/HomeComponent.html":{}}}],["66",{"_index":1007,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1333,"title":{},"body":{"overview.html":{}}}],["7/11",{"_index":988,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1009,"title":{},"body":{"coverage.html":{}}}],["8.1.2",{"_index":1054,"title":{},"body":{"index.html":{}}}],["8.2.0",{"_index":1023,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":1021,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":1005,"title":{},"body":{"coverage.html":{}}}],["80px",{"_index":937,"title":{},"body":{"components/RegisterComponent.html":{}}}],["85px",{"_index":938,"title":{},"body":{"components/RegisterComponent.html":{}}}],["_debugmode",{"_index":709,"title":{},"body":{"injectables/Logger.html":{},"injectables/Logger-1.html":{}}}],["a94442",{"_index":941,"title":{},"body":{"components/RegisterComponent.html":{}}}],["abcdef123456",{"_index":692,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["about.component.css",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.html",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"coverage.html":{},"overview.html":{}}}],["abstractcontrol",{"_index":485,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{}}}],["accessors",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["accumulated",{"_index":655,"title":{},"body":{"components/HomeComponent.html":{}}}],["action",{"_index":226,"title":{},"body":{"injectables/AppEffects.html":{},"components/NavbarComponent.html":{},"miscellaneous/functions.html":{}}}],["action.effects",{"_index":239,"title":{},"body":{"injectables/AppEffects.html":{}}}],["action.principal",{"_index":256,"title":{},"body":{"injectables/AppEffects.html":{}}}],["actionreducermap",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions",{"_index":221,"title":{},"body":{"injectables/AppEffects.html":{},"miscellaneous/variables.html":{}}}],["actions/login.action",{"_index":764,"title":{},"body":{"components/LoginComponent.html":{}}}],["activatedroute",{"_index":448,"title":{},"body":{"components/ContactComponent.html":{},"components/ThankyouComponent.html":{}}}],["activatedroutesnapshot",{"_index":964,"title":{},"body":{"guards/ThankyouResolver.html":{}}}],["activatedroutestub",{"_index":151,"title":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"coverage.html":{}}}],["activateroute",{"_index":155,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["activity",{"_index":1152,"title":{},"body":{"index.html":{}}}],["actual",{"_index":484,"title":{},"body":{"components/ContactComponent.html":{}}}],["actual_component",{"_index":147,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["add",{"_index":162,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["added",{"_index":1247,"title":{},"body":{"index.html":{}}}],["adding",{"_index":1211,"title":{},"body":{"index.html":{}}}],["address",{"_index":522,"title":{},"body":{"components/ContactComponent.html":{},"components/RegisterComponent.html":{}}}],["adds",{"_index":1191,"title":{},"body":{"index.html":{}}}],["advertise",{"_index":654,"title":{},"body":{"components/HomeComponent.html":{}}}],["ahead",{"_index":1278,"title":{},"body":{"index.html":{}}}],["align",{"_index":545,"title":{},"body":{"components/ContactComponent.html":{}}}],["allow",{"_index":431,"title":{},"body":{"components/ContactComponent.html":{},"miscellaneous/variables.html":{}}}],["allowed",{"_index":433,"title":{},"body":{"components/ContactComponent.html":{}}}],["allowing",{"_index":216,"title":{},"body":{"injectables/AppEffects.html":{}}}],["allows",{"_index":883,"title":{},"body":{"components/PersonComponent.html":{},"components/RegisterComponent.html":{}}}],["along",{"_index":210,"title":{},"body":{"injectables/AppEffects.html":{}}}],["always",{"_index":1221,"title":{},"body":{"index.html":{}}}],["amd",{"_index":1113,"title":{},"body":{"index.html":{}}}],["angular",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1020,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1022,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoginService.html":{}}}],["angular/compiler",{"_index":1024,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":315,"title":{},"body":{"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":183,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"dependencies.html":{}}}],["another",{"_index":878,"title":{},"body":{"components/NavbarComponent.html":{}}}],["anyone",{"_index":526,"title":{},"body":{"components/ContactComponent.html":{},"components/RegisterComponent.html":{}}}],["api",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["api/login",{"_index":825,"title":{},"body":{"injectables/LoginService.html":{}}}],["app",{"_index":126,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"index.html":{}}}],["app.component",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["app.effects",{"_index":332,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/index",{"_index":342,"title":{},"body":{"modules/AppModule.html":{}}}],["appactions",{"_index":276,"title":{},"body":{"injectables/AppEffects.html":{},"components/LoginComponent.html":{}}}],["appactions.logger",{"_index":247,"title":{},"body":{"injectables/AppEffects.html":{}}}],["appactions.loginsuccess({userprofile",{"_index":262,"title":{},"body":{"injectables/AppEffects.html":{}}}],["appcomponent",{"_index":125,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appeffects",{"_index":203,"title":{"injectables/AppEffects.html":{}},"body":{"injectables/AppEffects.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppState.html":{},"components/ContactComponent.html":{},"interfaces/State.html":{},"index.html":{}}}],["application/json",{"_index":842,"title":{},"body":{"injectables/LoginService.html":{}}}],["apply",{"_index":459,"title":{},"body":{"components/ContactComponent.html":{},"index.html":{}}}],["appmodule",{"_index":289,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":576,"title":{},"body":{"components/FooterComponent.html":{}}}],["approutes",{"_index":340,"title":{},"body":{"modules/AppModule.html":{}}}],["apps",{"_index":1086,"title":{},"body":{"index.html":{}}}],["appstate",{"_index":402,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{},"components/NavbarComponent.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["argument",{"_index":812,"title":{},"body":{"injectables/LoginService.html":{}}}],["arguments",{"_index":1129,"title":{},"body":{"index.html":{}}}],["around",{"_index":436,"title":{},"body":{"components/ContactComponent.html":{}}}],["artifacts",{"_index":1207,"title":{},"body":{"index.html":{}}}],["asks",{"_index":1276,"title":{},"body":{"index.html":{}}}],["assets/images/1.png",{"_index":103,"title":{},"body":{"components/AboutComponent.html":{},"miscellaneous/variables.html":{}}}],["assets/images/bb.jpg",{"_index":100,"title":{},"body":{"components/AboutComponent.html":{}}}],["assets/images/ss.jpg",{"_index":95,"title":{},"body":{"components/AboutComponent.html":{}}}],["asynchronous",{"_index":238,"title":{},"body":{"injectables/AppEffects.html":{},"index.html":{}}}],["authorization",{"_index":843,"title":{},"body":{"injectables/LoginService.html":{}}}],["authorizationdata",{"_index":840,"title":{},"body":{"injectables/LoginService.html":{}}}],["authors",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{}}}],["automatically",{"_index":1202,"title":{},"body":{"index.html":{}}}],["available",{"_index":1288,"title":{},"body":{"index.html":{}}}],["aware",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{}}}],["away",{"_index":604,"title":{},"body":{"components/HomeComponent.html":{}}}],["babel",{"_index":1117,"title":{},"body":{"index.html":{}}}],["background",{"_index":601,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["bar",{"_index":1265,"title":{},"body":{"index.html":{}}}],["based",{"_index":230,"title":{},"body":{"injectables/AppEffects.html":{}}}],["baseloginurl",{"_index":801,"title":{},"body":{"injectables/LoginService.html":{}}}],["basic",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"injectables/LoginService.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["before",{"_index":966,"title":{},"body":{"guards/ThankyouResolver.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["beforeeach(async",{"_index":1317,"title":{},"body":{"index.html":{}}}],["behavior",{"_index":1308,"title":{},"body":{"index.html":{}}}],["behind",{"_index":1056,"title":{},"body":{"index.html":{}}}],["being",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["better",{"_index":829,"title":{},"body":{"injectables/LoginService.html":{},"index.html":{}}}],["bhawna",{"_index":99,"title":{},"body":{"components/AboutComponent.html":{}}}],["binded",{"_index":495,"title":{},"body":{"components/ContactComponent.html":{}}}],["binding",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["blogs",{"_index":1272,"title":{},"body":{"index.html":{}}}],["body",{"_index":610,"title":{},"body":{"components/HomeComponent.html":{}}}],["boilerplate",{"_index":1082,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":408,"title":{},"body":{"interfaces/AppState.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{}}}],["bootstrap",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"components/PersonComponent.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["bootstrapped",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["bootstrapping",{"_index":1110,"title":{},"body":{"index.html":{}}}],["border",{"_index":530,"title":{},"body":{"components/ContactComponent.html":{},"components/RegisterComponent.html":{}}}],["boxsize",{"_index":797,"title":{},"body":{"components/LoginComponent.html":{}}}],["branch",{"_index":1217,"title":{},"body":{"index.html":{}}}],["brand",{"_index":577,"title":{},"body":{"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["brands",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["browse",{"_index":1329,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["btoa(username",{"_index":841,"title":{},"body":{"injectables/LoginService.html":{}}}],["build",{"_index":515,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["building",{"_index":1094,"title":{},"body":{"index.html":{}}}],["built",{"_index":435,"title":{},"body":{"components/ContactComponent.html":{},"index.html":{}}}],["bulk",{"_index":519,"title":{},"body":{"components/ContactComponent.html":{}}}],["button[type=\"submit",{"_index":795,"title":{},"body":{"components/LoginComponent.html":{}}}],["c",{"_index":1134,"title":{},"body":{"index.html":{}}}],["called",{"_index":117,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["capabilities",{"_index":1069,"title":{},"body":{"index.html":{}}}],["capability",{"_index":717,"title":{},"body":{"injectables/Logger.html":{},"injectables/Logger-1.html":{},"injectables/LoginService.html":{}}}],["caps",{"_index":596,"title":{},"body":{"components/FooterComponent.html":{}}}],["card",{"_index":516,"title":{},"body":{"components/ContactComponent.html":{},"components/PersonComponent.html":{}}}],["card's",{"_index":520,"title":{},"body":{"components/ContactComponent.html":{}}}],["card\\'s",{"_index":547,"title":{},"body":{"components/ContactComponent.html":{}}}],["cards",{"_index":890,"title":{},"body":{"components/PersonComponent.html":{}}}],["cascading",{"_index":1262,"title":{},"body":{"index.html":{}}}],["case",{"_index":1249,"title":{},"body":{"index.html":{}}}],["catcherror",{"_index":281,"title":{},"body":{"injectables/AppEffects.html":{},"injectables/LoginService.html":{}}}],["catcherror(message",{"_index":263,"title":{},"body":{"injectables/AppEffects.html":{}}}],["catcherror(this.handleerror('login",{"_index":839,"title":{},"body":{"injectables/LoginService.html":{}}}],["center",{"_index":546,"title":{},"body":{"components/ContactComponent.html":{}}}],["change",{"_index":1204,"title":{},"body":{"index.html":{}}}],["changes",{"_index":1228,"title":{},"body":{"index.html":{}}}],["chceck",{"_index":1222,"title":{},"body":{"index.html":{}}}],["check",{"_index":664,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"guards/ThankyouResolver.html":{}}}],["checked",{"_index":1293,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":1232,"title":{},"body":{"index.html":{}}}],["choice",{"_index":1101,"title":{},"body":{"index.html":{}}}],["choose",{"_index":1273,"title":{},"body":{"index.html":{}}}],["chose",{"_index":1284,"title":{},"body":{"index.html":{}}}],["chronology",{"_index":1096,"title":{},"body":{"index.html":{}}}],["clarity",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{}}}],["class",{"_index":83,"title":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"coverage.html":{}}}],["classes",{"_index":152,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"overview.html":{}}}],["cli",{"_index":1052,"title":{},"body":{"index.html":{}}}],["client",{"_index":1098,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1083,"title":{},"body":{"index.html":{}}}],["collate",{"_index":648,"title":{},"body":{"components/HomeComponent.html":{}}}],["collection",{"_index":1133,"title":{},"body":{"index.html":{}}}],["collective",{"_index":649,"title":{},"body":{"components/HomeComponent.html":{}}}],["color",{"_index":790,"title":{},"body":{"components/LoginComponent.html":{}}}],["command",{"_index":1128,"title":{},"body":{"index.html":{}}}],["commands",{"_index":1063,"title":{},"body":{"index.html":{}}}],["comment",{"_index":441,"title":{},"body":{"components/ContactComponent.html":{},"index.html":{}}}],["commentator",{"_index":478,"title":{},"body":{"components/ContactComponent.html":{}}}],["comments",{"_index":483,"title":{},"body":{"components/ContactComponent.html":{}}}],["commit",{"_index":1064,"title":{},"body":{"index.html":{}}}],["committed",{"_index":1231,"title":{},"body":{"index.html":{}}}],["committed)add",{"_index":1239,"title":{},"body":{"index.html":{}}}],["common",{"_index":1084,"title":{},"body":{"index.html":{}}}],["commonjs",{"_index":1112,"title":{},"body":{"index.html":{}}}],["communication",{"_index":1070,"title":{},"body":{"index.html":{}}}],["compilation",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["compilecomponents",{"_index":1319,"title":{},"body":{"index.html":{}}}],["complete",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":123,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["componentfixture",{"_index":1296,"title":{},"body":{"index.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"index.html":{},"overview.html":{}}}],["components/index",{"_index":277,"title":{},"body":{"injectables/AppEffects.html":{},"injectables/LoginService.html":{}}}],["component’s",{"_index":1302,"title":{},"body":{"index.html":{}}}],["concepts",{"_index":207,"title":{},"body":{"injectables/AppEffects.html":{}}}],["condition",{"_index":453,"title":{},"body":{"components/ContactComponent.html":{}}}],["confirm",{"_index":933,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword",{"_index":908,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword(value",{"_index":932,"title":{},"body":{"components/RegisterComponent.html":{}}}],["connects",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["consistent",{"_index":1092,"title":{},"body":{"index.html":{}}}],["console",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"index.html":{}}}],["console.error(this.dateinstance.getdate",{"_index":733,"title":{},"body":{"injectables/Logger.html":{},"injectables/Logger-1.html":{}}}],["console.log",{"_index":287,"title":{},"body":{"injectables/AppEffects.html":{},"injectables/LoginService.html":{}}}],["console.log(this.dateinstance.getdate",{"_index":732,"title":{},"body":{"injectables/Logger.html":{},"injectables/Logger-1.html":{}}}],["console.warn(this.dateinstance.getdate",{"_index":734,"title":{},"body":{"injectables/Logger.html":{},"injectables/Logger-1.html":{}}}],["const",{"_index":424,"title":{},"body":{"interfaces/AppState.html":{},"components/ContactComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{}}}],["constants/variables.constant",{"_index":767,"title":{},"body":{"components/LoginComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{}}}],["constructor",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{}}}],["constructor(actions",{"_index":246,"title":{},"body":{"injectables/AppEffects.html":{}}}],["constructor(http",{"_index":805,"title":{},"body":{"injectables/LoginService.html":{}}}],["constructor(initialparams",{"_index":168,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["constructor(logger",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{}}}],["constructor(loggerservice",{"_index":582,"title":{},"body":{"components/FooterComponent.html":{}}}],["constructor(logservice",{"_index":611,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(private",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{}}}],["consult",{"_index":568,"title":{},"body":{"components/ErrorpageComponent.html":{}}}],["consumption",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoginService.html":{}}}],["contact",{"_index":438,"title":{},"body":{"components/ContactComponent.html":{},"components/NavbarComponent.html":{}}}],["contact'},{'name",{"_index":129,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["contact.component.css",{"_index":439,"title":{},"body":{"components/ContactComponent.html":{}}}],["contact.component.html",{"_index":440,"title":{},"body":{"components/ContactComponent.html":{}}}],["contactcomponent",{"_index":128,"title":{"components/ContactComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contacted",{"_index":434,"title":{},"body":{"components/ContactComponent.html":{}}}],["contactform",{"_index":442,"title":{},"body":{"components/ContactComponent.html":{}}}],["contain",{"_index":573,"title":{},"body":{"components/FooterComponent.html":{}}}],["content",{"_index":521,"title":{},"body":{"components/ContactComponent.html":{},"injectables/LoginService.html":{}}}],["context",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppModule.html":{}}}],["continue",{"_index":822,"title":{},"body":{"injectables/LoginService.html":{}}}],["contributing",{"_index":1109,"title":{},"body":{"index.html":{}}}],["contributors",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{}}}],["control",{"_index":493,"title":{},"body":{"components/ContactComponent.html":{}}}],["converttoparammap",{"_index":182,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["copy",{"_index":636,"title":{},"body":{"components/HomeComponent.html":{}}}],["copyright",{"_index":589,"title":{},"body":{"components/FooterComponent.html":{}}}],["core",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["correct",{"_index":458,"title":{},"body":{"components/ContactComponent.html":{}}}],["cover",{"_index":1267,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":970,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crave",{"_index":618,"title":{},"body":{"components/HomeComponent.html":{}}}],["cravings",{"_index":630,"title":{},"body":{"components/HomeComponent.html":{}}}],["create",{"_index":1103,"title":{},"body":{"index.html":{}}}],["createaction('[login",{"_index":1343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction('[logout",{"_index":1348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["created",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["createdb",{"_index":701,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["createeffect",{"_index":252,"title":{},"body":{"injectables/AppEffects.html":{}}}],["createreducer",{"_index":1350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":1138,"title":{},"body":{"index.html":{}}}],["creating",{"_index":888,"title":{},"body":{"components/PersonComponent.html":{},"index.html":{}}}],["creation",{"_index":1127,"title":{},"body":{"index.html":{}}}],["crowd",{"_index":635,"title":{},"body":{"components/HomeComponent.html":{}}}],["css",{"_index":460,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{}}}],["current",{"_index":876,"title":{},"body":{"components/NavbarComponent.html":{}}}],["currentuser",{"_index":748,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["cursive",{"_index":594,"title":{},"body":{"components/FooterComponent.html":{}}}],["cypress",{"_index":1315,"title":{},"body":{"index.html":{}}}],["d",{"_index":1149,"title":{},"body":{"index.html":{}}}],["data.service",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["data.service.ts",{"_index":700,"title":{},"body":{"injectables/InMemoryDataService.html":{},"coverage.html":{}}}],["data.service.ts:8",{"_index":702,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["dataencapsulation",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":725,"title":{},"body":{"injectables/Logger.html":{},"injectables/Logger-1.html":{},"index.html":{}}}],["dateinstance",{"_index":710,"title":{},"body":{"injectables/Logger.html":{},"injectables/Logger-1.html":{}}}],["debugmode",{"_index":713,"title":{},"body":{"injectables/Logger.html":{},"injectables/Logger-1.html":{}}}],["debugmode(value",{"_index":736,"title":{},"body":{"injectables/Logger.html":{},"injectables/Logger-1.html":{}}}],["decide",{"_index":631,"title":{},"body":{"components/HomeComponent.html":{}}}],["decided",{"_index":1322,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["declarative",{"_index":455,"title":{},"body":{"components/ContactComponent.html":{}}}],["declared",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["decrease",{"_index":212,"title":{},"body":{"injectables/AppEffects.html":{}}}],["default",{"_index":173,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1142,"title":{},"body":{"index.html":{}}}],["defined",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{}}}],["definition",{"_index":1114,"title":{},"body":{"index.html":{}}}],["delay",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["delete",{"_index":1197,"title":{},"body":{"index.html":{}}}],["denote",{"_index":410,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/State.html":{}}}],["dependencies",{"_index":291,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":1073,"title":{},"body":{"index.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["descriptionstr",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{}}}],["descriptionstr(value",{"_index":115,"title":{},"body":{"components/AboutComponent.html":{}}}],["details",{"_index":432,"title":{},"body":{"components/ContactComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"components/RegisterComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dev",{"_index":1200,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":1078,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["dilemma",{"_index":1283,"title":{},"body":{"index.html":{}}}],["dimcheck",{"_index":670,"title":{},"body":{"components/HomeComponent.html":{}}}],["directive",{"_index":121,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["directives",{"_index":146,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["directory",{"_index":1146,"title":{},"body":{"index.html":{}}}],["dirty",{"_index":1251,"title":{},"body":{"index.html":{}}}],["disables",{"_index":1143,"title":{},"body":{"index.html":{}}}],["discard",{"_index":1233,"title":{},"body":{"index.html":{}}}],["dispatch",{"_index":220,"title":{},"body":{"injectables/AppEffects.html":{}}}],["dispatched",{"_index":227,"title":{},"body":{"injectables/AppEffects.html":{}}}],["display",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["displaying",{"_index":553,"title":{},"body":{"components/ErrorpageComponent.html":{}}}],["dist",{"_index":1209,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":971,"title":{},"body":{"coverage.html":{}}}],["dologin",{"_index":751,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["done",{"_index":232,"title":{},"body":{"injectables/AppEffects.html":{}}}],["double",{"_index":157,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["driven",{"_index":1309,"title":{},"body":{"index.html":{}}}],["dry",{"_index":1147,"title":{},"body":{"index.html":{}}}],["dummyuser",{"_index":690,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/LoginService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":1025,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1218,"title":{},"body":{"index.html":{}}}],["each",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["effects",{"_index":208,"title":{},"body":{"injectables/AppEffects.html":{}}}],["effectsmodule",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["effectsmodule.forroot([appeffects",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["efforts",{"_index":646,"title":{},"body":{"components/HomeComponent.html":{}}}],["element",{"_index":120,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["elements",{"_index":494,"title":{},"body":{"components/ContactComponent.html":{}}}],["eliminating",{"_index":1080,"title":{},"body":{"index.html":{}}}],["email",{"_index":420,"title":{},"body":{"interfaces/AppState.html":{},"components/ContactComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["email.invalid",{"_index":511,"title":{},"body":{"components/ContactComponent.html":{}}}],["email.touched",{"_index":510,"title":{},"body":{"components/ContactComponent.html":{}}}],["employ",{"_index":1061,"title":{},"body":{"index.html":{}}}],["employed",{"_index":637,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["empty",{"_index":418,"title":{},"body":{"interfaces/AppState.html":{},"injectables/LoginService.html":{},"interfaces/State.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["enable",{"_index":1155,"title":{},"body":{"index.html":{}}}],["enabletracing",{"_index":368,"title":{},"body":{"modules/AppModule.html":{}}}],["encapsulation",{"_index":1193,"title":{},"body":{"index.html":{}}}],["encouraging",{"_index":1118,"title":{},"body":{"index.html":{}}}],["end",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["energies",{"_index":650,"title":{},"body":{"components/HomeComponent.html":{}}}],["engine",{"_index":1159,"title":{},"body":{"index.html":{}}}],["engineer",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{},"miscellaneous/variables.html":{}}}],["enhances",{"_index":1075,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":1105,"title":{},"body":{"index.html":{}}}],["environment",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":388,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":550,"title":{},"body":{"components/ErrorpageComponent.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"injectables/LoginService.html":{}}}],["error(msg",{"_index":715,"title":{},"body":{"injectables/Logger.html":{},"injectables/Logger-1.html":{}}}],["error.message",{"_index":833,"title":{},"body":{"injectables/LoginService.html":{}}}],["error:403",{"_index":564,"title":{},"body":{"components/ErrorpageComponent.html":{}}}],["errorinput",{"_index":535,"title":{},"body":{"components/ContactComponent.html":{}}}],["errorpage",{"_index":559,"title":{},"body":{"components/ErrorpageComponent.html":{}}}],["errorpage'},{'name",{"_index":131,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["errorpage.component.css",{"_index":560,"title":{},"body":{"components/ErrorpageComponent.html":{}}}],["errorpage.component.html",{"_index":561,"title":{},"body":{"components/ErrorpageComponent.html":{}}}],["errorpagecomponent",{"_index":130,"title":{"components/ErrorpageComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"coverage.html":{},"overview.html":{}}}],["etc",{"_index":1316,"title":{},"body":{"index.html":{}}}],["event",{"_index":464,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{}}}],["everyone",{"_index":1275,"title":{},"body":{"index.html":{}}}],["everything",{"_index":1198,"title":{},"body":{"index.html":{}}}],["example",{"_index":513,"title":{},"body":{"components/ContactComponent.html":{}}}],["execute",{"_index":1213,"title":{},"body":{"index.html":{}}}],["exercise",{"_index":643,"title":{},"body":{"components/HomeComponent.html":{}}}],["exhaustmap",{"_index":282,"title":{},"body":{"injectables/AppEffects.html":{}}}],["exhaustmap((principal",{"_index":257,"title":{},"body":{"injectables/AppEffects.html":{}}}],["existing",{"_index":1164,"title":{},"body":{"index.html":{}}}],["expectation",{"_index":1261,"title":{},"body":{"index.html":{}}}],["expected",{"_index":901,"title":{},"body":{"components/RegisterComponent.html":{}}}],["experience",{"_index":628,"title":{},"body":{"components/HomeComponent.html":{}}}],["expertise",{"_index":1289,"title":{},"body":{"index.html":{}}}],["explore",{"_index":1312,"title":{},"body":{"index.html":{}}}],["export",{"_index":82,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{}}}],["exports",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["exposed",{"_index":810,"title":{},"body":{"injectables/LoginService.html":{}}}],["expression",{"_index":452,"title":{},"body":{"components/ContactComponent.html":{}}}],["extension",{"_index":1187,"title":{},"body":{"index.html":{}}}],["external",{"_index":1170,"title":{},"body":{"index.html":{}}}],["f",{"_index":1161,"title":{},"body":{"index.html":{}}}],["faanchor",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["fablogger",{"_index":350,"title":{},"body":{"modules/AppModule.html":{}}}],["facilitates",{"_index":1091,"title":{},"body":{"index.html":{}}}],["fafacebook",{"_index":351,"title":{},"body":{"modules/AppModule.html":{}}}],["fagit",{"_index":349,"title":{},"body":{"modules/AppModule.html":{}}}],["fagoogle",{"_index":352,"title":{},"body":{"modules/AppModule.html":{}}}],["failed",{"_index":821,"title":{},"body":{"injectables/LoginService.html":{}}}],["failure",{"_index":264,"title":{},"body":{"injectables/AppEffects.html":{},"miscellaneous/variables.html":{}}}],["falinkedin",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["false",{"_index":271,"title":{},"body":{"injectables/AppEffects.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":593,"title":{},"body":{"components/FooterComponent.html":{}}}],["fasigninalt",{"_index":359,"title":{},"body":{"modules/AppModule.html":{}}}],["fasignoutalt",{"_index":360,"title":{},"body":{"modules/AppModule.html":{}}}],["fathumbsdown",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["fathumbsup",{"_index":357,"title":{},"body":{"modules/AppModule.html":{}}}],["fatwitter",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["feature",{"_index":1065,"title":{},"body":{"index.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":1165,"title":{},"body":{"index.html":{}}}],["filter",{"_index":228,"title":{},"body":{"injectables/AppEffects.html":{}}}],["fires",{"_index":756,"title":{},"body":{"components/LoginComponent.html":{}}}],["first",{"_index":684,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"components/RegisterComponent.html":{}}}],["firstname",{"_index":902,"title":{},"body":{"components/RegisterComponent.html":{}}}],["flag",{"_index":1210,"title":{},"body":{"index.html":{}}}],["float",{"_index":796,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["folder",{"_index":1100,"title":{},"body":{"index.html":{}}}],["followed",{"_index":1241,"title":{},"body":{"index.html":{}}}],["following",{"_index":1285,"title":{},"body":{"index.html":{}}}],["font",{"_index":592,"title":{},"body":{"components/FooterComponent.html":{}}}],["fontawesome",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["footer",{"_index":571,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":134,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["footer.component.css",{"_index":580,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":581,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":132,"title":{"components/FooterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"coverage.html":{},"overview.html":{}}}],["force",{"_index":1160,"title":{},"body":{"index.html":{}}}],["forces",{"_index":1162,"title":{},"body":{"index.html":{}}}],["forgot",{"_index":789,"title":{},"body":{"components/LoginComponent.html":{}}}],["form",{"_index":430,"title":{},"body":{"components/ContactComponent.html":{}}}],["formcontrol",{"_index":469,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{}}}],["formgroup",{"_index":471,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{}}}],["formlogin",{"_index":749,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodule",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["fortawesome/angular",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fortawesome/free",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["found",{"_index":566,"title":{},"body":{"components/ErrorpageComponent.html":{}}}],["framework",{"_index":1068,"title":{},"body":{"index.html":{}}}],["frameworks",{"_index":1174,"title":{},"body":{"index.html":{}}}],["free",{"_index":622,"title":{},"body":{"components/HomeComponent.html":{}}}],["free.time",{"_index":617,"title":{},"body":{"components/HomeComponent.html":{}}}],["freetime",{"_index":1049,"title":{},"body":{"index.html":{}}}],["friend",{"_index":638,"title":{},"body":{"components/HomeComponent.html":{}}}],["ft",{"_index":133,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["function",{"_index":417,"title":{},"body":{"interfaces/AppState.html":{},"components/ContactComponent.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functionality",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["functions",{"_index":1043,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["futile",{"_index":642,"title":{},"body":{"components/HomeComponent.html":{}}}],["g",{"_index":1182,"title":{},"body":{"index.html":{}}}],["generalize",{"_index":603,"title":{},"body":{"components/HomeComponent.html":{}}}],["generate",{"_index":1140,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1051,"title":{},"body":{"index.html":{}}}],["generates",{"_index":1180,"title":{},"body":{"index.html":{}}}],["generating",{"_index":1136,"title":{},"body":{"index.html":{}}}],["getbasicheader",{"_index":802,"title":{},"body":{"injectables/LoginService.html":{}}}],["getbasicheader(username",{"_index":813,"title":{},"body":{"injectables/LoginService.html":{}}}],["getconfirmpassword",{"_index":918,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getdebugmode",{"_index":727,"title":{},"body":{"injectables/Logger.html":{},"injectables/Logger-1.html":{}}}],["getdescriptionstr",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{}}}],["getemptyappstate",{"_index":423,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getemptystate",{"_index":422,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getemptyuser",{"_index":419,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getmessagestring",{"_index":948,"title":{},"body":{"components/ThankyouComponent.html":{}}}],["gets",{"_index":1250,"title":{},"body":{"index.html":{}}}],["getter",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{}}}],["getting",{"_index":1047,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":914,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getuseremail",{"_index":858,"title":{},"body":{"components/NavbarComponent.html":{}}}],["git",{"_index":676,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"index.html":{}}}],["gitprofile",{"_index":673,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["giturl",{"_index":97,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/IProfile.html":{},"miscellaneous/variables.html":{}}}],["give",{"_index":1225,"title":{},"body":{"index.html":{}}}],["gives",{"_index":1297,"title":{},"body":{"index.html":{}}}],["global",{"_index":415,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/State.html":{}}}],["go",{"_index":1306,"title":{},"body":{"index.html":{}}}],["good",{"_index":1323,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["google",{"_index":679,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{}}}],["googleprofile",{"_index":674,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["green",{"_index":534,"title":{},"body":{"components/ContactComponent.html":{},"components/RegisterComponent.html":{}}}],["grey",{"_index":791,"title":{},"body":{"components/LoginComponent.html":{}}}],["group",{"_index":473,"title":{},"body":{"components/ContactComponent.html":{}}}],["guard",{"_index":957,"title":{"guards/ThankyouResolver.html":{}},"body":{"guards/ThankyouResolver.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":959,"title":{},"body":{"guards/ThankyouResolver.html":{}}}],["guide",{"_index":853,"title":{},"body":{"components/NavbarComponent.html":{}}}],["guideline",{"_index":1320,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":1292,"title":{},"body":{"index.html":{}}}],["guidelines\"in",{"_index":1248,"title":{},"body":{"index.html":{}}}],["hand",{"_index":1291,"title":{},"body":{"index.html":{}}}],["handle",{"_index":819,"title":{},"body":{"injectables/LoginService.html":{}}}],["handled",{"_index":556,"title":{},"body":{"components/ErrorpageComponent.html":{},"components/HomeComponent.html":{}}}],["handleerror",{"_index":803,"title":{},"body":{"injectables/LoginService.html":{}}}],["handleerror(operation",{"_index":816,"title":{},"body":{"injectables/LoginService.html":{}}}],["hands",{"_index":626,"title":{},"body":{"components/HomeComponent.html":{}}}],["head",{"_index":1243,"title":{},"body":{"index.html":{}}}],["header",{"_index":605,"title":{},"body":{"components/HomeComponent.html":{}}}],["headers",{"_index":815,"title":{},"body":{"injectables/LoginService.html":{}}}],["healthy",{"_index":624,"title":{},"body":{"components/HomeComponent.html":{}}}],["height",{"_index":543,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["help",{"_index":569,"title":{},"body":{"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"index.html":{}}}],["helper",{"_index":1295,"title":{},"body":{"index.html":{}}}],["here",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{}}}],["hierarchy",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["highlight",{"_index":653,"title":{},"body":{"components/HomeComponent.html":{}}}],["highlights",{"_index":1271,"title":{},"body":{"index.html":{}}}],["holder",{"_index":706,"title":{},"body":{"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/NavbarComponent.html":{}}}],["holds",{"_index":851,"title":{},"body":{"components/NavbarComponent.html":{}}}],["home",{"_index":606,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["home'},{'name",{"_index":136,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["home.component.css",{"_index":607,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":608,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":135,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hook",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{}}}],["hooks",{"_index":1126,"title":{},"body":{"index.html":{}}}],["html",{"_index":119,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["http",{"_index":371,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoginService.html":{},"index.html":{}}}],["http://localhost:4200",{"_index":1201,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":806,"title":{},"body":{"injectables/LoginService.html":{}}}],["httpclientinmemorywebapimodule",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientinmemorywebapimodule.forroot",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodule",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":826,"title":{},"body":{"injectables/LoginService.html":{}}}],["https://samarthya.github.io",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.github.com/samarthya",{"_index":694,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["https://www.linkedin.com/in/samarthyasaurabh",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":852,"title":{},"body":{"components/NavbarComponent.html":{}}}],["icons",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["identification",{"_index":479,"title":{},"body":{"components/ContactComponent.html":{}}}],["identifier",{"_index":972,"title":{},"body":{"coverage.html":{}}}],["identify",{"_index":579,"title":{},"body":{"components/FooterComponent.html":{}}}],["idetails",{"_index":671,"title":{"interfaces/IDetails.html":{}},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"coverage.html":{}}}],["ignore",{"_index":84,"title":{},"body":{"components/AboutComponent.html":{}}}],["image",{"_index":602,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{}}}],["imageurl",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["img",{"_index":539,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{}}}],["imgsize",{"_index":936,"title":{},"body":{"components/RegisterComponent.html":{}}}],["implement",{"_index":1081,"title":{},"body":{"index.html":{}}}],["implements",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{}}}],["import",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{}}}],["imports",{"_index":366,"title":{},"body":{"modules/AppModule.html":{}}}],["include",{"_index":1238,"title":{},"body":{"index.html":{}}}],["includes",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["increased",{"_index":1095,"title":{},"body":{"index.html":{}}}],["index",{"_index":33,"title":{"index.html":{}},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"injectables/AppEffects.html":{},"interfaces/AppState.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["individual",{"_index":633,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{}}}],["information",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"index.html":{}}}],["init",{"_index":285,"title":{},"body":{"injectables/AppEffects.html":{}}}],["initalized",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{}}}],["initial",{"_index":1131,"title":{},"body":{"index.html":{}}}],["initialappstate",{"_index":425,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialised",{"_index":399,"title":{},"body":{"modules/AppModule.html":{}}}],["initialization",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{}}}],["initialize",{"_index":1183,"title":{},"body":{"index.html":{}}}],["initializing",{"_index":1305,"title":{},"body":{"index.html":{}}}],["initialparams",{"_index":171,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["initialstate",{"_index":426,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initiated",{"_index":1349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initiatied",{"_index":1344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject",{"_index":827,"title":{},"body":{"injectables/LoginService.html":{}}}],["injectable",{"_index":202,"title":{"injectables/AppEffects.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"injectables/LoginService.html":{}},"body":{"injectables/AppEffects.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"injectables/LoginService.html":{},"guards/ThankyouResolver.html":{},"coverage.html":{}}}],["injectables",{"_index":204,"title":{},"body":{"injectables/AppEffects.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"injectables/LoginService.html":{},"overview.html":{}}}],["injection",{"_index":1074,"title":{},"body":{"index.html":{}}}],["inline",{"_index":794,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["inlined",{"_index":793,"title":{},"body":{"components/LoginComponent.html":{}}}],["inmemorydataservice",{"_index":325,"title":{"injectables/InMemoryDataService.html":{}},"body":{"modules/AppModule.html":{},"injectables/InMemoryDataService.html":{},"coverage.html":{}}}],["inner",{"_index":629,"title":{},"body":{"components/HomeComponent.html":{}}}],["input",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/PersonComponent.html":{},"index.html":{}}}],["inputs",{"_index":609,"title":{},"body":{"components/HomeComponent.html":{},"components/PersonComponent.html":{}}}],["inserted",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["install",{"_index":1097,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1299,"title":{},"body":{"index.html":{}}}],["intention",{"_index":1055,"title":{},"body":{"index.html":{}}}],["interact",{"_index":243,"title":{},"body":{"injectables/AppEffects.html":{}}}],["interaction",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{}}}],["interactive",{"_index":1144,"title":{},"body":{"index.html":{}}}],["intercepts",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["interested",{"_index":231,"title":{},"body":{"injectables/AppEffects.html":{}}}],["interface",{"_index":401,"title":{"interfaces/AppState.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"interfaces/State.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"interfaces/State.html":{},"coverage.html":{}}}],["interfaces",{"_index":403,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"interfaces/State.html":{},"overview.html":{}}}],["intro",{"_index":666,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["introduction",{"_index":108,"title":{},"body":{"components/AboutComponent.html":{}}}],["introduction/mission",{"_index":1268,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":940,"title":{},"body":{"components/RegisterComponent.html":{}}}],["invalid:not(form",{"_index":939,"title":{},"body":{"components/RegisterComponent.html":{}}}],["invoked",{"_index":774,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["ionic",{"_index":1031,"title":{},"body":{"dependencies.html":{}}}],["iprincipal",{"_index":258,"title":{"interfaces/IPrincipal.html":{}},"body":{"injectables/AppEffects.html":{},"interfaces/AppState.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["iprofile",{"_index":79,"title":{"interfaces/IProfile.html":{}},"body":{"components/AboutComponent.html":{},"interfaces/IProfile.html":{},"components/PersonComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isemailvalid",{"_index":443,"title":{},"body":{"components/ContactComponent.html":{}}}],["isnamevalid",{"_index":444,"title":{},"body":{"components/ContactComponent.html":{}}}],["isolate",{"_index":214,"title":{},"body":{"injectables/AppEffects.html":{}}}],["ispasswordvalid",{"_index":752,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["isusernamevalid",{"_index":753,"title":{},"body":{"components/LoginComponent.html":{}}}],["iuser",{"_index":683,"title":{"interfaces/IUser.html":{}},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"coverage.html":{}}}],["iuserprofile",{"_index":689,"title":{"interfaces/IUserProfile.html":{}},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"injectables/LoginService.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ivy",{"_index":1156,"title":{},"body":{"index.html":{}}}],["jasmine",{"_index":1307,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":1111,"title":{},"body":{"index.html":{}}}],["job",{"_index":830,"title":{},"body":{"injectables/LoginService.html":{}}}],["jquery",{"_index":1033,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":1067,"title":{},"body":{"index.html":{}}}],["json",{"_index":935,"title":{},"body":{"components/RegisterComponent.html":{}}}],["json.stringify(values",{"_index":498,"title":{},"body":{"components/ContactComponent.html":{}}}],["karma",{"_index":1215,"title":{},"body":{"index.html":{}}}],["keep",{"_index":834,"title":{},"body":{"injectables/LoginService.html":{}}}],["key",{"_index":206,"title":{},"body":{"injectables/AppEffects.html":{}}}],["know",{"_index":1107,"title":{},"body":{"index.html":{}}}],["knowledge",{"_index":621,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["lad",{"_index":695,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":685,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"components/RegisterComponent.html":{}}}],["lastname",{"_index":686,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["later",{"_index":110,"title":{},"body":{"components/AboutComponent.html":{}}}],["latest",{"_index":619,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["lead",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{}}}],["learn",{"_index":651,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["learning",{"_index":697,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":531,"title":{},"body":{"components/ContactComponent.html":{},"components/RegisterComponent.html":{}}}],["legend",{"_index":118,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"overview.html":{}}}],["library",{"_index":343,"title":{},"body":{"modules/AppModule.html":{}}}],["library.add",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["life",{"_index":1059,"title":{},"body":{"index.html":{}}}],["lifecycle",{"_index":1125,"title":{},"body":{"index.html":{}}}],["link",{"_index":113,"title":{},"body":{"components/AboutComponent.html":{},"components/ContactComponent.html":{},"index.html":{}}}],["linkedin",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/IProfile.html":{},"miscellaneous/variables.html":{}}}],["links",{"_index":574,"title":{},"body":{"components/FooterComponent.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["lint",{"_index":1321,"title":{},"body":{"index.html":{}}}],["listen",{"_index":225,"title":{},"body":{"injectables/AppEffects.html":{}}}],["loads",{"_index":1088,"title":{},"body":{"index.html":{}}}],["locally",{"_index":1258,"title":{},"body":{"index.html":{}}}],["log",{"_index":711,"title":{},"body":{"injectables/Logger.html":{},"injectables/Logger-1.html":{}}}],["log(msg",{"_index":720,"title":{},"body":{"injectables/Logger.html":{},"injectables/Logger-1.html":{}}}],["log.service",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{}}}],["logged",{"_index":413,"title":{},"body":{"interfaces/AppState.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"interfaces/State.html":{}}}],["loggedin",{"_index":406,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["loggedinuser",{"_index":857,"title":{},"body":{"components/NavbarComponent.html":{}}}],["logger",{"_index":42,"title":{"injectables/Logger.html":{},"injectables/Logger-1.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"coverage.html":{},"overview.html":{}}}],["loggerservice",{"_index":584,"title":{},"body":{"components/FooterComponent.html":{}}}],["logging",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"index.html":{}}}],["logic",{"_index":1093,"title":{},"body":{"index.html":{}}}],["login",{"_index":244,"title":{},"body":{"injectables/AppEffects.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":138,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["login.component.css",{"_index":746,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":747,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.service",{"_index":278,"title":{},"body":{"injectables/AppEffects.html":{}}}],["loginactions.loginsuccess",{"_index":1352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logincomponent",{"_index":137,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginfailure",{"_index":983,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loging",{"_index":809,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginreducer",{"_index":1013,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginservice",{"_index":248,"title":{"injectables/LoginService.html":{}},"body":{"injectables/AppEffects.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["loginsuccess",{"_index":245,"title":{},"body":{"injectables/AppEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginuser",{"_index":804,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginuser(username",{"_index":823,"title":{},"body":{"injectables/LoginService.html":{}}}],["logonly",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["logos",{"_index":578,"title":{},"body":{"components/FooterComponent.html":{}}}],["logout",{"_index":985,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logservice",{"_index":613,"title":{},"body":{"components/HomeComponent.html":{}}}],["long",{"_index":222,"title":{},"body":{"injectables/AppEffects.html":{}}}],["looged",{"_index":719,"title":{},"body":{"injectables/Logger.html":{},"injectables/Logger-1.html":{}}}],["look",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["m",{"_index":1246,"title":{},"body":{"index.html":{}}}],["maintain",{"_index":1123,"title":{},"body":{"index.html":{}}}],["make",{"_index":517,"title":{},"body":{"components/ContactComponent.html":{}}}],["manjority",{"_index":641,"title":{},"body":{"components/HomeComponent.html":{}}}],["map",{"_index":280,"title":{},"body":{"injectables/AppEffects.html":{},"injectables/LoginService.html":{},"components/ThankyouComponent.html":{}}}],["map((userprofile",{"_index":261,"title":{},"body":{"injectables/AppEffects.html":{}}}],["map(action",{"_index":255,"title":{},"body":{"injectables/AppEffects.html":{}}}],["map(param",{"_index":953,"title":{},"body":{"components/ThankyouComponent.html":{}}}],["margin",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["matching",{"_index":149,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1264,"title":{},"body":{"index.html":{}}}],["max",{"_index":540,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["max_user_length",{"_index":766,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maxage",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["meant",{"_index":552,"title":{},"body":{"components/ErrorpageComponent.html":{}}}],["media",{"_index":661,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["memory",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"injectables/InMemoryDataService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["message",{"_index":266,"title":{},"body":{"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["messagestring",{"_index":945,"title":{},"body":{"components/ThankyouComponent.html":{}}}],["meta",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["metareducer",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metareducers",{"_index":329,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["method",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"guards/ThankyouResolver.html":{}}}],["methods",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{}}}],["min",{"_index":667,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["minimal",{"_index":1172,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":1042,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mix",{"_index":625,"title":{},"body":{"components/HomeComponent.html":{}}}],["mock",{"_index":176,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["model",{"_index":687,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{}}}],["models/profiles.model",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{}}}],["models/user.model",{"_index":279,"title":{},"body":{"injectables/AppEffects.html":{},"interfaces/AppState.html":{},"injectables/InMemoryDataService.html":{},"injectables/LoginService.html":{},"interfaces/State.html":{}}}],["moderated",{"_index":109,"title":{},"body":{"components/AboutComponent.html":{}}}],["modern",{"_index":1085,"title":{},"body":{"index.html":{}}}],["modified",{"_index":1235,"title":{},"body":{"index.html":{}}}],["module",{"_index":288,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":290,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["moment",{"_index":708,"title":{},"body":{"injectables/Logger.html":{},"injectables/Logger-1.html":{}}}],["more",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"index.html":{}}}],["msg",{"_index":718,"title":{},"body":{"injectables/Logger.html":{},"injectables/Logger-1.html":{}}}],["much",{"_index":1196,"title":{},"body":{"index.html":{}}}],["name",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name.invalid",{"_index":508,"title":{},"body":{"components/ContactComponent.html":{}}}],["name.touched",{"_index":507,"title":{},"body":{"components/ContactComponent.html":{}}}],["navbar",{"_index":854,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":140,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["navbar.component.css",{"_index":855,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":856,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":139,"title":{"components/NavbarComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":1099,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":850,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["need",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["needs",{"_index":885,"title":{},"body":{"components/PersonComponent.html":{}}}],["never",{"_index":524,"title":{},"body":{"components/ContactComponent.html":{},"components/RegisterComponent.html":{}}}],["new",{"_index":177,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":163,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["ng",{"_index":527,"title":{},"body":{"components/ContactComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["ngclass",{"_index":461,"title":{},"body":{"components/ContactComponent.html":{}}}],["ngmodule",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodules",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["ngrx/effects",{"_index":275,"title":{},"body":{"injectables/AppEffects.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":284,"title":{},"body":{"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"dependencies.html":{}}}],["none",{"_index":665,"title":{},"body":{"components/HomeComponent.html":{}}}],["normal",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["null",{"_index":868,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["number",{"_index":680,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":159,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/ThankyouComponent.html":{}}}],["observables",{"_index":1072,"title":{},"body":{"index.html":{}}}],["observables's",{"_index":181,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["of(result",{"_index":836,"title":{},"body":{"injectables/LoginService.html":{}}}],["offerring",{"_index":1282,"title":{},"body":{"index.html":{}}}],["oftype",{"_index":273,"title":{},"body":{"injectables/AppEffects.html":{}}}],["oftype(appactions.login",{"_index":254,"title":{},"body":{"injectables/AppEffects.html":{}}}],["oftype(appactions.loginsuccess",{"_index":268,"title":{},"body":{"injectables/AppEffects.html":{}}}],["oftype(root_effects_init",{"_index":286,"title":{},"body":{"injectables/AppEffects.html":{}}}],["on(loginactions.login",{"_index":1351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(loginactions.logout",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["one",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["oninit",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["onreset",{"_index":445,"title":{},"body":{"components/ContactComponent.html":{}}}],["onreset($event",{"_index":463,"title":{},"body":{"components/ContactComponent.html":{}}}],["onsubmission",{"_index":446,"title":{},"body":{"components/ContactComponent.html":{}}}],["operation",{"_index":820,"title":{},"body":{"injectables/LoginService.html":{}}}],["operator",{"_index":234,"title":{},"body":{"injectables/AppEffects.html":{}}}],["opinionated",{"_index":1087,"title":{},"body":{"index.html":{}}}],["optional",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":1132,"title":{},"body":{"index.html":{}}}],["origin",{"_index":1260,"title":{},"body":{"index.html":{}}}],["origin/v1.0",{"_index":1227,"title":{},"body":{"index.html":{}}}],["others",{"_index":1279,"title":{},"body":{"index.html":{}}}],["out",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":1192,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1330,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwriting",{"_index":1163,"title":{},"body":{"index.html":{}}}],["p",{"_index":877,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["p1",{"_index":924,"title":{},"body":{"components/RegisterComponent.html":{}}}],["p1.length",{"_index":928,"title":{},"body":{"components/RegisterComponent.html":{}}}],["p1.search(p2",{"_index":930,"title":{},"body":{"components/RegisterComponent.html":{}}}],["p2",{"_index":926,"title":{},"body":{"components/RegisterComponent.html":{}}}],["p2.length",{"_index":929,"title":{},"body":{"components/RegisterComponent.html":{}}}],["package",{"_index":1019,"title":{"dependencies.html":{}},"body":{}}],["package.json",{"_index":1122,"title":{},"body":{"index.html":{}}}],["packages",{"_index":1184,"title":{},"body":{"index.html":{}}}],["page",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ErrorpageComponent.html":{}}}],["param",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{},"components/ContactComponent.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"injectables/LoginService.html":{}}}],["param.get(message",{"_index":954,"title":{},"body":{"components/ThankyouComponent.html":{}}}],["parameters",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"miscellaneous/functions.html":{}}}],["parammap",{"_index":158,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/ThankyouComponent.html":{}}}],["params",{"_index":169,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["parent",{"_index":558,"title":{},"body":{"components/ErrorpageComponent.html":{}}}],["part",{"_index":451,"title":{},"body":{"components/ContactComponent.html":{}}}],["passed",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{}}}],["password",{"_index":421,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["password)).pipe(tap((user",{"_index":846,"title":{},"body":{"injectables/LoginService.html":{}}}],["password.invalid",{"_index":784,"title":{},"body":{"components/LoginComponent.html":{}}}],["password.touched",{"_index":783,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordconfirm",{"_index":906,"title":{},"body":{"components/RegisterComponent.html":{}}}],["path",{"_index":1176,"title":{},"body":{"index.html":{}}}],["payload",{"_index":265,"title":{},"body":{"injectables/AppEffects.html":{},"miscellaneous/variables.html":{}}}],["perform",{"_index":235,"title":{},"body":{"injectables/AppEffects.html":{}}}],["person",{"_index":480,"title":{},"body":{"components/ContactComponent.html":{},"components/PersonComponent.html":{}}}],["person'},{'name",{"_index":142,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["person.component.css",{"_index":891,"title":{},"body":{"components/PersonComponent.html":{}}}],["person.component.html",{"_index":892,"title":{},"body":{"components/PersonComponent.html":{}}}],["personcomponent",{"_index":141,"title":{"components/PersonComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["petite",{"_index":597,"title":{},"body":{"components/FooterComponent.html":{}}}],["pic",{"_index":934,"title":{},"body":{"components/RegisterComponent.html":{}}}],["pipe(catcherror(err",{"_index":848,"title":{},"body":{"injectables/LoginService.html":{}}}],["place",{"_index":705,"title":{},"body":{"injectables/Logger.html":{},"injectables/Logger-1.html":{}}}],["platform",{"_index":652,"title":{},"body":{"components/HomeComponent.html":{}}}],["play",{"_index":968,"title":{},"body":{"guards/ThankyouResolver.html":{}}}],["please",{"_index":567,"title":{},"body":{"components/ErrorpageComponent.html":{},"components/RegisterComponent.html":{}}}],["point",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{}}}],["pojo's",{"_index":1346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["popper.js",{"_index":1035,"title":{},"body":{"dependencies.html":{}}}],["portal",{"_index":900,"title":{},"body":{"components/RegisterComponent.html":{}}}],["possible",{"_index":554,"title":{},"body":{"components/ErrorpageComponent.html":{}}}],["pre",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefer",{"_index":1104,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":1178,"title":{},"body":{"index.html":{}}}],["preprocessor",{"_index":1188,"title":{},"body":{"index.html":{}}}],["prescriptions",{"_index":1090,"title":{},"body":{"index.html":{}}}],["presence",{"_index":660,"title":{},"body":{"components/HomeComponent.html":{}}}],["pretty",{"_index":1195,"title":{},"body":{"index.html":{}}}],["principal",{"_index":775,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["principal.password).pipe",{"_index":260,"title":{},"body":{"injectables/AppEffects.html":{}}}],["private",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["probelm",{"_index":1060,"title":{},"body":{"index.html":{}}}],["process",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prod",{"_index":1205,"title":{},"body":{"index.html":{}}}],["production",{"_index":1206,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["productivity",{"_index":1076,"title":{},"body":{"index.html":{}}}],["professional",{"_index":658,"title":{},"body":{"components/HomeComponent.html":{}}}],["profile",{"_index":677,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["profile.description",{"_index":898,"title":{},"body":{"components/PersonComponent.html":{}}}],["profile.subtitle",{"_index":897,"title":{},"body":{"components/PersonComponent.html":{}}}],["profile.title",{"_index":896,"title":{},"body":{"components/PersonComponent.html":{}}}],["profiles",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"components/PersonComponent.html":{}}}],["progressive",{"_index":1325,"title":{},"body":{"index.html":{}}}],["project",{"_index":1050,"title":{},"body":{"index.html":{}}}],["projects",{"_index":1141,"title":{},"body":{"index.html":{}}}],["prompts",{"_index":1145,"title":{},"body":{"index.html":{}}}],["properties",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"injectables/AppEffects.html":{},"interfaces/AppState.html":{},"components/ContactComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"components/ThankyouComponent.html":{}}}],["property",{"_index":864,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["props",{"_index":1345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["protractor",{"_index":1219,"title":{},"body":{"index.html":{}}}],["provide",{"_index":241,"title":{},"body":{"injectables/AppEffects.html":{},"index.html":{}}}],["provided",{"_index":787,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["providedin",{"_index":703,"title":{},"body":{"injectables/InMemoryDataService.html":{},"injectables/Logger-1.html":{},"injectables/LoginService.html":{}}}],["providers",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{},"components/ContactComponent.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"guards/ThankyouResolver.html":{}}}],["pull",{"_index":1259,"title":{},"body":{"index.html":{}}}],["pure",{"_index":217,"title":{},"body":{"injectables/AppEffects.html":{}}}],["purposes",{"_index":1175,"title":{},"body":{"index.html":{}}}],["push",{"_index":1216,"title":{},"body":{"index.html":{}}}],["queryparammap",{"_index":165,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["queryparams",{"_index":500,"title":{},"body":{"components/ContactComponent.html":{}}}],["question",{"_index":1274,"title":{},"body":{"index.html":{}}}],["quick",{"_index":512,"title":{},"body":{"components/ContactComponent.html":{}}}],["reactive",{"_index":429,"title":{},"body":{"components/ContactComponent.html":{}}}],["reactiveformsmodule",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":240,"title":{},"body":{"injectables/AppEffects.html":{},"index.html":{}}}],["readme.md",{"_index":1236,"title":{},"body":{"index.html":{}}}],["readme.mdalways",{"_index":1245,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":164,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["ready",{"_index":378,"title":{},"body":{"modules/AppModule.html":{}}}],["real",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["reasons",{"_index":1286,"title":{},"body":{"index.html":{}}}],["receive",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["recommendations",{"_index":1089,"title":{},"body":{"index.html":{}}}],["recommended",{"_index":1120,"title":{},"body":{"index.html":{}}}],["records",{"_index":482,"title":{},"body":{"components/ContactComponent.html":{}}}],["red",{"_index":538,"title":{},"body":{"components/ContactComponent.html":{},"components/RegisterComponent.html":{}}}],["reducer",{"_index":1012,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reducer(state",{"_index":1046,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reducers",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["redux",{"_index":1327,"title":{},"body":{"index.html":{}}}],["ref",{"_index":1119,"title":{},"body":{"index.html":{}}}],["reference",{"_index":1298,"title":{},"body":{"index.html":{}}}],["referenced",{"_index":1171,"title":{},"body":{"index.html":{}}}],["register",{"_index":903,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":144,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["register.component.css",{"_index":904,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":905,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":143,"title":{"components/RegisterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":682,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"components/RegisterComponent.html":{}}}],["relative",{"_index":1177,"title":{},"body":{"index.html":{}}}],["reload",{"_index":1203,"title":{},"body":{"index.html":{}}}],["remove",{"_index":376,"title":{},"body":{"modules/AppModule.html":{}}}],["rendering",{"_index":1158,"title":{},"body":{"index.html":{}}}],["replaysubject",{"_index":178,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["repo",{"_index":1253,"title":{},"body":{"index.html":{}}}],["reports",{"_index":1151,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1137,"title":{},"body":{"index.html":{}}}],["representation",{"_index":405,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/State.html":{}}}],["requested",{"_index":565,"title":{},"body":{"components/ErrorpageComponent.html":{}}}],["requests",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["required",{"_index":1102,"title":{},"body":{"index.html":{}}}],["requirejs",{"_index":1115,"title":{},"body":{"index.html":{}}}],["reserved",{"_index":588,"title":{},"body":{"components/FooterComponent.html":{}}}],["reset",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["resets",{"_index":466,"title":{},"body":{"components/ContactComponent.html":{}}}],["resolve",{"_index":961,"title":{},"body":{"guards/ThankyouResolver.html":{}}}],["resolve(route",{"_index":963,"title":{},"body":{"guards/ThankyouResolver.html":{}}}],["resolves",{"_index":967,"title":{},"body":{"guards/ThankyouResolver.html":{}}}],["resources",{"_index":1287,"title":{},"body":{"index.html":{}}}],["responses",{"_index":375,"title":{},"body":{"modules/AppModule.html":{}}}],["responsibility",{"_index":213,"title":{},"body":{"injectables/AppEffects.html":{}}}],["responsible",{"_index":1304,"title":{},"body":{"index.html":{}}}],["result",{"_index":148,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":150,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":112,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AppEffects.html":{},"interfaces/AppState.html":{},"components/ContactComponent.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["returning",{"_index":835,"title":{},"body":{"injectables/LoginService.html":{}}}],["returns",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"miscellaneous/functions.html":{}}}],["reusability",{"_index":1077,"title":{},"body":{"index.html":{}}}],["rich",{"_index":1066,"title":{},"body":{"index.html":{}}}],["right",{"_index":536,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["rights",{"_index":587,"title":{},"body":{"components/FooterComponent.html":{}}}],["root",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger-1.html":{},"injectables/LoginService.html":{},"index.html":{}}}],["root'},{'name",{"_index":127,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["root_effects_init",{"_index":274,"title":{},"body":{"injectables/AppEffects.html":{}}}],["root_reducers",{"_index":328,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["route",{"_index":447,"title":{},"body":{"components/ContactComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{}}}],["route.queryparams[message",{"_index":969,"title":{},"body":{"guards/ThankyouResolver.html":{}}}],["router",{"_index":250,"title":{},"body":{"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"components/ThankyouComponent.html":{}}}],["routermodule",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approutes",{"_index":367,"title":{},"body":{"modules/AppModule.html":{}}}],["routerservice",{"_index":249,"title":{},"body":{"injectables/AppEffects.html":{}}}],["routes",{"_index":1334,"title":{"routes.html":{}},"body":{"routes.html":{}}}],["routes/main.routes",{"_index":341,"title":{},"body":{"modules/AppModule.html":{}}}],["routing",{"_index":1071,"title":{},"body":{"index.html":{}}}],["run",{"_index":1148,"title":{},"body":{"index.html":{}}}],["runner",{"_index":1311,"title":{},"body":{"index.html":{}}}],["running",{"_index":223,"title":{},"body":{"injectables/AppEffects.html":{},"injectables/LoginService.html":{},"index.html":{}}}],["runs",{"_index":1150,"title":{},"body":{"index.html":{}}}],["runtimechecks",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["rxjs",{"_index":184,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"injectables/AppEffects.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/ThankyouComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":283,"title":{},"body":{"injectables/AppEffects.html":{},"injectables/LoginService.html":{},"components/ThankyouComponent.html":{}}}],["s",{"_index":1168,"title":{},"body":{"index.html":{}}}],["saurabh",{"_index":93,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["saurabh777@gmail.com",{"_index":691,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["save",{"_index":1257,"title":{},"body":{"index.html":{}}}],["scenario",{"_index":555,"title":{},"body":{"components/ErrorpageComponent.html":{}}}],["schematics",{"_index":1135,"title":{},"body":{"index.html":{}}}],["screen",{"_index":662,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["search",{"_index":880,"title":{},"body":{"components/NavbarComponent.html":{}}}],["secure",{"_index":788,"title":{},"body":{"components/LoginComponent.html":{}}}],["see",{"_index":414,"title":{},"body":{"interfaces/AppState.html":{},"components/ContactComponent.html":{},"interfaces/State.html":{}}}],["seelctors",{"_index":427,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/State.html":{}}}],["select",{"_index":218,"title":{},"body":{"injectables/AppEffects.html":{},"components/RegisterComponent.html":{}}}],["selector",{"_index":124,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["selectors",{"_index":1179,"title":{},"body":{"index.html":{}}}],["sending",{"_index":481,"title":{},"body":{"components/ContactComponent.html":{}}}],["sent",{"_index":501,"title":{},"body":{"components/ContactComponent.html":{}}}],["serve",{"_index":1199,"title":{},"body":{"index.html":{}}}],["server",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["service",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["services",{"_index":224,"title":{},"body":{"injectables/AppEffects.html":{}}}],["set",{"_index":114,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["setconfirmpassword(value",{"_index":920,"title":{},"body":{"components/RegisterComponent.html":{}}}],["setdebugmode(value",{"_index":729,"title":{},"body":{"injectables/Logger.html":{},"injectables/Logger-1.html":{}}}],["setdescriptionstr(value",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{}}}],["setparammap",{"_index":161,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["setqueryparammap",{"_index":167,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["setqueryparammap(params",{"_index":179,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["setter",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{}}}],["setuser(user",{"_index":916,"title":{},"body":{"components/RegisterComponent.html":{}}}],["shall",{"_index":572,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["share",{"_index":525,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["sharma",{"_index":693,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["sheet",{"_index":1263,"title":{},"body":{"index.html":{}}}],["short",{"_index":107,"title":{},"body":{"components/AboutComponent.html":{}}}],["shown",{"_index":886,"title":{},"body":{"components/PersonComponent.html":{}}}],["shows",{"_index":1166,"title":{},"body":{"index.html":{}}}],["side",{"_index":215,"title":{},"body":{"injectables/AppEffects.html":{}}}],["sign",{"_index":785,"title":{},"body":{"components/LoginComponent.html":{}}}],["similar",{"_index":1280,"title":{},"body":{"index.html":{}}}],["simple",{"_index":722,"title":{},"body":{"injectables/Logger.html":{},"injectables/Logger-1.html":{},"index.html":{}}}],["simplify",{"_index":707,"title":{},"body":{"injectables/Logger.html":{},"injectables/Logger-1.html":{}}}],["simulated",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["sinon",{"_index":1313,"title":{},"body":{"index.html":{}}}],["size",{"_index":598,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["skip",{"_index":1181,"title":{},"body":{"index.html":{}}}],["slightly",{"_index":1281,"title":{},"body":{"index.html":{}}}],["small",{"_index":599,"title":{},"body":{"components/FooterComponent.html":{}}}],["smallest",{"_index":887,"title":{},"body":{"components/PersonComponent.html":{}}}],["social",{"_index":659,"title":{},"body":{"components/HomeComponent.html":{}}}],["software",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{},"miscellaneous/variables.html":{}}}],["solid",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["solve",{"_index":1058,"title":{},"body":{"index.html":{}}}],["something",{"_index":879,"title":{},"body":{"components/NavbarComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"index.html":{}}}],["spa",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["span#copyright",{"_index":591,"title":{},"body":{"components/FooterComponent.html":{}}}],["spec",{"_index":1294,"title":{},"body":{"index.html":{}}}],["spec.ts",{"_index":1186,"title":{},"body":{"index.html":{}}}],["specific",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["specifies",{"_index":688,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{}}}],["spiritied",{"_index":645,"title":{},"body":{"components/HomeComponent.html":{}}}],["spy",{"_index":1324,"title":{},"body":{"index.html":{}}}],["src",{"_index":1139,"title":{},"body":{"index.html":{}}}],["src/.../app.state.ts",{"_index":1044,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../data.values.ts",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1045,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../login.action.ts",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.model.ts",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../variables.constant.ts",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/activatedroute",{"_index":153,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.effects.ts",{"_index":205,"title":{},"body":{"injectables/AppEffects.html":{},"coverage.html":{}}}],["src/app/app.effects.ts:28",{"_index":267,"title":{},"body":{"injectables/AppEffects.html":{}}}],["src/app/app.effects.ts:41",{"_index":272,"title":{},"body":{"injectables/AppEffects.html":{}}}],["src/app/app.effects.ts:48",{"_index":251,"title":{},"body":{"injectables/AppEffects.html":{}}}],["src/app/app.module.ts",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/about/about.component.ts",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/components/about/about.component.ts:24",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/about/about.component.ts:55",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/about/about.component.ts:70",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/about/about.component.ts:77",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/about/about.component.ts:84",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/actions/login.action.ts",{"_index":981,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/activatedroute",{"_index":187,"title":{},"body":{"classes/ActivatedRouteStub-1.html":{},"coverage.html":{}}}],["src/app/components/constants/variables.constant.ts",{"_index":986,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/contact/contact.component.ts",{"_index":428,"title":{},"body":{"components/ContactComponent.html":{},"coverage.html":{}}}],["src/app/components/contact/contact.component.ts:23",{"_index":472,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/contact/contact.component.ts:29",{"_index":477,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/contact/contact.component.ts:30",{"_index":475,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/contact/contact.component.ts:31",{"_index":449,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/contact/contact.component.ts:43",{"_index":462,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/contact/contact.component.ts:51",{"_index":467,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/contact/contact.component.ts:64",{"_index":465,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/contact/contact.component.ts:76",{"_index":454,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/contact/contact.component.ts:88",{"_index":450,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/errorpage/errorpage.component.ts",{"_index":549,"title":{},"body":{"components/ErrorpageComponent.html":{},"coverage.html":{}}}],["src/app/components/errorpage/errorpage.component.ts:13",{"_index":562,"title":{},"body":{"components/ErrorpageComponent.html":{}}}],["src/app/components/errorpage/errorpage.component.ts:17",{"_index":563,"title":{},"body":{"components/ErrorpageComponent.html":{}}}],["src/app/components/footer/footer.component.ts",{"_index":570,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/components/footer/footer.component.ts:13",{"_index":583,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:17",{"_index":585,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/home/home.component.ts",{"_index":600,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts:15",{"_index":614,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:16",{"_index":612,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:20",{"_index":615,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/log.service.ts",{"_index":737,"title":{},"body":{"injectables/Logger-1.html":{},"coverage.html":{}}}],["src/app/components/log.service.ts:10",{"_index":742,"title":{},"body":{"injectables/Logger-1.html":{}}}],["src/app/components/log.service.ts:11",{"_index":738,"title":{},"body":{"injectables/Logger-1.html":{}}}],["src/app/components/log.service.ts:21",{"_index":740,"title":{},"body":{"injectables/Logger-1.html":{}}}],["src/app/components/log.service.ts:31",{"_index":739,"title":{},"body":{"injectables/Logger-1.html":{}}}],["src/app/components/log.service.ts:37",{"_index":741,"title":{},"body":{"injectables/Logger-1.html":{}}}],["src/app/components/log.service.ts:43",{"_index":743,"title":{},"body":{"injectables/Logger-1.html":{}}}],["src/app/components/log.service.ts:47",{"_index":744,"title":{},"body":{"injectables/Logger-1.html":{}}}],["src/app/components/login/login.component.ts",{"_index":745,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:23",{"_index":760,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:24",{"_index":762,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:25",{"_index":761,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:26",{"_index":754,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:39",{"_index":759,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:47",{"_index":755,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:58",{"_index":758,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:67",{"_index":757,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":849,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts:21",{"_index":866,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:22",{"_index":860,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:29",{"_index":862,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:44",{"_index":861,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:51",{"_index":863,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/person/person.component.ts",{"_index":882,"title":{},"body":{"components/PersonComponent.html":{},"coverage.html":{}}}],["src/app/components/person/person.component.ts:19",{"_index":893,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/components/person/person.component.ts:25",{"_index":894,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/components/register/register.component.ts",{"_index":899,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/components/register/register.component.ts:21",{"_index":913,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:39",{"_index":912,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:41",{"_index":915,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:45",{"_index":917,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:47",{"_index":909,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:52",{"_index":911,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:56",{"_index":910,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:69",{"_index":919,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:72",{"_index":921,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/thankyou/thankyou.component.ts",{"_index":942,"title":{},"body":{"components/ThankyouComponent.html":{},"coverage.html":{}}}],["src/app/components/thankyou/thankyou.component.ts:13",{"_index":946,"title":{},"body":{"components/ThankyouComponent.html":{}}}],["src/app/components/thankyou/thankyou.component.ts:18",{"_index":947,"title":{},"body":{"components/ThankyouComponent.html":{}}}],["src/app/components/thankyou/thankyou.component.ts:29",{"_index":949,"title":{},"body":{"components/ThankyouComponent.html":{}}}],["src/app/components/thankyou/thankyou.resolver.service.ts",{"_index":960,"title":{},"body":{"guards/ThankyouResolver.html":{},"coverage.html":{}}}],["src/app/components/thankyou/thankyou.resolver.service.ts:16",{"_index":965,"title":{},"body":{"guards/ThankyouResolver.html":{}}}],["src/app/components/thankyou/thankyou.resolver.service.ts:7",{"_index":962,"title":{},"body":{"guards/ThankyouResolver.html":{}}}],["src/app/data/test/data.values.ts",{"_index":999,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/in",{"_index":699,"title":{},"body":{"injectables/InMemoryDataService.html":{},"coverage.html":{}}}],["src/app/log.service.ts",{"_index":704,"title":{},"body":{"injectables/Logger.html":{},"coverage.html":{}}}],["src/app/log.service.ts:19",{"_index":721,"title":{},"body":{"injectables/Logger.html":{}}}],["src/app/log.service.ts:29",{"_index":716,"title":{},"body":{"injectables/Logger.html":{}}}],["src/app/log.service.ts:35",{"_index":724,"title":{},"body":{"injectables/Logger.html":{}}}],["src/app/log.service.ts:41",{"_index":728,"title":{},"body":{"injectables/Logger.html":{}}}],["src/app/log.service.ts:45",{"_index":730,"title":{},"body":{"injectables/Logger.html":{}}}],["src/app/log.service.ts:8",{"_index":726,"title":{},"body":{"injectables/Logger.html":{}}}],["src/app/log.service.ts:9",{"_index":714,"title":{},"body":{"injectables/Logger.html":{}}}],["src/app/login.service.ts",{"_index":800,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/app/login.service.ts:13",{"_index":807,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:29",{"_index":818,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:43",{"_index":808,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:50",{"_index":814,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:62",{"_index":824,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/models/profiles.model",{"_index":895,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/models/profiles.model.ts",{"_index":698,"title":{},"body":{"interfaces/IProfile.html":{},"coverage.html":{}}}],["src/app/models/user.model",{"_index":763,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["src/app/models/user.model.ts",{"_index":672,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/reducers/index.ts",{"_index":1011,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/state/app.state",{"_index":765,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["src/app/state/app.state.ts",{"_index":404,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":1015,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1016,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["staged",{"_index":1229,"title":{},"body":{"index.html":{}}}],["stakeholders",{"_index":1270,"title":{},"body":{"index.html":{}}}],["start",{"_index":1108,"title":{},"body":{"index.html":{}}}],["started",{"_index":1048,"title":{"index.html":{}},"body":{}}],["stash",{"_index":1256,"title":{},"body":{"index.html":{}}}],["stashing",{"_index":1255,"title":{},"body":{"index.html":{}}}],["state",{"_index":219,"title":{"interfaces/State.html":{}},"body":{"injectables/AppEffects.html":{},"interfaces/AppState.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state.state",{"_index":865,"title":{},"body":{"components/NavbarComponent.html":{}}}],["statement",{"_index":1269,"title":{},"body":{"index.html":{}}}],["statements",{"_index":973,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{}}}],["status",{"_index":1223,"title":{},"body":{"index.html":{}}}],["statusit",{"_index":1224,"title":{},"body":{"index.html":{}}}],["statuswhich",{"_index":1242,"title":{},"body":{"index.html":{}}}],["still",{"_index":696,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":211,"title":{},"body":{"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["stored",{"_index":1208,"title":{},"body":{"index.html":{}}}],["storedevtoolsmodule",{"_index":333,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":384,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule.forroot(root_reducers",{"_index":389,"title":{},"body":{"modules/AppModule.html":{}}}],["storing",{"_index":1254,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":1194,"title":{},"body":{"index.html":{}}}],["streams",{"_index":437,"title":{},"body":{"components/ContactComponent.html":{}}}],["strictactionimmutability",{"_index":392,"title":{},"body":{"modules/AppModule.html":{}}}],["strictstateimmutability",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"miscellaneous/variables.html":{}}}],["stub.ts",{"_index":154,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"coverage.html":{}}}],["stub.ts:10",{"_index":170,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["stub.ts:17",{"_index":175,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["stub.ts:20",{"_index":180,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["style",{"_index":1167,"title":{},"body":{"index.html":{}}}],["styleguide",{"_index":1124,"title":{},"body":{"index.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"index.html":{}}}],["styleurls",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["subject",{"_index":166,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["submit",{"_index":468,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["subsciption",{"_index":681,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{}}}],["subscribetoemail",{"_index":675,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["subtitle",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/IProfile.html":{},"miscellaneous/variables.html":{}}}],["success",{"_index":1347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["such",{"_index":644,"title":{},"body":{"components/HomeComponent.html":{}}}],["supplied",{"_index":457,"title":{},"body":{"components/ContactComponent.html":{}}}],["support",{"_index":1328,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["switchmap",{"_index":950,"title":{},"body":{"components/ThankyouComponent.html":{}}}],["synchronous",{"_index":237,"title":{},"body":{"injectables/AppEffects.html":{}}}],["syntax",{"_index":623,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["t",{"_index":817,"title":{},"body":{"injectables/LoginService.html":{},"index.html":{}}}],["table",{"_index":1018,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1017,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":811,"title":{},"body":{"injectables/LoginService.html":{},"components/PersonComponent.html":{}}}],["tap",{"_index":269,"title":{},"body":{"injectables/AppEffects.html":{},"injectables/LoginService.html":{}}}],["tap(_",{"_index":838,"title":{},"body":{"injectables/LoginService.html":{}}}],["tasks",{"_index":236,"title":{},"body":{"injectables/AppEffects.html":{}}}],["teams",{"_index":1079,"title":{},"body":{"index.html":{}}}],["technologies",{"_index":620,"title":{},"body":{"components/HomeComponent.html":{}}}],["techstack",{"_index":1057,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"index.html":{}}}],["templateurl",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["test",{"_index":156,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"index.html":{}}}],["testbed",{"_index":1303,"title":{},"body":{"index.html":{}}}],["testbed.configuretestingmodule",{"_index":1318,"title":{},"body":{"index.html":{}}}],["tested",{"_index":1300,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1173,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1185,"title":{},"body":{"index.html":{}}}],["text",{"_index":514,"title":{},"body":{"components/ContactComponent.html":{}}}],["thank",{"_index":956,"title":{},"body":{"components/ThankyouComponent.html":{}}}],["thankyou.component.css",{"_index":943,"title":{},"body":{"components/ThankyouComponent.html":{}}}],["thankyou.component.html",{"_index":944,"title":{},"body":{"components/ThankyouComponent.html":{}}}],["thankyoucomponent",{"_index":145,"title":{"components/ThankyouComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"coverage.html":{},"overview.html":{}}}],["thankyouresolver",{"_index":958,"title":{"guards/ThankyouResolver.html":{}},"body":{"guards/ThankyouResolver.html":{},"coverage.html":{}}}],["things",{"_index":1106,"title":{},"body":{"index.html":{}}}],["this._debugmode",{"_index":735,"title":{},"body":{"injectables/Logger.html":{},"injectables/Logger-1.html":{}}}],["this.actions$.pipe",{"_index":253,"title":{},"body":{"injectables/AppEffects.html":{}}}],["this.comment",{"_index":488,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.comment.reset",{"_index":504,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.confirmpassword",{"_index":927,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.contactform",{"_index":487,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.contactform.addcontrol('email",{"_index":491,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.contactform.addcontrol('name",{"_index":489,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.contactform.get('email",{"_index":509,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.contactform.get('name",{"_index":506,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.contactform.reset",{"_index":505,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.contactform.value",{"_index":497,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.currentuser",{"_index":772,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.currentuser$.subscribe((userinfo",{"_index":869,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.debugmode",{"_index":731,"title":{},"body":{"injectables/Logger.html":{},"injectables/Logger-1.html":{}}}],["this.description",{"_index":106,"title":{},"body":{"components/AboutComponent.html":{}}}],["this.email",{"_index":492,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.email.reset",{"_index":503,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.formlogin",{"_index":771,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formlogin.get('password",{"_index":782,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formlogin.get('username",{"_index":779,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.getbasicheader(username",{"_index":845,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.http.get(this.baseloginurl).pipe",{"_index":837,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.http.post(this.baseloginurl",{"_index":844,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.loggedinuser",{"_index":867,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.loggedinuser.email",{"_index":873,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.loggedinuser.email.length",{"_index":874,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.logger.log",{"_index":116,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{}}}],["this.logger.log('welcome",{"_index":872,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.logger.log(`${operation",{"_index":832,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.loggerservice.log",{"_index":586,"title":{},"body":{"components/FooterComponent.html":{}}}],["this.loginservice.loginuser(principal.email",{"_index":259,"title":{},"body":{"injectables/AppEffects.html":{}}}],["this.logservice.log",{"_index":616,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.message",{"_index":951,"title":{},"body":{"components/ThankyouComponent.html":{}}}],["this.name",{"_index":490,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.name.reset",{"_index":502,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.password",{"_index":770,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.password.value",{"_index":777,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.passwordconfirm",{"_index":931,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.route.queryparammap.pipe",{"_index":952,"title":{},"body":{"components/ThankyouComponent.html":{}}}],["this.route.snapshot.queryparams[message",{"_index":955,"title":{},"body":{"components/ThankyouComponent.html":{}}}],["this.router.navigate(['/tyu",{"_index":499,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.routerservice.navigate(['/home",{"_index":270,"title":{},"body":{"injectables/AppEffects.html":{}}}],["this.setqueryparammap(initialparams",{"_index":185,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["this.store.dispatch(appactions.login",{"_index":778,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.store.select(state",{"_index":773,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["this.subject.asobservable",{"_index":174,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["this.subject.next(converttoparammap(params",{"_index":186,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["this.username",{"_index":768,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.username.value",{"_index":776,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userp",{"_index":922,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userp.user.password",{"_index":925,"title":{},"body":{"components/RegisterComponent.html":{}}}],["those",{"_index":229,"title":{},"body":{"injectables/AppEffects.html":{}}}],["through",{"_index":111,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["time",{"_index":1290,"title":{},"body":{"index.html":{}}}],["tips",{"_index":1220,"title":{},"body":{"index.html":{}}}],["title",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"interfaces/IProfile.html":{},"miscellaneous/variables.html":{}}}],["todo",{"_index":828,"title":{},"body":{"injectables/LoginService.html":{}}}],["tools",{"_index":1310,"title":{},"body":{"index.html":{}}}],["top",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["topics",{"_index":1266,"title":{},"body":{"index.html":{}}}],["topmargin",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["transforming",{"_index":831,"title":{},"body":{"injectables/LoginService.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["tried",{"_index":639,"title":{},"body":{"components/HomeComponent.html":{}}}],["true",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/RegisterComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trying",{"_index":647,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["ts",{"_index":1169,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":1038,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"interfaces/AppState.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["understand",{"_index":1121,"title":{},"body":{"index.html":{}}}],["undestand",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["unique",{"_index":786,"title":{},"body":{"components/LoginComponent.html":{}}}],["unit",{"_index":1212,"title":{},"body":{"index.html":{}}}],["unstage",{"_index":1244,"title":{},"body":{"index.html":{}}}],["untracked",{"_index":1237,"title":{},"body":{"index.html":{}}}],["up",{"_index":518,"title":{},"body":{"components/ContactComponent.html":{},"index.html":{}}}],["update",{"_index":1230,"title":{},"body":{"index.html":{}}}],["updated",{"_index":1252,"title":{},"body":{"index.html":{}}}],["upon",{"_index":657,"title":{},"body":{"components/HomeComponent.html":{}}}],["url",{"_index":678,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{}}}],["use",{"_index":160,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"index.html":{}}}],["used",{"_index":209,"title":{},"body":{"injectables/AppEffects.html":{},"index.html":{}}}],["user",{"_index":412,"title":{},"body":{"interfaces/AppState.html":{},"components/ContactComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["user(user",{"_index":923,"title":{},"body":{"components/RegisterComponent.html":{}}}],["user.user.email",{"_index":847,"title":{},"body":{"injectables/LoginService.html":{}}}],["userinfo",{"_index":407,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["userinfo.loggedin",{"_index":870,"title":{},"body":{"components/NavbarComponent.html":{}}}],["userinfo.userinfo",{"_index":871,"title":{},"body":{"components/NavbarComponent.html":{}}}],["userloggedin",{"_index":859,"title":{},"body":{"components/NavbarComponent.html":{}}}],["username",{"_index":750,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["username.invalid",{"_index":781,"title":{},"body":{"components/LoginComponent.html":{}}}],["username.touched",{"_index":780,"title":{},"body":{"components/LoginComponent.html":{}}}],["userp",{"_index":907,"title":{},"body":{"components/RegisterComponent.html":{}}}],["userprofile",{"_index":1353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userprofile.user",{"_index":1354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userprofile1",{"_index":1000,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["uses",{"_index":1157,"title":{},"body":{"index.html":{}}}],["using",{"_index":233,"title":{},"body":{"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"components/PersonComponent.html":{}}}],["usually",{"_index":634,"title":{},"body":{"components/HomeComponent.html":{}}}],["utility",{"_index":416,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/State.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["v",{"_index":1190,"title":{},"body":{"index.html":{}}}],["v1.0",{"_index":1226,"title":{},"body":{"index.html":{}}}],["valid.required",{"_index":529,"title":{},"body":{"components/ContactComponent.html":{},"components/RegisterComponent.html":{}}}],["valid[required",{"_index":528,"title":{},"body":{"components/ContactComponent.html":{},"components/RegisterComponent.html":{}}}],["validating",{"_index":456,"title":{},"body":{"components/ContactComponent.html":{}}}],["validators",{"_index":486,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{}}}],["validators.email",{"_index":474,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{}}}],["validators.maxlength(50",{"_index":476,"title":{},"body":{"components/ContactComponent.html":{}}}],["validators.maxlength(max_user_length",{"_index":769,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.required",{"_index":470,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{}}}],["value",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":496,"title":{},"body":{"components/ContactComponent.html":{}}}],["var",{"_index":122,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["varable",{"_index":409,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/State.html":{}}}],["variable",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1335,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variant",{"_index":595,"title":{},"body":{"components/FooterComponent.html":{}}}],["various",{"_index":1062,"title":{},"body":{"index.html":{}}}],["vasu",{"_index":102,"title":{},"body":{"components/AboutComponent.html":{}}}],["verbose",{"_index":1189,"title":{},"body":{"index.html":{}}}],["version",{"_index":1053,"title":{},"body":{"index.html":{}}}],["via",{"_index":1214,"title":{},"body":{"index.html":{}}}],["view",{"_index":551,"title":{},"body":{"components/ErrorpageComponent.html":{},"index.html":{}}}],["visualization",{"_index":884,"title":{},"body":{"components/PersonComponent.html":{}}}],["visualizes",{"_index":889,"title":{},"body":{"components/PersonComponent.html":{}}}],["void",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"injectables/Logger.html":{},"injectables/Logger-1.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["wallaby",{"_index":1314,"title":{},"body":{"index.html":{}}}],["warn",{"_index":712,"title":{},"body":{"injectables/Logger.html":{},"injectables/Logger-1.html":{}}}],["warn(msg",{"_index":723,"title":{},"body":{"injectables/Logger.html":{},"injectables/Logger-1.html":{}}}],["way",{"_index":242,"title":{},"body":{"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["we'll",{"_index":523,"title":{},"body":{"components/ContactComponent.html":{},"components/RegisterComponent.html":{}}}],["we\\'ll",{"_index":548,"title":{},"body":{"components/ContactComponent.html":{},"components/RegisterComponent.html":{}}}],["wealthy",{"_index":627,"title":{},"body":{"components/HomeComponent.html":{}}}],["web",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["webpack",{"_index":1116,"title":{},"body":{"index.html":{}}}],["website",{"_index":575,"title":{},"body":{"components/FooterComponent.html":{}}}],["welcome",{"_index":881,"title":{},"body":{"components/NavbarComponent.html":{}}}],["well",{"_index":1301,"title":{},"body":{"index.html":{}}}],["went",{"_index":1277,"title":{},"body":{"index.html":{}}}],["whether",{"_index":411,"title":{},"body":{"interfaces/AppState.html":{},"components/NavbarComponent.html":{},"interfaces/State.html":{}}}],["width",{"_index":541,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["width:100",{"_index":669,"title":{},"body":{"components/HomeComponent.html":{}}}],["wisely",{"_index":656,"title":{},"body":{"components/HomeComponent.html":{}}}],["wish",{"_index":1240,"title":{},"body":{"index.html":{}}}],["within",{"_index":557,"title":{},"body":{"components/ErrorpageComponent.html":{}}}],["without",{"_index":1153,"title":{},"body":{"index.html":{}}}],["work",{"_index":640,"title":{},"body":{"components/HomeComponent.html":{}}}],["worker",{"_index":1326,"title":{},"body":{"index.html":{}}}],["working",{"_index":1234,"title":{},"body":{"index.html":{}}}],["works",{"_index":632,"title":{},"body":{"components/HomeComponent.html":{}}}],["workspace",{"_index":1130,"title":{},"body":{"index.html":{}}}],["writing",{"_index":1154,"title":{},"body":{"index.html":{}}}],["yes",{"_index":172,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"injectables/LoginService.html":{}}}],["zone.js",{"_index":1040,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/about/about.component.ts\n\n\n    \n        Description\n    \n    \n        About page component\n\nThis should display information about the authors and contributors of the SPA.\nFor more clarity, you should be aware about binding and component interaction, to undestand how\nthe information is being\npassed.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./about.component.css\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                description\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    descriptionStr\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/about/about.component.ts:55\n                            \n                        \n\n                \n                    \n                            Basic initialization constructor that includes\na basic console logging service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Logger service end point.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/about/about.component.ts:84\n                \n            \n\n\n            \n                \n                    The {OnInit} hook method.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/about/about.component.ts:24\n                            \n                        \n\n                \n                    \n                        It is a static string variable that is initalized with basic information about\nthe context.\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        descriptionStr\n                    \n                \n\n                \n                    \n                        getdescriptionStr()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/about/about.component.ts:70\n                                \n                            \n                    \n                        \n                                Getter method for the static string.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setdescriptionStr(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/about/about.component.ts:77\n                                \n                            \n                    \n                        \n                                Setter method for the #description\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { IProfile } from '../../models/profiles.model';\nimport { Logger } from '../log.service';\n\n/**\n * About page component\n * \n * This should display information about the authors and contributors of the SPA.\n * For more clarity, you should be aware about binding and component interaction, to undestand how\n * the information is being\n * passed.\n * \n */\n@Component({\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  /**\n   * It is a static string variable that is initalized with basic information about\n   * the context.\n   */\n  private description: string;\n\n\n  /**\n   * @ignore\n   */\n  public profiles: IProfile[] = [\n    {\n      title: 'Software Engineer',\n      subTitle: ' Lead 1',\n      description: 'I am Saurabh',\n      imageUrl: '../../assets/images/ss.jpg',\n      linkedIn: '',\n      giturl: ''\n    },\n    {\n      title: 'Software Engineer',\n      subTitle: 'Lead 2',\n      description: 'I am Bhawna',\n      imageUrl: '../../assets/images/bb.jpg',\n      linkedIn: '',\n      giturl: ''\n    },\n    {\n      title: 'Software Engineer',\n      subTitle: 'Lead 3',\n      description: 'I am Vasu',\n      imageUrl: '../../assets/images/1.png',\n      linkedIn: '',\n      giturl: ''\n    }\n  ];\n\n  /**\n   * Basic initialization constructor that includes\n   * a basic console logging service.\n   * @param logger Logger service end point.\n   */\n  constructor(private logger: Logger) {\n    this.description = 'A short introduction to the about page, which can be moderated later'\n                        + ' through a service or any other source.';\n  }\n\n  /**\n   * Getter method for the static string.\n   */\n  get descriptionStr(): string {\n    return this.description;\n  }\n\n  /**\n   * Setter method for the {@link AboutComponent #description}\n   */\n  set descriptionStr(value: string) {\n    this.description = value;\n  }\n\n  /**\n   * The {OnInit} hook method.\n   */\n  ngOnInit() {\n    this.logger.log(' ngOnInit called for AboutComponent.');\n  }\n\n}\n\n    \n\n    \n        \n  About Us\n  \n  {{ descriptionStr }}\n\n  \n    \n      \n  \n\n\n\n    \n\n    \n                \n                    ./about.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  About Us    {{ descriptionStr }}              '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorpageComponent', 'selector': 'app-errorpage'},{'name': 'FooterComponent', 'selector': 'ft-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'ft-navbar'},{'name': 'PersonComponent', 'selector': 'ft-person'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ThankyouComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActivatedRouteStub.html":{"url":"classes/ActivatedRouteStub.html","title":"class - ActivatedRouteStub","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActivatedRouteStub\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/activatedroute-stub.ts\n        \n\n            \n                Description\n            \n            \n                An ActivateRoute test double with a paramMap observable.\nUse the setParamMap() method to add the next paramMap value.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                queryParamMap\n                            \n                            \n                                    Private\n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setQueryParamMap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(initialParams?: Params)\n                    \n                \n                        \n                            \n                                Defined in src/app/activatedroute-stub.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initialParams\n                                                  \n                                                        \n                                                                        Params\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            queryParamMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.subject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/activatedroute-stub.ts:17\n                            \n                        \n\n                \n                    \n                        The mock paramMap observable \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReplaySubject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/activatedroute-stub.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setQueryParamMap\n                        \n                        \n                    \n                \n            \n            \n                \nsetQueryParamMap(params?: Params)\n                \n            \n\n\n            \n                \n                    Defined in src/app/activatedroute-stub.ts:20\n                \n            \n\n\n            \n                \n                    Set the paramMap observables's next value \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Params\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {  ParamMap, Params, convertToParamMap } from '@angular/router';\nimport { ReplaySubject } from 'rxjs';\n\n/**\n * An ActivateRoute test double with a `paramMap` observable.\n * Use the `setParamMap()` method to add the next `paramMap` value.\n */\nexport class ActivatedRouteStub {\n\n  private subject = new ReplaySubject();\n\n  constructor(initialParams?: Params) {\n    this.setQueryParamMap(initialParams);\n  }\n\n  /** The mock paramMap observable */\n  readonly queryParamMap = this.subject.asObservable();\n\n  /** Set the paramMap observables's next value */\n  setQueryParamMap(params?: Params) {\n    this.subject.next(convertToParamMap(params));\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActivatedRouteStub-1.html":{"url":"classes/ActivatedRouteStub-1.html","title":"class - ActivatedRouteStub-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActivatedRouteStub\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/activatedroute-stub.ts\n        \n\n            \n                Description\n            \n            \n                An ActivateRoute test double with a paramMap observable.\nUse the setParamMap() method to add the next paramMap value.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                queryParamMap\n                            \n                            \n                                    Private\n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setQueryParamMap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(initialParams?: Params)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/activatedroute-stub.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initialParams\n                                                  \n                                                        \n                                                                        Params\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            queryParamMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.subject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/activatedroute-stub.ts:17\n                            \n                        \n\n                \n                    \n                        The mock paramMap observable \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReplaySubject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/activatedroute-stub.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setQueryParamMap\n                        \n                        \n                    \n                \n            \n            \n                \nsetQueryParamMap(params?: Params)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/activatedroute-stub.ts:20\n                \n            \n\n\n            \n                \n                    Set the paramMap observables's next value \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Params\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {  ParamMap, Params, convertToParamMap } from '@angular/router';\nimport { ReplaySubject } from 'rxjs';\n\n/**\n * An ActivateRoute test double with a `paramMap` observable.\n * Use the `setParamMap()` method to add the next `paramMap` value.\n */\nexport class ActivatedRouteStub {\n\n  private subject = new ReplaySubject();\n\n  constructor(initialParams?: Params) {\n    this.setQueryParamMap(initialParams);\n  }\n\n  /** The mock paramMap observable */\n  readonly queryParamMap = this.subject.asObservable();\n\n  /** Set the paramMap observables's next value */\n  setQueryParamMap(params?: Params) {\n    this.subject.next(convertToParamMap(params));\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        The angular-bootstrapped class\nEvery root component connects Component Hierarchy with Page DOM.\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Logger } from './components';\n\n/**\n * The angular-bootstrapped class\n * Every root component connects Component Hierarchy with Page DOM.\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  constructor(private logger: Logger) {\n    this.logger.log(' AppComponent created.');\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n  \n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .topMargin {\n  margin-top: 2em;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorpageComponent', 'selector': 'app-errorpage'},{'name': 'FooterComponent', 'selector': 'ft-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'ft-navbar'},{'name': 'PersonComponent', 'selector': 'ft-person'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ThankyouComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppEffects.html":{"url":"injectables/AppEffects.html","title":"injectable - AppEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.effects.ts\n        \n\n            \n                Description\n            \n            \n                Key concepts\n\nEffects when used along with Store, decrease the responsibility of the component\nEffects isolate side effects from components, allowing for more pure components that select state and dispatch actions.\nEffects are long-running services that listen to an observable of every action dispatched from the Store.\nEffects filter those actions based on the type of action they are interested in. This is done by using an operator.\nEffects perform tasks, which are synchronous or asynchronous and return a new action.Effects when used along with Store, decrease the responsibility of the component.\nRead this\n Effects provide a way to interact with services and isolate them from the components.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                login$\n                            \n                            \n                                loginSuccess$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, logger: AppActions.Logger, loginService: LoginService, routerService: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.effects.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    AppActions.Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routerService\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(AppActions.login),\n      map(action => action.principal),\n      exhaustMap((principal: IPrincipal) =>\n        this.loginService.loginUser(principal.email, principal.password).pipe(\n          map((userProfile) => AppActions.loginSuccess({userProfile})),\n          catchError(message => of({ type: '[Login Failure] Login', payload: message }))\n        )\n      )\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.effects.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginSuccess$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(AppActions.loginSuccess),\n        tap(() => this.routerService.navigate(['/home']))\n      ),\n    { dispatch: false }\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.effects.ts:41\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType, ROOT_EFFECTS_INIT } from '@ngrx/effects';\nimport * as AppActions from './components/index';\nimport { LoginService } from './login.service';\nimport { IPrincipal } from './models/user.model';\nimport { map, catchError, tap, exhaustMap } from 'rxjs/operators';\nimport { of, Observable } from 'rxjs';\n\nimport { Router } from '@angular/router';\nimport { Action } from '@ngrx/store';\n\n\n/**\n * Key concepts\n * - Effects when used along with Store, decrease the responsibility of the component\n * - Effects isolate side effects from components, allowing for more pure components that select state and dispatch actions.\n * - Effects are long-running services that listen to an observable of every action dispatched from the Store.\n * - Effects filter those actions based on the type of action they are interested in. This is done by using an operator.\n * - Effects perform tasks, which are synchronous or asynchronous and return a new action.\n * Effects when used along with Store, decrease the responsibility of the component.\n * Read this\n *  Effects provide a way to interact with services and isolate them from the components.\n */\n@Injectable()\nexport class AppEffects {\n\n\n  login$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AppActions.login),\n      map(action => action.principal),\n      exhaustMap((principal: IPrincipal) =>\n        this.loginService.loginUser(principal.email, principal.password).pipe(\n          map((userProfile) => AppActions.loginSuccess({userProfile})),\n          catchError(message => of({ type: '[Login Failure] Login', payload: message }))\n        )\n      )\n    )\n  );\n\n  loginSuccess$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(AppActions.loginSuccess),\n        tap(() => this.routerService.navigate(['/home']))\n      ),\n    { dispatch: false }\n  );\n\n  // init$ = createEffect(() =>\n  //   this.actions$.pipe(\n  //     ofType(ROOT_EFFECTS_INIT),\n  //     tap(() => {\n  //       console.log(' INIT called. ');\n  //     })\n  //   )\n  // );\n\n\n  constructor(\n    private actions$: Actions,\n    private logger: AppActions.Logger,\n    private loginService: LoginService,\n    private routerService: Router) {\n    this.logger.log(' AppEffects called.');\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nContactComponent\n\nContactComponent\n\nAppModule -->\n\nContactComponent->AppModule\n\n\n\n\n\nErrorpageComponent\n\nErrorpageComponent\n\nAppModule -->\n\nErrorpageComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPersonComponent\n\nPersonComponent\n\nAppModule -->\n\nPersonComponent->AppModule\n\n\n\nAppModule -->\n\nPersonComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nThankyouComponent\n\nThankyouComponent\n\nAppModule -->\n\nThankyouComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nLogger\n\nLogger\n\nAppModule -->\n\nLogger->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n            Description\n        \n        \n            \nThe root module to be bootstrapped by angular for more information\nlook here\n\n\nNgModules are the compilation context for all the components\ndeclared, defined for consumption.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            ContactComponent\n                        \n                        \n                            ErrorpageComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            PersonComponent\n                        \n                        \n                            PersonComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            ThankyouComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            Logger\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n\n\n\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryDataService } from './in-memory-data.service';\nimport { StoreModule } from '@ngrx/store';\nimport { ROOT_REDUCERS, metaReducers } from './reducers';\n\nimport { EffectsModule } from '@ngrx/effects';\nimport { AppEffects } from './app.effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { appRoutes } from './routes/main.routes';\n\nimport {\n  AboutComponent, ContactComponent,\n  Logger, HomeComponent,\n  ErrorpageComponent, PersonComponent,\n  NavbarComponent, ThankyouComponent,\n  FooterComponent, LoginComponent,\n  RegisterComponent } from '../app/components/index';\n\n\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faLinkedin, faTwitter, faGit, faBlogger, faFacebook, faGoogle } from '@fortawesome/free-brands-svg-icons';\nimport { faAnchor, faThumbsUp, faThumbsDown, faSignInAlt, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\n/**\n * \n * The root module to be bootstrapped by angular for more information\n * look here\n * \n * \n * NgModules are the compilation context for all the components\n * declared, defined for consumption.\n * \n */\n@NgModule({\n  /**\n   * Components declared in this module.\n   * Components should be declared in only one NgModule class.\n   */\n  declarations: [\n    RegisterComponent,\n    AppComponent,\n    NavbarComponent,\n    AboutComponent,\n    PersonComponent,\n    HomeComponent,\n    ContactComponent,\n    ErrorpageComponent,\n    PersonComponent,\n    NavbarComponent,\n    ThankyouComponent,\n    FooterComponent,\n    LoginComponent,\n    FooterComponent,\n    RegisterComponent\n  ],\n  providers: [\n    Logger\n  ],\n  /**\n   * For browser specific functionality you need this module.\n   */\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    FormsModule,\n    FontAwesomeModule,\n    RouterModule.forRoot(appRoutes, { enableTracing: true }),\n    HttpClientModule,\n\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\n    // and returns simulated server responses.\n    // Remove it when a real server is ready to receive requests.\n    HttpClientInMemoryWebApiModule.forRoot(\n      InMemoryDataService, { dataEncapsulation: false, delay: 500 }\n    ),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\n    StoreModule.forRoot(ROOT_REDUCERS, {\n      metaReducers,\n      runtimeChecks: {\n        strictStateImmutability: true,\n        strictActionImmutability: true\n      }\n    }),\n    EffectsModule.forRoot([AppEffects])\n  ],\n\n  /**\n   * Root component that is inserted in the index.html.\n   * Each component bootstrapped is root of its complete application components.\n   */\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n  constructor(private logger: Logger) {\n    this.logger.log(' AppModule initialised.');\n    library.add(\n      faTwitter, faLinkedin,\n      faGit, faBlogger, faThumbsUp,\n      faThumbsDown, faAnchor, faSignInAlt,\n      faFacebook, faGoogle,\n      faSignOutAlt);\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/app.state.ts\n        \n\n            \n                Description\n            \n            \n                Representation of application state.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        loggedIn\n                                \n                                \n                                        userInfo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loggedIn\n                                    \n                                \n                                \n                                    \n                                        loggedIn:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A varable to denote whether the user has logged in.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userInfo\n                                    \n                                \n                                \n                                    \n                                        userInfo:         IPrincipal\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPrincipal\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User information.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IPrincipal } from '../models/user.model';\n\n/**\n * Representation of application state.\n */\nexport interface AppState {\n  /**\n   * A varable to denote whether the user has logged in.\n   */\n  loggedIn: boolean;\n  /**\n   * User information.\n   * @see IPrincipal\n   */\n  userInfo: IPrincipal;\n}\n\n/**\n * The global state for the application.\n */\nexport interface State {\n  state: AppState;\n}\n\n/**\n * Utility function to return the EMPTY user for the AppState\n * @see {IPrincipal}\n */\nexport function getEmptyUser(): IPrincipal {\n  return {\n    email: '',\n    password: ''\n  };\n}\n\n/**\n * Returns the Empty state (Utility function.)\n * @see {State}\n */\nexport function getEmptyState(): State {\n  return {\n    state: {\n      userInfo: getEmptyUser(),\n      loggedIn: false\n    }\n  };\n}\nexport function getEmptyAppState(): AppState {\n  return {\n      userInfo: getEmptyUser(),\n      loggedIn: false\n  };\n}\n\nexport const initialAppState: AppState = getEmptyAppState();\nexport const initialState: State = getEmptyState();\n\n\n/**\n * Seelctors\n */\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactComponent.html":{"url":"components/ContactComponent.html","title":"component - ContactComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contact/contact.component.ts\n\n\n    \n        Description\n    \n    \n        \nReactive form to allow user to add details to be allowed to contacted.\nsee this link\nReactive form is built around observable streams.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact\n            \n\n            \n                styleUrls\n                ./contact.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                comment\n                            \n                            \n                                    Public\n                                contactForm\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isEmailValid\n                            \n                            \n                                    Public\n                                isNameValid\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onReset\n                            \n                            \n                                    Public\n                                onSubmission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contact/contact.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isEmailValid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEmailValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contact/contact.component.ts:88\n                \n            \n\n\n            \n                \n                    Function called as part of expression condition for Email input for class application.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isNameValid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isNameValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contact/contact.component.ts:76\n                \n            \n\n\n            \n                \n                    A declarative way of validating the Name is supplied and is correct to apply CSS using\nngClass.\nFor more information see\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contact/contact.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onReset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onReset($event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contact/contact.component.ts:64\n                \n            \n\n\n            \n                \n                    Resets the contact form.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSubmission\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmission()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contact/contact.component.ts:51\n                \n            \n\n\n            \n                \n                    Function that is called when you submit the form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            comment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl('', [Validators.required])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contact/contact.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            contactForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contact/contact.component.ts:23\n                            \n                        \n\n                \n                    \n                        Group for the ContactForm.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl('', [Validators.required, Validators.email])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contact/contact.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl('', [Validators.required, Validators.maxLength(50)])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contact/contact.component.ts:29\n                            \n                        \n\n                \n                    \n                        Name - Input element that will store the name of the commentator.\nEmail - Email identification for the person sending in the contact, only for records.\nComments - Actual comment supplied.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, AbstractControl } from '@angular/forms';\nimport { Logger } from '../log.service';\nimport { Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n/**\n * \n * Reactive form to allow user to add details to be allowed to contacted.\n * see this link\n * Reactive form is built around observable streams.\n * \n * \n */\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n  /**\n   * Group for the ContactForm.\n   */\n  public contactForm: FormGroup;\n  /**\n   * Name - Input element that will store the name of the commentator.\n   * Email - Email identification for the person sending in the contact, only for records.\n   * Comments - Actual comment supplied.\n   */\n  public name: FormControl = new FormControl('', [Validators.required, Validators.maxLength(50)]);\n  public email: FormControl = new FormControl('', [Validators.required, Validators.email]);\n  public comment: FormControl = new FormControl('', [Validators.required]);\n\n  constructor(private logger: Logger, private route: ActivatedRoute, private router: Router) {\n    this.contactForm = new FormGroup({\n      comment: this.comment\n    });\n\n    this.contactForm.addControl('name', this.name);\n    this.contactForm.addControl('email', this.email);\n\n  }\n\n  ngOnInit() {\n    this.logger.log(' ngOnInit called for ContactComponent.');\n  }\n\n  /**\n   * Function that is called when you submit the form.\n   * @param value  string Value of form control elements binded in the form group.\n   */\n  public onSubmission(): void {\n    const values = this.contactForm.value;\n\n    this.logger.log(' Submit called from contactcomponent.');\n    this.logger.log(' Values: ' + JSON.stringify(values));\n    this.router.navigate(['/tyu'], {\n      queryParams: { message: 'Your message has been sent.' }\n    });\n  }\n\n  /**\n   * Resets the contact form.\n   */\n  public onReset($event: Event): void {\n    this.name.reset();\n    this.email.reset();\n    this.comment.reset();\n    this.contactForm.reset();\n  }\n\n  /**\n   * A declarative way of validating the Name is supplied and is correct to apply CSS using\n   * ngClass.\n   * For more information see\n   */\n  public isNameValid(): boolean {\n    const name: AbstractControl = this.contactForm.get('name');\n    if (name.touched) {\n      return name.invalid;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function called as part of expression condition for Email input for class application.\n   */\n  public isEmailValid(): boolean {\n    const email: AbstractControl = this.contactForm.get('email');\n\n    if (email.touched) {\n      return email.invalid;\n    }\n\n    return false;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        Contact Form\n        Some quick example text to build on the card title and make up the bulk of the card's\n          content.\n        \n      \n      \n\n      \n        \n          \n          What you would like us to address you as?\n        \n        \n          \n          We'll never share your email with anyone else.\n        \n\n        \n          \n        \n      \n      \n        \n          \n        \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./contact.component.css\n                \n                \n.ng-valid[required], .ng-valid.required  {\n  border-left: 5px solid #42A948; /* green */\n}\n\n.errorInput {\n  border-right: 4px solid red;\n}\n\nimg {\n  max-width: 305;\n  max-height: 180;\n  align-content: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Contact Form        Some quick example text to build on the card title and make up the bulk of the card\\'s          content.                                                      What you would like us to address you as?                                    We\\'ll never share your email with anyone else.                                                                                                              '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorpageComponent', 'selector': 'app-errorpage'},{'name': 'FooterComponent', 'selector': 'ft-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'ft-navbar'},{'name': 'PersonComponent', 'selector': 'ft-person'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ThankyouComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorpageComponent.html":{"url":"components/ErrorpageComponent.html","title":"component - ErrorpageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorpageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/errorpage/errorpage.component.ts\n\n\n    \n        Description\n    \n    \n        Error page component is a view that is meant for displaying error message for any\npossible scenario that cannot be handled within the parent view.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-errorpage\n            \n\n            \n                styleUrls\n                ./errorpage.component.css\n            \n\n\n\n            \n                templateUrl\n                ./errorpage.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/errorpage/errorpage.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/errorpage/errorpage.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Logger } from '../log.service';\n\n/**\n * Error page component is a view that is meant for displaying error message for any\n * possible scenario that cannot be handled within the parent view.\n */\n@Component({\n  selector: 'app-errorpage',\n  templateUrl: './errorpage.component.html',\n  styleUrls: ['./errorpage.component.css']\n})\nexport class ErrorpageComponent implements OnInit {\n\n  constructor(private logger: Logger) { }\n\n  ngOnInit() {\n    this.logger.log(' ngOnInit called for ErrorpageComponent');\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        ERROR:403 Page requested cannot be found.\n        \n        Please consult our help for more information.\n      \n    \n  \n\n    \n\n    \n                \n                    ./errorpage.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  ERROR:403 Page requested cannot be found.                Please consult our help for more information.            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorpageComponent', 'selector': 'app-errorpage'},{'name': 'FooterComponent', 'selector': 'ft-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'ft-navbar'},{'name': 'PersonComponent', 'selector': 'ft-person'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ThankyouComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorpageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/footer/footer.component.ts\n\n\n    \n        Description\n    \n    \n        Footer component shall contain the basic links to the website and with the appropriate\nbrand logos that can help identify the information.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ft-footer\n            \n\n            \n                styleUrls\n                ./footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loggerService: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/footer/footer.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loggerService\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/footer/footer.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Logger } from '../log.service';\n\n/**\n * Footer component shall contain the basic links to the website and with the appropriate\n * brand logos that can help identify the information.\n */\n@Component({\n  selector: 'ft-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor(private loggerService: Logger) { }\n\n  ngOnInit() {\n    this.loggerService.log(' FooterComponent: OnInit called.');\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      All rights reserved. Copyright @ 2019\n    \n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./footer.component.css\n                \n                span#copyright\n{\n  font-family: cursive;\n  font-variant-caps: all-petite-caps;\n  font-size: small;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            All rights reserved. Copyright @ 2019                                                                  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorpageComponent', 'selector': 'app-errorpage'},{'name': 'FooterComponent', 'selector': 'ft-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'ft-navbar'},{'name': 'PersonComponent', 'selector': 'ft-person'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ThankyouComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        A basic component that shall have a background image (which we will generalize away from CSS)\nand have a header and title.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logService: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/home/home.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        body\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/home/home.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/home/home.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home/home.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Logger } from '../log.service';\n\n/**\n * A basic component that shall have a background image (which we will generalize away from CSS)\n * and have a header and title.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  @Input() title?: string;\n  @Input() body?: string;\n\n  constructor(private logService: Logger) { }\n\n  ngOnInit() {\n    this.logService.log(' Home Component: ' + 'ngOnInit called.');\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      Free.Time\n      \n        Some crave for the latest technologies, some crave for the knowledge -\n        free of syntax, some crave for a healthy mix of hands-on and wealthy\n        experience. In some way or the other, we all are handled by the inner\n        cravings and to decide what works for an individual, it is usually a\n        crowd copy that is employed. My friend just tried this, my friend just\n        tried that. It might work for some, but for manjority it is a futile\n        exercise. In one such new and spiritied efforts, we are trying to\n        collate our collective energies to learn and build a platform to share,\n        highlight, and advertise the knowledge we have accumulated, and to\n        wisely build upon our professional social presence.\n      \n      \n      @Free.Time\n    \n  \n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                @media screen and (max-width: 480px) {\n  .size-check {\n    display: none;\n  }\n  #intro {\n    min-height: 640px;\n    width:100%;\n  }\n}\n\n.dimCheck {\n  min-height: 640px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Free.Time              Some crave for the latest technologies, some crave for the knowledge -        free of syntax, some crave for a healthy mix of hands-on and wealthy        experience. In some way or the other, we all are handled by the inner        cravings and to decide what works for an individual, it is usually a        crowd copy that is employed. My friend just tried this, my friend just        tried that. It might work for some, but for manjority it is a futile        exercise. In one such new and spiritied efforts, we are trying to        collate our collective energies to learn and build a platform to share,        highlight, and advertise the knowledge we have accumulated, and to        wisely build upon our professional social presence.                  @Free.Time      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorpageComponent', 'selector': 'app-errorpage'},{'name': 'FooterComponent', 'selector': 'ft-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'ft-navbar'},{'name': 'PersonComponent', 'selector': 'ft-person'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ThankyouComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDetails.html":{"url":"interfaces/IDetails.html","title":"interface - IDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        gitProfile\n                                \n                                \n                                        googleProfile\n                                \n                                \n                                        subscribeToEmail\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Some about me description.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gitProfile\n                                    \n                                \n                                \n                                    \n                                        gitProfile:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    GIT profile url.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        googleProfile\n                                    \n                                \n                                \n                                    \n                                        googleProfile:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Google profile URL.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscribeToEmail\n                                    \n                                \n                                \n                                    \n                                        subscribeToEmail:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Subsciption to email.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IPrincipal {\n  /**\n   * Email, Registered user name for the user.\n   */\n  email: string;\n  /**\n   * Password\n   */\n  password: string;\n}\n\nexport interface IUser {\n  /**\n   * First name for the user.\n   */\n  name: string;\n  /**\n   * Last name for the user.\n   */\n  lastName: string;\n  /**\n   * Image URL.\n   */\n  imageUrl: string;\n}\n\nexport interface IDetails {\n  /**\n   * Subsciption to email.\n   */\n  subscribeToEmail: number;\n  /**\n   * GIT profile url.\n   */\n  gitProfile: string;\n  /**\n   * Google profile URL.\n   */\n  googleProfile: string;\n  /**\n   * Some about me description.\n   */\n  description: string;\n}\n\n\n/**\n * Model class that specifies the New user profile information.\n */\nexport interface IUserProfile {\n  /**\n   * User information\n   */\n  user: IPrincipal;\n\n  /**\n   * User information\n   */\n  profile: IUser;\n\n  /**\n   * User details\n   */\n  details: IDetails;\n}\n\nexport const dummyUser: IUserProfile = {\n  user: {\n    email: 'saurabh777@gmail.com',\n    password: 'ABCDEF123456',\n  },\n  profile: {\n    name: 'Saurabh',\n    lastName: 'Sharma',\n    imageUrl: '',\n  },\n  details: {\n    subscribeToEmail: 1,\n    gitProfile: 'https://www.github.com/samarthya',\n    googleProfile: '',\n    description: 'This lad is still learning.'\n  }\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPrincipal.html":{"url":"interfaces/IPrincipal.html","title":"interface - IPrincipal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPrincipal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Email, Registered user name for the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Password\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IPrincipal {\n  /**\n   * Email, Registered user name for the user.\n   */\n  email: string;\n  /**\n   * Password\n   */\n  password: string;\n}\n\nexport interface IUser {\n  /**\n   * First name for the user.\n   */\n  name: string;\n  /**\n   * Last name for the user.\n   */\n  lastName: string;\n  /**\n   * Image URL.\n   */\n  imageUrl: string;\n}\n\nexport interface IDetails {\n  /**\n   * Subsciption to email.\n   */\n  subscribeToEmail: number;\n  /**\n   * GIT profile url.\n   */\n  gitProfile: string;\n  /**\n   * Google profile URL.\n   */\n  googleProfile: string;\n  /**\n   * Some about me description.\n   */\n  description: string;\n}\n\n\n/**\n * Model class that specifies the New user profile information.\n */\nexport interface IUserProfile {\n  /**\n   * User information\n   */\n  user: IPrincipal;\n\n  /**\n   * User information\n   */\n  profile: IUser;\n\n  /**\n   * User details\n   */\n  details: IDetails;\n}\n\nexport const dummyUser: IUserProfile = {\n  user: {\n    email: 'saurabh777@gmail.com',\n    password: 'ABCDEF123456',\n  },\n  profile: {\n    name: 'Saurabh',\n    lastName: 'Sharma',\n    imageUrl: '',\n  },\n  details: {\n    subscribeToEmail: 1,\n    gitProfile: 'https://www.github.com/samarthya',\n    googleProfile: '',\n    description: 'This lad is still learning.'\n  }\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProfile.html":{"url":"interfaces/IProfile.html","title":"interface - IProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/profiles.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        giturl\n                                \n                                \n                                        imageUrl\n                                \n                                \n                                        linkedIn\n                                \n                                \n                                        subTitle\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        giturl\n                                    \n                                \n                                \n                                    \n                                        giturl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrl\n                                    \n                                \n                                \n                                    \n                                        imageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        linkedIn\n                                    \n                                \n                                \n                                    \n                                        linkedIn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subTitle\n                                    \n                                \n                                \n                                    \n                                        subTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IProfile {\n  title: string;\n  subTitle: string;\n  description: string;\n  imageUrl: string;\n  linkedIn: string;\n  giturl: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        imageUrl\n                                \n                                \n                                        lastName\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrl\n                                    \n                                \n                                \n                                    \n                                        imageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Image URL.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Last name for the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    First name for the user.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IPrincipal {\n  /**\n   * Email, Registered user name for the user.\n   */\n  email: string;\n  /**\n   * Password\n   */\n  password: string;\n}\n\nexport interface IUser {\n  /**\n   * First name for the user.\n   */\n  name: string;\n  /**\n   * Last name for the user.\n   */\n  lastName: string;\n  /**\n   * Image URL.\n   */\n  imageUrl: string;\n}\n\nexport interface IDetails {\n  /**\n   * Subsciption to email.\n   */\n  subscribeToEmail: number;\n  /**\n   * GIT profile url.\n   */\n  gitProfile: string;\n  /**\n   * Google profile URL.\n   */\n  googleProfile: string;\n  /**\n   * Some about me description.\n   */\n  description: string;\n}\n\n\n/**\n * Model class that specifies the New user profile information.\n */\nexport interface IUserProfile {\n  /**\n   * User information\n   */\n  user: IPrincipal;\n\n  /**\n   * User information\n   */\n  profile: IUser;\n\n  /**\n   * User details\n   */\n  details: IDetails;\n}\n\nexport const dummyUser: IUserProfile = {\n  user: {\n    email: 'saurabh777@gmail.com',\n    password: 'ABCDEF123456',\n  },\n  profile: {\n    name: 'Saurabh',\n    lastName: 'Sharma',\n    imageUrl: '',\n  },\n  details: {\n    subscribeToEmail: 1,\n    gitProfile: 'https://www.github.com/samarthya',\n    googleProfile: '',\n    description: 'This lad is still learning.'\n  }\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserProfile.html":{"url":"interfaces/IUserProfile.html","title":"interface - IUserProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n            \n                Description\n            \n            \n                Model class that specifies the New user profile information.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        details\n                                \n                                \n                                        profile\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:         IDetails\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDetails\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User details\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profile\n                                    \n                                \n                                \n                                    \n                                        profile:         IUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IUser\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User information\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         IPrincipal\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPrincipal\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User information\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IPrincipal {\n  /**\n   * Email, Registered user name for the user.\n   */\n  email: string;\n  /**\n   * Password\n   */\n  password: string;\n}\n\nexport interface IUser {\n  /**\n   * First name for the user.\n   */\n  name: string;\n  /**\n   * Last name for the user.\n   */\n  lastName: string;\n  /**\n   * Image URL.\n   */\n  imageUrl: string;\n}\n\nexport interface IDetails {\n  /**\n   * Subsciption to email.\n   */\n  subscribeToEmail: number;\n  /**\n   * GIT profile url.\n   */\n  gitProfile: string;\n  /**\n   * Google profile URL.\n   */\n  googleProfile: string;\n  /**\n   * Some about me description.\n   */\n  description: string;\n}\n\n\n/**\n * Model class that specifies the New user profile information.\n */\nexport interface IUserProfile {\n  /**\n   * User information\n   */\n  user: IPrincipal;\n\n  /**\n   * User information\n   */\n  profile: IUser;\n\n  /**\n   * User details\n   */\n  details: IDetails;\n}\n\nexport const dummyUser: IUserProfile = {\n  user: {\n    email: 'saurabh777@gmail.com',\n    password: 'ABCDEF123456',\n  },\n  profile: {\n    name: 'Saurabh',\n    lastName: 'Sharma',\n    imageUrl: '',\n  },\n  details: {\n    subscribeToEmail: 1,\n    gitProfile: 'https://www.github.com/samarthya',\n    googleProfile: '',\n    description: 'This lad is still learning.'\n  }\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InMemoryDataService.html":{"url":"injectables/InMemoryDataService.html","title":"injectable - InMemoryDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InMemoryDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/in-memory-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDb\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createDb\n                        \n                        \n                    \n                \n            \n            \n                \ncreateDb()\n                \n            \n\n\n            \n                \n                    Defined in src/app/in-memory-data.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         { login: any; }\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IUserProfile } from './models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InMemoryDataService {\n  createDb() {\n    const login: IUserProfile = {\n      user: {\n        email: 'saurabh777@gmail.com',\n        password: 'ABCDEF123456',\n      },\n      profile: {\n        name: 'Saurabh',\n        lastName: 'Sharma',\n        imageUrl: '',\n      },\n      details: {\n        subscribeToEmail: 1,\n        gitProfile: 'https://www.github.com/samarthya',\n        googleProfile: '',\n        description: 'This lad is still learning.'\n      }\n    };\n    return { login };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/log.service.ts\n        \n\n            \n                Description\n            \n            \n                A place holder class to simplify logging to console at the moment.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _debugMode\n                            \n                            \n                                    Private\n                                dateInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    debugMode\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/log.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(msg: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/log.service.ts:29\n                \n            \n\n\n            \n                \n                    Error logging capability.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Message to be looged.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(msg: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/log.service.ts:19\n                \n            \n\n\n            \n                \n                    Simple logging message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Message to be logged.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(msg: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/log.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _debugMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/log.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dateInstance\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/log.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        debugMode\n                    \n                \n\n                \n                    \n                        getdebugMode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/log.service.ts:41\n                                \n                            \n\n                \n                    \n                        setdebugMode(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/log.service.ts:45\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\n\n/**\n * A place holder class to simplify logging to console at the moment.\n */\n@Injectable()\nexport class Logger {\n  private dateInstance: Date = new Date();\n  private _debugMode = true;\n\n  constructor( ) {\n\n  }\n\n  /**\n   * Simple logging message.\n   * @param msg Message to be logged.\n   */\n  log(msg: any) {\n    if (this.debugMode === true) {\n       console.log(this.dateInstance.getDate() + ' : ' + msg);\n      }\n  }\n\n  /**\n   * Error logging capability.\n   * @param msg Message to be looged.\n   */\n  error(msg: any) {\n    if (this.debugMode === true) {\n      console.error(this.dateInstance.getDate() + ' : ' + msg);\n    }\n  }\n\n  warn(msg: any) {\n    if (this.debugMode === true) {\n      console.warn(this.dateInstance.getDate() + ' : ' + msg);\n    }\n  }\n\n  public get debugMode() {\n    return this._debugMode;\n  }\n\n  public set debugMode(value) {\n    this._debugMode = value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger-1.html":{"url":"injectables/Logger-1.html","title":"injectable - Logger-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/log.service.ts\n        \n\n            \n                Description\n            \n            \n                A place holder class to simplify logging to console at the moment.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _debugMode\n                            \n                            \n                                    Private\n                                dateInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    debugMode\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/log.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(msg: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/log.service.ts:31\n                \n            \n\n\n            \n                \n                    Error logging capability.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Message to be looged.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(msg: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/log.service.ts:21\n                \n            \n\n\n            \n                \n                    Simple logging message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Message to be logged.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(msg: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/log.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _debugMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/log.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dateInstance\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/log.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        debugMode\n                    \n                \n\n                \n                    \n                        getdebugMode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/log.service.ts:43\n                                \n                            \n\n                \n                    \n                        setdebugMode(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/log.service.ts:47\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\n\n/**\n * A place holder class to simplify logging to console at the moment.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class Logger {\n  private dateInstance: Date = new Date();\n  private _debugMode = true;\n\n  constructor( ) {\n\n  }\n\n  /**\n   * Simple logging message.\n   * @param msg Message to be logged.\n   */\n  log(msg: any) {\n    if (this.debugMode === true) {\n       console.log(this.dateInstance.getDate() + ' : ' + msg);\n      }\n  }\n\n  /**\n   * Error logging capability.\n   * @param msg Message to be looged.\n   */\n  error(msg: any) {\n    if (this.debugMode === true) {\n      console.error(this.dateInstance.getDate() + ' : ' + msg);\n    }\n  }\n\n  warn(msg: any) {\n    if (this.debugMode === true) {\n      console.warn(this.dateInstance.getDate() + ' : ' + msg);\n    }\n  }\n\n  public get debugMode() {\n    return this._debugMode;\n  }\n\n  public set debugMode(value) {\n    this._debugMode = value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Login component\nAdd some more description.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentUser$\n                            \n                            \n                                formLogin\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                doLogin\n                            \n                            \n                                    Public\n                                isPasswordValid\n                            \n                            \n                                    Public\n                                isUsernameValid\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:47\n                \n            \n\n\n            \n                \n                    Fires the login event.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isPasswordValid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPasswordValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isUsernameValid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isUsernameValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentUser$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Logger } from '../log.service';\nimport { Store } from '@ngrx/store';\nimport { IPrincipal } from 'src/app/models/user.model';\nimport { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport * as AppActions from '../actions/login.action';\n\nimport { Observable } from 'rxjs';\nimport { State } from 'src/app/state/app.state';\nimport { MAX_USER_LENGTH } from '../constants/variables.constant';\n\n/**\n * Login component\n * Add some more description.\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  private currentUser$: Observable;\n  username: FormControl;\n  password: FormControl;\n  formLogin: FormGroup;\n\n  constructor(private logger: Logger, private store: Store) {\n  this.username = new FormControl('', [Validators.required, Validators.email, Validators.maxLength(MAX_USER_LENGTH)]);\n  this.password = new FormControl('', [Validators.required]);\n\n  this.formLogin = new FormGroup({\n    username: this.username,\n    password: this.password\n  });\n\n  }\n\n  ngOnInit() {\n    this.logger.log(' ngOnInit called for LoginComponent.');\n    this.currentUser$ = this.store.select(state => state);\n  }\n\n  /**\n   * Fires the login event.\n   */\n  public doLogin(): void {\n    this.logger.log(' doLogin() invoked. ');\n\n    const principal: IPrincipal = {\n      email: this.username.value,\n      password: this.password.value\n    };\n\n    this.store.dispatch(AppActions.login({ principal }));\n  }\n\n  public isUsernameValid(): boolean {\n    const username: AbstractControl = this.formLogin.get('username');\n    if ( username.touched ) {\n      return username.invalid;\n    } else {\n      return false;\n    }\n  }\n\n  public isPasswordValid(): boolean {\n    const password: AbstractControl = this.formLogin.get('password');\n    if ( password.touched ) {\n      return password.invalid;\n    } else {\n      return false;\n    }\n  }\n\n}\n\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          Sign In With\n\n          \n            \n          \n          \n            \n          \n        \n        \n        \n          \n            \n              \n              The unique username provided to\n                you.\n            \n            \n              \n              Your secure password.\n            \n          \n\n          \n            Forgot password?\n          \n          \n            Submit\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./login.component.css\n                \n                @media screen and (max-width: 480px) {\n\n  img {\n    background-color: grey;\n    min-height: 330px;\n  }\n\n  .inlineD {\n    display: inline;\n  }\n\n  button[type=\"submit\"] {\n    float: right;\n  }\n}\n\nboxSize {\n  min-width: 500px;\n  min-height: 400px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Sign In With                                                                                                                                          The unique username provided to                you.                                                    Your secure password.                                            Forgot password?                                Submit                              '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorpageComponent', 'selector': 'app-errorpage'},{'name': 'FooterComponent', 'selector': 'ft-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'ft-navbar'},{'name': 'PersonComponent', 'selector': 'ft-person'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ThankyouComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseLoginURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doLogin\n                            \n                            \n                                    Private\n                                getBasicHeader\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Public\n                                loginUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/app/login.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doLogin\n                        \n                        \n                    \n                \n            \n            \n                \ndoLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:43\n                \n            \n\n\n            \n                \n                    Loging capability exposed.\nIt takes in argument as IUserProfile\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getBasicHeader\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBasicHeader(userName: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { headers: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(operation: string, result?: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:29\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    \nHandle Http operation that failed.\nLet the app continue.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    operation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'operation'\n                                    \n\n                                    \n                                        \nname of the operation that failed\n\n\n                                    \n                                \n                                \n                                    result\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \noptional value to return as the observable result\nMore information  here \n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (error: any) => any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loginUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loginUser(userName: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseLoginURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'api/login'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Logger } from './components/index';\nimport { Observable, of } from 'rxjs';\nimport { IUserProfile, dummyUser } from './models/user.model';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  private baseLoginURL = 'api/login';\n\n  constructor(private http: HttpClient, private logger: Logger) {\n\n  }\n\n  /**\n   * \n   * Handle Http operation that failed.\n   * Let the app continue.\n   * \n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   * \n   * More information  here \n   */\n  private handleError(operation = 'operation', result?: T) {\n    return (error: any): Observable => {\n      // TODO: better job of transforming error for user consumption\n      this.logger.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /**\n   * Loging capability exposed.\n   * It takes in argument as IUserProfile\n   */\n  doLogin(): Observable {\n    return this.http.get(this.baseLoginURL).pipe(\n      tap(_ => this.logger.log(' Login called.')),\n      catchError(this.handleError('login', []))\n    );\n  }\n\n  private getBasicHeader(userName: string, password: string) {\n    const authorizationData: string = 'Basic ' + btoa(userName + ':' + password);\n\n    return {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        Authorization: authorizationData,\n      })\n    };\n\n  }\n\n  public loginUser(userName: string, password: string): Observable {\n    return this.http.post(this.baseLoginURL, {}, this.getBasicHeader(userName, password)).pipe(tap((user: IUserProfile) => {\n      console.log(' User logged in ' + user.user.email);\n    })).pipe(catchError(err => {\n      return of( dummyUser );\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n    \n        Description\n    \n    \n        Navigation component that holds the navigation links,\nbrand icon and other information to guide the navigation.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ft-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentUser$\n                            \n                            \n                                    Private\n                                loggedInUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getUserEmail\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                userLoggedIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUserEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserEmail()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:44\n                \n            \n\n\n            \n                \n                    Returns the logged in user.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:51\n                \n            \n\n\n            \n                \n                    Property to check whether the user has logged in.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentUser$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.select(state => state.state )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loggedInUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPrincipal\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Logger } from '../log.service';\n\nimport { Store } from '@ngrx/store';\n\nimport { Observable } from 'rxjs';\nimport { State, AppState } from 'src/app/state/app.state';\nimport { IPrincipal } from 'src/app/models/user.model';\n\n/**\n * Navigation component that holds the navigation links,\n * brand icon and other information to guide the navigation.\n */\n@Component({\n  selector: 'ft-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  private currentUser$: Observable = this.store.select(state => state.state );\n  private loggedInUser: IPrincipal;\n\n\n  constructor(private logger: Logger, private store: Store) {\n    this.loggedInUser = null;\n  }\n\n  ngOnInit() {\n    this.logger.log(' ngOnInit for NavBarComponent called.');\n    this.currentUser$.subscribe((userInfo: AppState) => {\n\n      if (userInfo.loggedIn) {\n        this.loggedInUser = userInfo.userInfo;\n        this.logger.log('Welcome ' + this.loggedInUser.email);\n      }\n    });\n\n  }\n\n  /**\n   * Returns the logged in user.\n   */\n  public getUserEmail(): string {\n    return this.loggedInUser.email;\n  }\n\n  /**\n   * Property to check whether the user has logged in.\n   */\n  public userLoggedIn(): boolean {\n    return (this.loggedInUser != null) && (this.loggedInUser.email.length > 0);\n  }\n\n}\n\n    \n\n    \n        \n  \n\n  \n    \n  \n\n  \n    \n      \n        \n          Home (current)\n        \n      \n      \n        About (current)\n      \n      \n        Contact\n      \n      \n        \n          P-Holder\n        \n        \n          Action\n          Another action\n          \n          Something else here\n        \n      \n    \n\n\n    \n      \n      Search\n    \n\n    \n      \n          \n          Welcome {{getUserEmail()!}}\n          \n      \n      \n    \n\n  \n\n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Home (current)                            About (current)                    Contact                              P-Holder                          Action          Another action                    Something else here                                  Search                                  Welcome {{getUserEmail()!}}                            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorpageComponent', 'selector': 'app-errorpage'},{'name': 'FooterComponent', 'selector': 'ft-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'ft-navbar'},{'name': 'PersonComponent', 'selector': 'ft-person'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ThankyouComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PersonComponent.html":{"url":"components/PersonComponent.html","title":"component - PersonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PersonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/person/person.component.ts\n\n\n    \n        Description\n    \n    \n        Person component allows a card visualization for the profiles that needs to be shown.\nIt is the smallest component, that only takes input from the component creating this\ncomponent and visualizes using bootstrap cards.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ft-person\n            \n\n            \n                styleUrls\n                ./person.component.css\n            \n\n\n\n            \n                templateUrl\n                ./person.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/person/person.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        profile\n                    \n                \n                \n                    \n                        Type :         IProfile\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/person/person.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/person/person.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { IProfile } from 'src/app/models/profiles.model';\nimport { Logger } from '../log.service';\n\n\n/**\n * Person component allows a card visualization for the profiles that needs to be shown.\n * It is the smallest component, that only takes input from the component creating this\n * component and visualizes using bootstrap cards.\n */\n@Component({\n  selector: 'ft-person',\n  templateUrl: './person.component.html',\n  styleUrls: ['./person.component.css']\n})\n\nexport class PersonComponent implements OnInit {\n\n  @Input() profile: IProfile;\n\n  constructor(private logger: Logger) {\n\n  }\n\n  ngOnInit() {\n    this.logger.log(' ngOnInit called for PersonComponent');\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    {{ profile.title }}\n    {{ profile.subTitle }}\n    {{ profile.description }}\n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./person.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ profile.title }}    {{ profile.subTitle }}    {{ profile.description }}                              '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorpageComponent', 'selector': 'app-errorpage'},{'name': 'FooterComponent', 'selector': 'ft-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'ft-navbar'},{'name': 'PersonComponent', 'selector': 'ft-person'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ThankyouComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PersonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/register/register.component.ts\n\n\n    \n        Description\n    \n    \n        It allows user to be registered for the portal. The basic information expected is\n\n{\n  firstName: \"Name\",\n  lastName: \"LastName\",\n}\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                passwordConfirm\n                            \n                            \n                                    Private\n                                userP\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isPasswordValid\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    user\n                                \n                                \n                                    confirmPassword\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/register/register.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isPasswordValid\n                        \n                        \n                    \n                \n            \n            \n                \nisPasswordValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/register/register.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/register/register.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            passwordConfirm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/register/register.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userP\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IUserProfile\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    user: {\n      email: '',\n      password: '',\n    },\n    profile: {\n      name: '',\n      lastName: '',\n      imageUrl: '',\n    },\n    details: {\n      subscribeToEmail: 0,\n      gitProfile: '',\n      googleProfile: '',\n      description: ''\n    }\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/register/register.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n                \n                    \n                        getuser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/register/register.component.ts:41\n                                \n                            \n\n                \n                    \n                        setuser(user)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/register/register.component.ts:45\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            user\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/register/register.component.ts:69\n                                \n                            \n\n                \n                    \n                        setconfirmPassword(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/register/register.component.ts:72\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { IUserProfile } from 'src/app/models/user.model';\nimport { Logger } from '../log.service';\n\n/**\n * It allows user to be registered for the portal. The basic information expected is\n * \n * {\n *  firstName: \"Name\",\n *  lastName: \"LastName\",\n * }\n * \n */\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  private userP: IUserProfile = {\n    user: {\n      email: '',\n      password: '',\n    },\n    profile: {\n      name: '',\n      lastName: '',\n      imageUrl: '',\n    },\n    details: {\n      subscribeToEmail: 0,\n      gitProfile: '',\n      googleProfile: '',\n      description: ''\n    }\n  };\n\n  private passwordConfirm: string;\n\n  get user(): IUserProfile {\n    return this.userP;\n  }\n\n  set user(user: IUserProfile) {\n    this.userP = user;\n  }\n\n  constructor(private logger: Logger) {\n  }\n\n  ngOnInit() {\n    this.logger.log(' Register ngOnInit called');\n  }\n\n  isPasswordValid(): boolean {\n    const p1: string =  this.userP.user.password;\n    const p2: string = this.confirmPassword;\n    if (p1 != null && p2 != null) {\n      if (p1.length !== 0 && p2.length !== 0) {\n        if (p1.search(p2) === 0 && p1.length === p2.length) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  public get confirmPassword(): string {\n    return this.passwordConfirm;\n  }\n  public set confirmPassword(value: string) {\n    this.passwordConfirm = value;\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n      \n      \n        \n          First and last name\n        \n        \n        \n      \n\n      \n      \n        Email address\n        \n        We'll never share your email with anyone else.\n      \n\n      \n      \n        Password\n        \n        Confirm\n        \n      \n\n      \n      \n        Please select a profile pic\n        \n      \n\n      \n      \n        \n          \n            \n          \n        \n        \n      \n\n\n\n      \n      \n        \n          Description\n        \n        \n      \n\n      \n      \n          \n            \n              \n            \n          \n          \n        \n        \n          \n            \n              \n            \n          \n          \n      \n\n      \n      Submit\n    \n  \n  {{user | json}}\n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                imgSize {\n  min-width: 80px;\n  max-width: 85px;\n  min-height: 80px;\n  max-height: 85px;\n  float: right;\n}\n\n.ng-valid[required], .ng-valid.required  {\n  border-left: 5px solid #42A948; /* green */\n}\n\n.ng-invalid:not(form), invalid  {\n  border-left: 5px solid #a94442; /* red */\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      First and last name                                                  Email address                We\\'ll never share your email with anyone else.                          Password                Confirm                                  Please select a profile pic                                                                                                                      Description                                                                                                                                                                                                            Submit        {{user | json}}'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorpageComponent', 'selector': 'app-errorpage'},{'name': 'FooterComponent', 'selector': 'ft-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'ft-navbar'},{'name': 'PersonComponent', 'selector': 'ft-person'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ThankyouComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State.html":{"url":"interfaces/State.html","title":"interface - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/app.state.ts\n        \n\n            \n                Description\n            \n            \n                The global state for the application.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        state\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         AppState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AppState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IPrincipal } from '../models/user.model';\n\n/**\n * Representation of application state.\n */\nexport interface AppState {\n  /**\n   * A varable to denote whether the user has logged in.\n   */\n  loggedIn: boolean;\n  /**\n   * User information.\n   * @see IPrincipal\n   */\n  userInfo: IPrincipal;\n}\n\n/**\n * The global state for the application.\n */\nexport interface State {\n  state: AppState;\n}\n\n/**\n * Utility function to return the EMPTY user for the AppState\n * @see {IPrincipal}\n */\nexport function getEmptyUser(): IPrincipal {\n  return {\n    email: '',\n    password: ''\n  };\n}\n\n/**\n * Returns the Empty state (Utility function.)\n * @see {State}\n */\nexport function getEmptyState(): State {\n  return {\n    state: {\n      userInfo: getEmptyUser(),\n      loggedIn: false\n    }\n  };\n}\nexport function getEmptyAppState(): AppState {\n  return {\n      userInfo: getEmptyUser(),\n      loggedIn: false\n  };\n}\n\nexport const initialAppState: AppState = getEmptyAppState();\nexport const initialState: State = getEmptyState();\n\n\n/**\n * Seelctors\n */\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThankyouComponent.html":{"url":"components/ThankyouComponent.html","title":"component - ThankyouComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ThankyouComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/thankyou/thankyou.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./thankyou.component.css\n            \n\n\n\n            \n                templateUrl\n                ./thankyou.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    messageString\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/thankyou/thankyou.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/thankyou/thankyou.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/thankyou/thankyou.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        messageString\n                    \n                \n\n                \n                    \n                        getmessageString()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/thankyou/thankyou.component.ts:29\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Logger } from '../log.service';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\nimport { switchMap, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { MESSAGE } from '../constants/variables.constant';\n\n@Component({\n  templateUrl: './thankyou.component.html',\n  styleUrls: ['./thankyou.component.css']\n})\nexport class ThankyouComponent implements OnInit {\n  private message: string;\n  // private message$: Observable;\n\n  constructor(private logger: Logger, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.logger.log(' ngOnInit called for ThankyouComponent');\n    // this.message$ = this.route.queryParamMap.pipe(\n    //   map(param => {\n    //     return param.get(MESSAGE);\n    //   })\n    // );\n\n    this.message = this.route.snapshot.queryParams[MESSAGE];\n  }\n\n  get messageString(): string {\n    return this.message;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          {{ messageString }}\n      \n      \n      Thank you!\n    \n  \n\n\n    \n\n    \n                \n                    ./thankyou.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{ messageString }}                  Thank you!      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorpageComponent', 'selector': 'app-errorpage'},{'name': 'FooterComponent', 'selector': 'ft-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'ft-navbar'},{'name': 'PersonComponent', 'selector': 'ft-person'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ThankyouComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ThankyouComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ThankyouResolver.html":{"url":"guards/ThankyouResolver.html","title":"guard - ThankyouResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    ThankyouResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/components/thankyou/thankyou.resolver.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/thankyou/thankyou.resolver.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/thankyou/thankyou.resolver.service.ts:16\n                \n            \n\n\n            \n                \n                    The method to check before the route resolves.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Logger } from '../log.service';\nimport { MESSAGE } from '../constants/variables.constant';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ThankyouResolver implements Resolve {\n\n  constructor(private logger: Logger) {\n\n  }\n\n  /**\n   * The method to check before the route resolves.\n   */\n  public resolve(route: ActivatedRouteSnapshot) {\n    this.logger.log(' Resolve guard in play: ThankYouResolver.');\n    return route.queryParams[MESSAGE];\n  }\n\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/activatedroute-stub.ts\n            \n            class\n            ActivatedRouteStub\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/app.effects.ts\n            \n            injectable\n            AppEffects\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/components/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/actions/login.action.ts\n            \n            variable\n            login\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/actions/login.action.ts\n            \n            variable\n            loginFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/actions/login.action.ts\n            \n            variable\n            loginSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/actions/login.action.ts\n            \n            variable\n            logout\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/activatedroute-stub.ts\n            \n            class\n            ActivatedRouteStub\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/components/constants/variables.constant.ts\n            \n            variable\n            MAX_USER_LENGTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/constants/variables.constant.ts\n            \n            variable\n            MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/contact/contact.component.ts\n            \n            component\n            ContactComponent\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                src/app/components/errorpage/errorpage.component.ts\n            \n            component\n            ErrorpageComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/components/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/components/log.service.ts\n            \n            injectable\n            Logger\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                20 %\n                (2/10)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/components/person/person.component.ts\n            \n            component\n            PersonComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/components/thankyou/thankyou.component.ts\n            \n            component\n            ThankyouComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/thankyou/thankyou.resolver.service.ts\n            \n            guard\n            ThankyouResolver\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/data/test/data.values.ts\n            \n            variable\n            userProfile1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/in-memory-data.service.ts\n            \n            injectable\n            InMemoryDataService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/log.service.ts\n            \n            injectable\n            Logger\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/login.service.ts\n            \n            injectable\n            LoginService\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/models/profiles.model.ts\n            \n            interface\n            IProfile\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            interface\n            IDetails\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            interface\n            IPrincipal\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            interface\n            IUser\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            interface\n            IUserProfile\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            variable\n            dummyUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/reducers/index.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/reducers/index.ts\n            \n            variable\n            loginReducer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/reducers/index.ts\n            \n            variable\n            metaReducers\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/reducers/index.ts\n            \n            variable\n            ROOT_REDUCERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/app.state.ts\n            \n            interface\n            AppState\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/state/app.state.ts\n            \n            interface\n            State\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/state/app.state.ts\n            \n            function\n            getEmptyAppState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/app.state.ts\n            \n            function\n            getEmptyState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/state/app.state.ts\n            \n            function\n            getEmptyUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/state/app.state.ts\n            \n            variable\n            initialAppState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/app.state.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.2.1\n        \n            @angular/common : ^8.2.0\n        \n            @angular/compiler : ^8.2.1\n        \n            @angular/core : ^8.2.1\n        \n            @angular/forms : ^8.2.1\n        \n            @angular/platform-browser : ^8.2.1\n        \n            @angular/platform-browser-dynamic : ^8.2.1\n        \n            @angular/router : ^8.2.1\n        \n            @fortawesome/angular-fontawesome : ^0.5.0\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.21\n        \n            @fortawesome/free-brands-svg-icons : ^5.10.1\n        \n            @fortawesome/free-solid-svg-icons : ^5.10.1\n        \n            @ngrx/effects : ^8.2.0\n        \n            @ngrx/store : ^8.2.0\n        \n            @ngrx/store-devtools : ^8.2.0\n        \n            angular-in-memory-web-api : ^0.8.0\n        \n            bootstrap : ^4.3.1\n        \n            ionic : ^5.2.4\n        \n            jquery : ^3.4.1\n        \n            popper.js : ^1.15.0\n        \n            rxjs : ~6.5.2\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.10.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getEmptyAppState   (src/.../app.state.ts)\n                        \n                        \n                            getEmptyState   (src/.../app.state.ts)\n                        \n                        \n                            getEmptyUser   (src/.../app.state.ts)\n                        \n                        \n                            reducer   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/state/app.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getEmptyAppState\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmptyAppState()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         AppState\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEmptyState\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmptyState()\n                \n            \n\n\n\n\n            \n                \n                    Returns the Empty state (Utility function.)\n\n\n                    \n                        Returns :         State\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEmptyUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmptyUser()\n                \n            \n\n\n\n\n            \n                \n                    Utility function to return the EMPTY user for the AppState\n\n\n                    \n                        Returns :         IPrincipal\n\n                    \n                \n            \n        \n    \n    src/app/reducers/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            reducer\n                        \n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFreeTime\nThis project was generated with Angular CLI version 8.1.2. The intention behind this project is to learn new techstack while trying to solve a real life probelm. You should be able to use git and employ various commands to commit.\nAngular\nAngular is a feature rich JS framework with various built-in capabilities like HTTP communication, routing, observables and dependency injection. It enhances productivity and reusability for development teams by eliminating the need to implement boilerplate code common to modern web apps.\nAngular is an opinionated framework, with loads of recommendations or prescriptions, this facilitates consistent application logic building with increased productivity.\nChronology\nInstall angular client version 8.1.2 and you are almost set. You can navigate to any folder of your choice or if required you can create one. I prefer to have my own folder and that way I can ensure what I am creating and where.\nThings you should know before you start contributing.\n\nAngular bootstrapping\nJavaScript and [Angular Modules]\nSome knowledge of CommonJS, AMD (Asynchronous Module Definition)  - RequireJS, Webpack and Babel would be encouraging. ref-link\nIt is recommended to understand what is package.json and how to maintain it.\nLearn about the styleguide.\nAngular Lifecycle hooks.\nProperty binding\n\nApplication creation\nThe command (Angular CLI) used to create this application.\nng new --help\narguments:\n  name\n    The name of the new workspace and initial project.\n\noptions:\n  --collection (-c)\n    A collection of schematics to use in generating the initial app.\n  --commit\n    Initial git repository commit information.\n  --create-application\n    When true (the default), creates a new initial app project in the src folder of the new workspace. When false, creates an empty workspace with no initial app. You can then use the generate application command so that all apps are created in the projects folder.\n  --defaults\n    When true, disables interactive input prompts for options with a default.\n  --directory\n    The directory name to create the workspace in.\n  --dry-run (-d)\n    When true, runs through and reports activity without writing out results.\n  --enable-ivy\n    When true, creates a new app that uses the Ivy rendering engine.\n  --force (-f)\n    When true, forces overwriting of existing files.\n  --help\n    Shows a help message for this command in the console.\n  --inline-style (-s)\n    When true, includes styles inline in the component TS file. By default, an external styles file is created and referenced in the component TS file.\n  --inline-template (-t)\n    When true, includes template inline in the component TS file. By default, an external template file is created and referenced in the component TS file.\n  --interactive\n    When false, disables interactive input prompts.\n  --minimal\n    When true, creates a project without any testing frameworks. (Use for learning purposes only.)\n  --new-project-root\n    The path where new projects will be created, relative to the new workspace root.\n  --prefix (-p)\n    The prefix to apply to generated selectors for the initial project.\n  --routing\n    When true, generates a routing module for the initial project.\n  --skip-git (-g)\n    When true, does not initialize a git repository.\n  --skip-install\n    When true, does not install dependency packages.\n  --skip-tests (-S)\n    When true, does not generate \"spec.ts\" test files for the new project.\n  --style\n    The file extension or preprocessor to use for style files.\n  --verbose (-v)\n    When true, adds more details to output logging.\n  --view-encapsulation\n    The view encapsulation strategy to use in the initial project.  Pretty much delete everything in the app.component.html file and will start from there.\nRunning the development server - Application testing\nYou can use ng serve for the dev server & navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nBuild - Use --prod for production build\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nAdding a new component to your application\nng generate component test-component\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRun tests before any commit or push to the branch.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nGit - Tips\nAlways before you commit you should chceck the status\n  git statusIt will give an output like\ngit status\nOn branch v1.0\nYour branch is up-to-date with 'origin/v1.0'.\n\nChanges not staged for commit:\n  (use \"git add ...\" to update what will be committed)\n  (use \"git checkout -- ...\" to discard changes in working directory)\n\n        modified:   README.md\n\nUntracked files:\n  (use \"git add ...\" to include in what will be committed)Add the files you wish to add before you push the commit\ngit add .followed by\ngit statuswhich should give an output like\ngit status\nOn branch v1.0\nYour branch is up-to-date with 'origin/v1.0'.\n\nChanges to be committed:\n  (use \"git reset HEAD ...\" to unstage)\n\n        modified:   README.mdAlways provide comment to any changes that you shall commit.\ngit commit -m \"Added some basic components and guidelines\"In case your code gets dirty with your changes:\nGet the updated code from repo and then apply your changes to it, for storing your changes use stashing:\n1) git stash (This will save your  locally)\n2) git pull origin (This will pull the latest code from repo)\n3) git stash apply (This will apply the latest stash)\nWhat are we building & why\nThe expectation is to start with a simple SPA that will employ Angular and some cascading style sheet framework that can either be Bootstrap or Angular Material and shall have a Navigation bar at the top. The basic topics that it should cover are\n\nIntroduction/Mission statement\nAbout (The stakeholders)\nHighlights (May be link to the individual blogs)\n\nWhy choose Angular\nThe basic question that everyone asks is why you went ahead with that specific choice of framework, when the others had similar or slightly better offerring? We had a similar dilemma and we chose Angular because of the following reasons\n\nResources available.\nExisting expertise.\nTime at hand.\n\nGuidelines\nBasic guidelines to be followed\n\nNo component code to be checked in without the unit testing code (spec). helper link\n\nUnderstand ComponentFixture which gives us a reference to the component instance being tested, as well as the component’s template.\nDo understand the TestBed utility, which is responsible for initializing the environment.\nDo go through the Angular Testing.\nUndestand the Jasmine Syntax.\nUnderstand Behavior driven development.\nTools that we shall use for testing will be as provided by the Angular CLI\nKarma - The test runner.\nJasmine - The basic syntax.\nYou can explore the other options like Sinon and Wallaby, Cypress etc.\n\n\n\n\n\n\nbeforeEach(async(() => {\n    TestBed.configureTestingModule({\n      declarations: [ PersonComponent ]\n    })\n    .compileComponents();\n  }\nAngular style guideline to be employed, use lint before every commit.\nE2E to be decided.\n\nGood links to read\n\nJasmine how to spy\nProgressive web app & Service worker intro\nCan I use\nIn memory web API\nRedux store\nWhen to use Store\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nContactComponent\n\nContactComponent\n\nAppModule -->\n\nContactComponent->AppModule\n\n\n\n\n\nErrorpageComponent\n\nErrorpageComponent\n\nAppModule -->\n\nErrorpageComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPersonComponent\n\nPersonComponent\n\nAppModule -->\n\nPersonComponent->AppModule\n\n\n\nAppModule -->\n\nPersonComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nThankyouComponent\n\nThankyouComponent\n\nAppModule -->\n\nThankyouComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nLogger\n\nLogger\n\nAppModule -->\n\nLogger->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            dummyUser   (src/.../user.model.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            initialAppState   (src/.../app.state.ts)\n                        \n                        \n                            initialState   (src/.../app.state.ts)\n                        \n                        \n                            login   (src/.../login.action.ts)\n                        \n                        \n                            loginFailure   (src/.../login.action.ts)\n                        \n                        \n                            loginReducer   (src/.../index.ts)\n                        \n                        \n                            loginSuccess   (src/.../login.action.ts)\n                        \n                        \n                            logout   (src/.../login.action.ts)\n                        \n                        \n                            MAX_USER_LENGTH   (src/.../variables.constant.ts)\n                        \n                        \n                            MESSAGE   (src/.../variables.constant.ts)\n                        \n                        \n                            metaReducers   (src/.../index.ts)\n                        \n                        \n                            ROOT_REDUCERS   (src/.../index.ts)\n                        \n                        \n                            userProfile1   (src/.../data.values.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/user.model.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dummyUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IUserProfile\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  user: {\n    email: 'saurabh777@gmail.com',\n    password: 'ABCDEF123456',\n  },\n  profile: {\n    name: 'Saurabh',\n    lastName: 'Sharma',\n    imageUrl: '',\n  },\n  details: {\n    subscribeToEmail: 1,\n    gitProfile: 'https://www.github.com/samarthya',\n    googleProfile: '',\n    description: 'This lad is still learning.'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/state/app.state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialAppState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AppState\n\n                        \n                    \n                    \n                        \n                            Default value : getEmptyAppState()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         State\n\n                        \n                    \n                    \n                        \n                            Default value : getEmptyState()\n                        \n                    \n\n\n            \n        \n\n    src/app/components/actions/login.action.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction('[Login Initiatied] Login',\n  props()\n)\n                        \n                    \n\n                \n                    \n                        Actions are POJO's with type and optional Payload.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginFailure\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction('[Login Failure] Login',\n  props()\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction('[Login Success] Login',\n  props()\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction('[Logout initiated] logout')\n                        \n                    \n\n\n            \n        \n\n    src/app/reducers/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            loginReducer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createReducer(\n  initialAppState,\n  on(LoginActions.login, (state, { principal }) => {\n    return {\n      ...state,\n      userInfo: principal,\n      loggedIn: false\n    };\n  }),\n  on(\n    LoginActions.loginSuccess, (state, { userProfile }) => {\n      return {\n        ...state,\n        userInfo: userProfile.user,\n        loggedIn: true\n      };\n    }),\n  on(LoginActions.logout, (state) => ({\n    ...state,\n    userInfo: getEmptyUser(),\n    loggedIn: false\n  }))\n)\n                        \n                    \n\n                \n                    \n                        The login reducer\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            metaReducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MetaReducer[]\n\n                        \n                    \n                    \n                        \n                            Default value : !environment.production ? [] : []\n                        \n                    \n\n                \n                    \n                        Meta-reducers allow developers to pre-process actions before normal reducers are invoked.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ROOT_REDUCERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  state: reducer,\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/components/constants/variables.constant.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_USER_LENGTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 30\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MESSAGE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'message'\n                        \n                    \n\n\n            \n        \n\n    src/app/data/test/data.values.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            userProfile1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IProfile\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  title: 'Saurabh Sharma',\n  subTitle: 'Software Engineer.',\n  description: 'I am good engineer.',\n  giturl: 'https://samarthya.github.io',\n  imageUrl: '../../../assets/images/1.png',\n  linkedIn: 'https://www.linkedin.com/in/samarthyasaurabh'\n\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
