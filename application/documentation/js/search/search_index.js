var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.343,1,0.894]],["body/components/AboutComponent.html",[0,0.594,1,1.501,2,1.048,3,0.188,4,0.194,5,0.9,6,0.9,7,0.97,8,0.97,9,0.134,10,2.236,11,0.56,12,3.346,13,2.842,14,1.501,15,3.863,16,3.863,17,3.247,18,1.638,19,3.863,20,3.863,21,3.247,22,3.863,23,3.247,24,2.842,25,3.863,26,1.408,27,2.083,28,0.97,29,1.408,30,4.548,31,1.408,32,3.863,33,0.188,34,0.712,35,1.431,36,0.835,37,2.083,38,2.297,39,5.301,40,0.909,41,1.045,42,1.098,43,0.823,44,2.66,45,2.753,46,3.863,47,3.247,48,2.842,49,2.842,50,3.484,51,0.712,52,0.029,53,0.491,54,0.37,55,0.599,56,3.247,57,3.863,58,2.66,59,3.863,60,3.635,61,0.644,62,1.215,63,1.664,64,2.66,65,4.991,66,2.842,67,3.863,68,2.842,69,2.66,70,2.66,71,3.863,72,2.66,73,2.66,74,3.863,75,1.215,76,0.585,77,1.582,78,0.45,79,2.096,80,0.902,81,2.66,82,1.128,83,0.188,84,0.188,85,2.66,86,1.045,87,2.236,88,2.705,89,3.823,90,3.823,91,3.346,92,4.548,93,1.443,94,1.957,95,2.087,96,2.66,97,3.346,98,3.346,99,1.957,100,2.66,101,2.66,102,2.236,103,2.66,104,2.236,105,1.443,106,0.722,107,4.548,108,2.66,109,2.66,110,2.66,111,2.66,112,2.236,113,0.67,114,1.957,115,1.324,116,2.66,117,0.837,118,0.9,119,0.837,120,1.408,121,1.408,122,0.97,123,1.82,124,0.97,125,2.235,126,0.722,127,1.739,128,0.97,129,0.722,130,0.97,131,0.722,132,0.97,133,0.722,134,1.658,135,0.97,136,0.722,137,0.97,138,0.722,139,0.97,140,0.722,141,0.97,142,0.67,143,0.97,144,0.722,145,0.97,146,0.722,147,0.97,148,0.97,149,0.011,150,0.016,151,0.011]],["title/classes/ActivatedRouteStub.html",[84,0.233,152,1.958]],["body/classes/ActivatedRouteStub.html",[3,0.274,4,0.195,9,0.195,11,0.359,33,0.274,34,0.922,35,1.743,36,1.082,40,0.775,43,0.908,51,0.922,52,0.029,53,0.463,54,0.408,55,0.777,60,3.289,61,0.549,62,1.22,75,1.952,76,0.644,83,0.274,84,0.274,115,2.492,149,0.016,150,0.021,151,0.016,152,2.976,153,2.853,154,5.094,155,2.853,156,4.207,157,3.682,158,4.207,159,4.756,160,2.134,161,3.289,162,4.207,163,2.715,164,4.921,165,4.658,166,4.658,167,4.658,168,4.207,169,4.207,170,5.378,171,4.207,172,3.26,173,3.682,174,1.574,175,4.207,176,3.26,177,4.207,178,1.082,179,4.658,180,4.207,181,3.26,182,4.207,183,3.26,184,1.524,185,1.414,186,3.26,187,3.26]],["title/classes/ActivatedRouteStub-1.html",[84,0.194,93,1.493,152,1.637]],["body/classes/ActivatedRouteStub-1.html",[3,0.274,4,0.195,9,0.195,11,0.359,33,0.274,34,0.922,35,1.743,36,1.082,40,0.775,43,0.908,51,0.922,52,0.029,53,0.463,54,0.408,55,0.777,60,3.289,61,0.549,62,1.22,75,1.952,76,0.644,83,0.274,84,0.274,115,2.492,149,0.016,150,0.021,151,0.016,152,2.976,153,2.853,155,2.853,156,4.207,157,3.682,158,4.207,159,4.756,160,2.134,161,3.289,162,4.207,163,2.715,164,4.921,165,4.658,166,4.658,167,4.658,168,4.207,169,4.207,170,5.378,171,4.207,172,3.26,173,3.682,174,1.574,175,4.207,176,3.26,177,4.207,178,1.082,179,4.658,180,4.207,181,3.26,182,4.207,183,3.26,184,1.524,185,1.414,186,3.26,187,3.26,188,5.094]],["title/interfaces/ActiveUserState.html",[189,0.894,190,2.164]],["body/interfaces/ActiveUserState.html",[3,0.242,4,0.172,9,0.172,11,0.317,14,1.415,33,0.242,34,0.85,52,0.029,54,0.376,55,0.716,61,0.485,66,3.393,76,0.717,80,0.8,83,0.424,113,1.466,149,0.015,150,0.02,151,0.015,178,0.741,189,0.93,190,3.826,191,1.573,192,2.252,193,4.613,194,2.116,195,3.293,196,4.613,197,4.582,198,5.305,199,2.829,200,4.613,201,3.836,202,1.927,203,3.032,204,1.63,205,2.521,206,3.877,207,3.158,208,1.347,209,2.881,210,3.427,211,3.427,212,3.427,213,3.877,214,2.671,215,2.521,216,2.521,217,3.393,218,2.521,219,2.596,220,1.454,221,3.032,222,2.521,223,2.503,224,2.252,225,2.252,226,2.521,227,2.521,228,2.881,229,2.881,230,2.521,231,2.881,232,2.521,233,2.881,234,3.393,235,1.454,236,2.743,237,1.249,238,2.881,239,1.573,240,2.881,241,3.393,242,2.881,243,3.427,244,2.252,245,2.521,246,2.252,247,2.881,248,2.521]],["title/components/AppComponent.html",[0,0.343,126,0.894]],["body/components/AppComponent.html",[0,0.65,1,1.004,2,1.317,3,0.261,4,0.186,5,1.252,6,1.252,7,1.974,8,1.348,9,0.186,11,0.342,12,3.569,28,1.348,29,1.769,31,1.769,35,1.163,40,0.739,41,1.453,42,1.129,43,0.574,51,0.681,52,0.029,53,0.532,54,0.301,55,0.574,76,0.739,78,0.626,80,1.133,83,0.261,84,0.383,106,1.004,117,1.163,119,1.163,120,1.769,121,1.769,122,1.348,123,2.096,124,1.348,125,2.403,126,1.62,127,1.992,128,1.348,129,1.004,130,1.348,131,1.004,132,1.348,133,1.004,134,1.974,135,1.348,136,1.004,137,1.348,138,1.004,139,1.348,140,1.004,141,1.348,142,0.932,143,1.348,144,1.004,145,1.348,146,1.004,147,1.348,148,1.348,149,0.016,150,0.021,151,0.016,208,1.453,249,3.109,250,3.189,251,4.079,252,2.638,253,4.852,254,4.852,255,5.415,256,4.079,257,2.648,258,3.698,259,2.199,260,2.431,261,2.199,262,3.109,263,3.698,264,3.698,265,3.109,266,3.698]],["title/injectables/AppEffects.html",[267,0.894,268,1.958]],["body/injectables/AppEffects.html",[0,0.507,2,1.473,3,0.178,4,0.127,9,0.127,11,0.233,18,1.576,33,0.178,34,0.684,35,1.531,40,0.742,42,0.813,43,0.755,51,0.465,52,0.029,53,0.233,54,0.442,55,0.391,63,1.009,75,1.388,76,0.756,78,0.427,80,1.03,83,0.178,84,0.178,113,0.936,117,1.388,118,1.258,149,0.011,150,0.016,151,0.011,160,1.891,174,1.388,178,0.803,184,0.991,185,0.92,195,1.85,207,2.945,208,0.991,219,2.423,220,2.38,226,2.733,257,2.302,259,1.5,267,1.009,268,2.623,269,1.256,270,2.12,271,3.716,272,3.716,273,6.298,274,4.091,275,4.867,276,4.867,277,4.867,278,4.867,279,3.716,280,3.716,281,3.716,282,2.442,283,4.563,284,4.398,285,3.716,286,2.733,287,4.867,288,3.716,289,3.716,290,3.716,291,3.124,292,3.716,293,3.716,294,2.442,295,3.716,296,3.716,297,3.716,298,3.716,299,3.124,300,2.522,301,3.124,302,2.733,303,2.442,304,3.716,305,3.245,306,2.393,307,2.522,308,4.411,309,3.689,310,4.411,311,2.894,312,2.522,313,5.759,314,5.612,315,3.716,316,4.867,317,3.716,318,3.716,319,1.733,320,3.716,321,3.716,322,3.716,323,3.716,324,3.716,325,3.124,326,3.124,327,1.576,328,2.522,329,3.716,330,3.58,331,3.716,332,2.522,333,3.716,334,3.716,335,3.716,336,3.716,337,2.393,338,3.58,339,2.442,340,2.522,341,2.522,342,2.522,343,1.658,344,1.856,345,2.522,346,1.658,347,1.856,348,2.522,349,1.157,350,3.716,351,2.522,352,2.12]],["title/modules/AppModule.html",[353,1.787,354,2.164]],["body/modules/AppModule.html",[0,0.378,1,1.457,2,1.391,3,0.173,4,0.123,9,0.123,11,0.227,14,0.986,18,1.541,42,1.052,43,0.564,52,0.029,61,0.347,68,2.673,76,0.825,78,0.415,80,1.254,83,0.173,84,0.257,106,0.664,115,1.219,117,0.77,119,0.77,126,1.655,129,1.457,131,1.457,133,1.583,136,1.457,138,1.457,140,1.583,142,1.469,144,1.583,146,1.457,149,0.01,150,0.015,151,0.01,163,1.328,184,0.962,194,1.123,208,1.428,219,1.219,222,1.801,239,1.989,250,2.849,251,3.644,252,2.201,257,1.038,259,1.456,261,1.456,267,0.664,268,1.456,343,1.609,353,2.913,354,4.436,355,1.328,356,1.609,357,2.849,358,2.577,359,3.644,360,2.058,361,2.058,362,2.058,363,2.058,364,2.058,365,2.058,366,3.193,367,3.193,368,3.055,369,1.801,370,1.801,371,2.448,372,3.634,373,2.673,374,3.634,375,3.634,376,4.796,377,3.055,378,3.055,379,3.634,380,2.058,381,2.673,382,3.634,383,3.634,384,1.609,385,3.644,386,2.448,387,2.448,388,3.634,389,1.609,390,3.634,391,2.161,392,1.801,393,1.801,394,2.389,395,2.448,396,2.448,397,2.448,398,2.058,399,2.058,400,2.058,401,2.058,402,1.801,403,3.634,404,2.058,405,2.058,406,2.448,407,2.448,408,2.448,409,2.058,410,2.448,411,2.389,412,1.609,413,1.801,414,2.448,415,2.448,416,2.448,417,1.328,418,2.448,419,2.058,420,2.448,421,2.058,422,2.448,423,1.456,424,3.634,425,2.448,426,3.055,427,2.448,428,2.448,429,2.058,430,2.448,431,2.448,432,2.448,433,2.448,434,2.448,435,2.448,436,2.448,437,2.448,438,2.448,439,2.448,440,2.448,441,2.448,442,2.058,443,2.058,444,1.801,445,2.058,446,2.448,447,2.448,448,2.448,449,2.448,450,2.448,451,2.448,452,2.058,453,2.058,454,1.609,455,2.058,456,2.448,457,2.448,458,2.448,459,2.058,460,2.058,461,1.801,462,2.058]],["title/components/ContactComponent.html",[0,0.343,129,0.894]],["body/components/ContactComponent.html",[0,0.408,1,0.564,2,0.871,3,0.147,4,0.104,5,0.704,6,0.704,7,0.758,8,0.758,9,0.104,11,0.192,14,0.871,18,1.362,26,1.17,27,1.541,28,0.758,29,1.17,31,1.17,33,0.147,34,0.591,35,1.01,36,0.694,37,1.874,40,0.415,41,0.817,42,0.929,43,0.883,51,0.383,52,0.029,53,0.558,54,0.388,55,0.323,61,0.675,62,1.5,63,0.564,75,1.5,76,0.613,77,2.624,78,0.352,80,0.485,82,0.882,83,0.147,84,0.277,86,2.52,88,1.909,105,1.128,106,0.564,113,1.112,114,2.362,117,1.234,118,1.707,119,0.654,120,1.17,121,1.609,122,0.758,123,1.609,124,0.758,125,2.171,126,0.564,127,1.707,128,0.758,129,1.368,130,0.758,131,0.564,132,0.758,133,0.564,134,1.43,135,0.758,136,0.564,137,0.758,138,0.564,139,0.758,140,0.564,141,0.758,142,0.524,143,0.758,144,0.564,145,0.758,146,0.564,147,0.758,148,0.758,149,0.009,150,0.014,151,0.009,160,1.17,163,1.742,174,1.234,178,1.136,184,0.817,194,1.473,199,2.394,202,1.01,214,1.8,219,1.599,223,2.394,235,1.362,257,1.362,294,2.11,303,2.11,311,3.125,327,1.362,384,2.11,463,1.747,464,4.412,465,5.88,466,2.11,467,3.211,468,3.211,469,3.709,470,2.699,471,3.211,472,3.211,473,4.563,474,3.923,475,3.211,476,4.238,477,4.769,478,2.494,479,4.412,480,4.412,481,4.412,482,4.412,483,2.886,484,3.709,485,3.211,486,2.078,487,3.211,488,3.211,489,3.211,490,2.078,491,3.211,492,3.211,493,4.412,494,3.211,495,2.699,496,2.699,497,3.211,498,2.078,499,2.078,500,3.211,501,2.078,502,2.886,503,5.007,504,4.238,505,3.709,506,2.078,507,3.923,508,2.699,509,2.078,510,3.211,511,2.078,512,3.211,513,3.211,514,2.699,515,3.211,516,3.211,517,3.211,518,3.211,519,3.298,520,1.747,521,2.078,522,2.078,523,2.078,524,2.078,525,2.078,526,2.078,527,1.747,528,2.078,529,2.078,530,3.211,531,2.078,532,2.078,533,2.078,534,2.078,535,2.078,536,2.078,537,2.078,538,2.078,539,2.078,540,2.078,541,2.078,542,2.078,543,2.078,544,2.078,545,2.078,546,3.211,547,3.211,548,2.699,549,2.362,550,2.699,551,3.211,552,2.699,553,3.211,554,2.078,555,2.886,556,2.699,557,1.747,558,2.699,559,2.362,560,2.699,561,2.362,562,1.747,563,1.747,564,2.362,565,1.747,566,1.747,567,1.909,568,1.747,569,1.747,570,1.747,571,1.529,572,1.747,573,1.529,574,1.747,575,2.11,576,1.366,577,2.078,578,1.366,579,2.078,580,2.078,581,2.078,582,2.078,583,1.747]],["title/components/ErrorpageComponent.html",[0,0.343,131,0.894]],["body/components/ErrorpageComponent.html",[0,0.614,1,0.966,2,1.284,3,0.251,4,0.179,5,1.204,6,1.204,7,1.297,8,1.297,9,0.179,11,0.329,12,4.165,14,1.284,18,2.006,26,1.724,27,2.087,28,1.297,29,1.724,31,1.724,33,0.251,36,1.023,37,2.316,40,0.711,41,1.398,42,1.116,43,0.734,51,0.655,52,0.029,53,0.524,54,0.29,55,0.552,61,0.504,62,1.119,76,0.608,78,0.602,80,0.831,82,1.509,83,0.251,84,0.251,106,0.966,117,1.119,118,1.204,119,1.119,120,1.724,121,1.724,122,1.297,123,2.064,124,1.297,125,2.39,126,0.966,127,1.976,128,1.297,129,0.966,130,1.297,131,1.6,132,1.297,133,0.966,134,1.937,135,1.297,136,0.966,137,1.297,138,0.966,139,1.297,140,0.966,141,1.297,142,0.896,143,1.297,144,0.966,145,1.297,146,0.966,147,1.297,148,1.297,149,0.015,150,0.02,151,0.015,327,2.006,339,3.721,584,2.991,585,4.759,586,3.976,587,4.729,588,4.729,589,4.729,590,3.976,591,3.976,592,4.729,593,4.729,594,5.312,595,4.729,596,3.557,597,3.557,598,4.729,599,4.729,600,4.729,601,3.976,602,4.729,603,3.479]],["title/components/FooterComponent.html",[0,0.343,133,0.894]],["body/components/FooterComponent.html",[0,0.594,1,0.88,2,1.205,3,0.229,4,0.163,5,1.097,6,1.097,7,1.182,8,1.182,9,0.163,11,0.3,14,1.205,26,1.619,27,2.141,28,1.182,29,1.619,31,1.619,33,0.229,34,0.818,36,0.96,37,2.141,40,0.648,42,1.004,43,0.915,45,2.211,51,0.597,52,0.029,53,0.505,54,0.264,55,0.503,61,0.459,62,1.019,75,1.714,76,0.652,78,0.549,80,0.757,82,1.375,83,0.229,84,0.229,106,0.88,118,1.097,119,1.019,120,1.619,121,1.619,122,1.182,123,1.987,124,1.182,125,2.358,126,0.88,127,1.855,128,1.182,129,0.88,130,1.182,131,0.88,132,1.182,133,1.55,134,2.081,135,1.182,136,0.88,137,1.182,138,0.88,139,1.182,140,0.88,141,1.182,142,0.817,143,1.182,144,0.88,145,1.182,146,0.88,147,1.182,148,1.182,149,0.014,150,0.019,151,0.014,174,1.714,452,4.957,453,4.957,454,3.876,455,4.957,603,3.267,604,2.725,605,5.45,606,3.267,607,4.441,608,3.267,609,4.441,610,4.441,611,3.733,612,4.441,613,4.441,614,5.066,615,4.441,616,3.241,617,4.441,618,4.441,619,3.241,620,3.241,621,3.241,622,3.241,623,1.927,624,2.13,625,1.758,626,1.927,627,3.241,628,4.441,629,4.441,630,4.441,631,4.441,632,3.241,633,5.066,634,3.241,635,3.241,636,3.241,637,4.441,638,3.241,639,2.725,640,3.241]],["title/injectables/GitService.html",[267,0.894,641,2.164]],["body/injectables/GitService.html",[3,0.264,4,0.188,9,0.188,11,0.346,33,0.264,34,0.9,35,1.815,36,1.056,40,0.747,42,1.153,43,0.929,50,3.211,51,0.688,52,0.029,53,0.346,54,0.5,55,0.58,61,0.529,63,1.014,75,1.537,76,0.77,78,0.633,80,0.873,82,1.585,83,0.264,84,0.264,86,2.139,106,1.014,113,0.941,149,0.016,150,0.021,151,0.016,160,1.984,174,1.537,178,1.056,185,1.362,202,1.537,220,2.072,239,2.242,252,1.715,267,1.326,269,1.861,330,2.749,347,2.749,349,1.715,389,2.456,417,2.027,423,2.905,548,4.107,555,3.594,641,3.211,642,3.141,643,4.107,644,3.594,645,5.442,646,4.406,647,5.442,648,5.772,649,2.749,650,4.246,651,4.885,652,3.737,653,4.885,654,3.737,655,3.141,656,4.004,657,4.885,658,4.885,659,4.885,660,4.885,661,4.885,662,4.107,663,3.737,664,3.737,665,3.737,666,3.737]],["title/components/HomeComponent.html",[0,0.343,136,0.894]],["body/components/HomeComponent.html",[0,0.592,1,0.784,2,1.112,3,0.204,4,0.145,5,0.978,6,0.978,7,1.053,8,1.053,9,0.145,11,0.267,13,2.125,26,1.494,27,1.872,28,1.053,29,1.494,31,1.494,33,0.204,36,0.886,37,2.151,40,0.577,42,0.955,43,0.804,45,2.04,51,0.532,52,0.029,53,0.48,54,0.388,55,0.448,61,0.409,62,0.908,63,1.407,76,0.527,77,2.832,78,0.489,80,1.113,82,1.225,83,0.204,84,0.204,88,3.255,106,0.784,118,0.978,119,0.908,120,1.494,121,1.494,122,1.053,123,1.89,124,1.053,125,2.314,126,0.784,127,1.879,128,1.053,129,0.784,130,1.053,131,0.784,132,1.053,133,0.784,134,1.736,135,1.053,136,1.407,137,1.053,138,0.784,139,1.053,140,0.784,141,1.053,142,0.728,143,1.053,144,0.784,145,1.053,146,0.784,147,1.053,148,1.053,149,0.012,150,0.017,151,0.012,178,0.886,225,2.694,303,2.694,413,3.015,496,3.445,549,3.814,559,3.015,575,1.898,576,1.898,578,2.694,590,3.445,606,3.015,639,2.428,667,2.428,668,3.445,669,2.437,670,4.098,671,4.098,672,4.098,673,4.004,674,4.763,675,4.098,676,3.445,677,4.763,678,2.888,679,4.098,680,4.098,681,2.888,682,2.888,683,2.888,684,5.184,685,5.686,686,4.098,687,3.814,688,3.445,689,4.098,690,4.098,691,4.098,692,4.098,693,4.098,694,4.098,695,4.098,696,4.098,697,4.098,698,3.445,699,4.098,700,4.098,701,4.098,702,3.445,703,5.184,704,5.184,705,4.098,706,4.098,707,4.098,708,4.098,709,4.098,710,4.098,711,4.098,712,3.445,713,4.098,714,4.098,715,4.098,716,3.445,717,4.098,718,4.098,719,4.098,720,4.098,721,4.098,722,4.098,723,4.098,724,4.098,725,4.098,726,2.428,727,2.428,728,2.428,729,2.125,730,2.888,731,2.428,732,3.015,733,4.098,734,2.888,735,2.888]],["title/interfaces/IDetails.html",[189,0.894,736,1.64]],["body/interfaces/IDetails.html",[3,0.26,4,0.185,9,0.185,11,0.577,14,1.467,33,0.26,34,0.892,52,0.029,53,0.531,54,0.467,63,1.797,83,0.406,84,0.26,95,1.691,149,0.016,150,0.021,151,0.016,178,0.797,189,1.558,191,1.691,202,2.061,204,1.077,235,2.435,237,2.231,319,1.902,478,2.435,669,2.192,736,2.692,737,2.192,738,3.553,739,3.115,740,3.115,741,3.115,742,2.879,743,3.546,744,3.182,745,3.215,746,3.182,747,2.192,748,2.053,749,2.422,750,2.41,751,2.192,752,2.192,753,1.835,754,2.422,755,2.422]],["title/interfaces/IPrincipal.html",[189,0.894,319,1.294]],["body/interfaces/IPrincipal.html",[3,0.266,4,0.189,9,0.246,11,0.506,14,1.482,33,0.266,34,0.904,45,1.874,52,0.029,53,0.556,54,0.4,63,1.784,83,0.409,84,0.266,95,1.727,149,0.016,150,0.021,151,0.016,178,0.814,189,1.571,191,1.727,194,1.727,202,2.088,204,1.1,235,2.316,237,2.11,319,2.146,478,2.659,586,3.163,669,2.238,736,2.443,737,2.238,738,3.225,739,2.042,740,2.042,741,2.042,742,2.238,743,3.247,744,2.473,745,2.238,746,2.473,747,2.918,748,2.611,749,2.473,750,2.443,751,2.238,752,2.238,753,1.874,754,2.473,755,2.473,756,3.763,757,3.763,758,3.763]],["title/interfaces/IProfile.html",[79,1.787,189,0.894]],["body/interfaces/IProfile.html",[3,0.323,4,0.229,9,0.229,11,0.575,33,0.323,34,1.022,52,0.028,54,0.527,63,1.858,79,3.009,83,0.323,88,3.693,91,4.568,95,2.849,97,4.568,98,4.568,149,0.019,150,0.024,151,0.019,189,1.241,191,2.097,759,3.843]],["title/interfaces/IUser.html",[189,0.894,750,1.64]],["body/interfaces/IUser.html",[3,0.264,4,0.188,9,0.188,11,0.504,14,1.477,33,0.264,34,0.9,52,0.029,53,0.594,54,0.443,63,1.8,83,0.408,84,0.264,95,2.648,149,0.016,150,0.021,151,0.016,178,0.808,189,1.567,191,1.715,202,2.086,204,1.092,235,2.308,237,2.104,319,1.92,478,2.308,669,2.905,736,2.432,737,2.222,738,3.577,739,2.027,740,2.027,741,2.027,742,2.222,743,3.432,744,2.456,745,2.222,746,2.456,747,2.222,748,2.072,749,3.211,750,2.71,751,2.905,752,2.905,753,2.874,754,2.456,755,2.456]],["title/interfaces/IUserProfile.html",[189,0.894,204,0.962]],["body/interfaces/IUserProfile.html",[3,0.263,4,0.187,9,0.187,11,0.503,14,1.666,33,0.263,34,0.898,52,0.029,53,0.534,54,0.442,63,1.722,83,0.407,84,0.344,95,1.709,149,0.016,150,0.021,151,0.016,178,1.054,189,1.565,191,1.709,202,2.113,204,1.424,235,2.653,237,2.313,319,2.265,478,2.305,669,2.214,736,2.87,737,2.214,738,3.203,739,2.02,740,2.02,741,2.02,742,2.214,743,3.231,744,2.448,745,2.214,746,2.448,747,2.214,748,2.067,749,2.448,750,2.87,751,2.214,752,2.214,753,1.854,754,3.203,755,3.203]],["title/modules/IamModule.html",[353,1.787,366,1.958]],["body/modules/IamModule.html",[3,0.318,4,0.226,9,0.226,11,0.417,43,0.853,52,0.029,76,0.839,78,0.763,80,1.284,83,0.318,84,0.318,149,0.019,150,0.023,151,0.019,208,2.16,260,2.96,268,2.678,343,2.96,353,2.982,355,2.444,357,2.96,366,3.269,378,3.786,385,4.621,398,3.786,399,3.786,400,3.786,401,3.786,402,3.313,442,3.786,443,3.786,444,3.313,445,3.786,760,4.504,761,5.497,762,4.621,763,5.497,764,3.786,765,2.96,766,4.504,767,4.504]],["title/injectables/InMemoryDataService.html",[267,0.894,394,2.164]],["body/injectables/InMemoryDataService.html",[3,0.309,4,0.22,9,0.22,11,0.405,33,0.309,36,1.168,43,0.679,52,0.029,53,0.405,61,0.62,76,0.695,78,0.741,83,0.309,84,0.309,93,2.374,94,3.219,95,2.008,113,1.102,149,0.019,150,0.023,151,0.019,199,2.374,202,1.376,204,1.578,205,3.219,214,2.478,220,2.485,235,1.856,237,1.595,239,2.008,252,2.008,267,1.466,269,2.179,306,2.374,391,3.211,394,3.55,417,2.374,478,1.856,739,2.374,740,2.374,741,2.374,748,1.856,753,2.179,768,4.54,769,3.678,770,6.117,771,4.376,772,3.678,773,3.678,774,3.678,775,3.678,776,3.678,777,3.678,778,3.219]],["title/injectables/Logger.html",[42,0.607,267,0.894]],["body/injectables/Logger.html",[3,0.237,4,0.168,9,0.168,11,0.477,33,0.237,34,0.837,35,1.873,36,0.983,38,2.702,40,1.03,42,0.837,43,0.962,48,3.343,49,4.382,51,1.018,52,0.029,53,0.512,54,0.45,55,0.896,61,0.783,62,1.738,75,1.738,76,0.431,78,0.568,83,0.237,84,0.364,86,1.786,105,2.465,113,0.845,115,1.669,149,0.014,150,0.019,151,0.014,174,1.429,178,0.983,203,2.987,239,2.651,252,1.538,267,1.233,269,1.669,327,2.526,339,3.633,417,1.819,779,2.818,780,4.544,781,3.82,782,4.544,783,4.544,784,5.155,785,5.155,786,4.544,787,4.544,788,5.155,789,4.544,790,4.544,791,3.352,792,3.82,793,6.197,794,4.544,795,4.544,796,3.352,797,3.82,798,4.544,799,3.352,800,4.646,801,3.352,802,3.352,803,3.352,804,3.352,805,3.352,806,5.155,807,3.352,808,3.352,809,3.352,810,4.544,811,3.352]],["title/components/LoginComponent.html",[0,0.343,138,0.894]],["body/components/LoginComponent.html",[0,0.546,1,0.623,2,0.94,3,0.162,4,0.115,5,0.776,6,0.776,7,0.836,8,0.836,9,0.115,11,0.386,13,1.687,18,1.468,26,1.262,27,1.638,28,0.836,29,1.262,31,1.262,33,0.162,34,0.638,35,1.568,36,0.748,37,1.958,40,0.996,41,0.901,42,1.002,43,0.944,51,0.423,52,0.029,53,0.43,54,0.406,55,0.356,61,0.706,62,1.311,75,1.311,76,0.773,78,0.388,80,0.808,83,0.162,84,0.162,86,2.363,105,1.878,113,1.05,117,1.311,118,0.776,119,0.721,120,1.262,121,1.262,122,0.836,123,1.693,124,0.836,125,2.217,126,0.623,127,1.761,128,0.836,129,0.623,130,0.836,131,0.623,132,0.836,133,0.623,134,1.52,135,0.836,136,0.623,137,0.836,138,1.353,139,0.836,140,0.623,141,0.836,142,0.578,143,0.836,144,0.623,145,0.836,146,0.623,147,0.836,148,0.836,149,0.01,150,0.015,151,0.01,160,1.52,163,1.878,174,1.311,178,0.901,185,0.836,194,1.588,199,2.843,204,0.67,207,1.244,208,0.901,214,1.913,220,2.307,234,1.687,257,2.375,260,1.507,261,1.364,282,1.507,283,1.928,294,2.275,319,1.36,337,1.244,344,1.687,349,1.052,384,1.507,454,3.444,460,4.405,461,3.855,478,0.973,502,2.546,503,4.573,504,2.91,505,3.904,508,1.928,519,3.505,520,1.928,564,1.687,567,1.364,570,1.928,571,2.546,572,1.928,573,1.687,574,1.928,575,1.507,576,2.275,578,2.275,623,1.364,624,1.507,625,1.244,626,2.479,668,1.928,726,1.928,727,1.928,728,1.928,732,3.067,748,2.477,765,1.507,812,1.928,813,4.169,814,3.461,815,3.505,816,4.169,817,4.002,818,4.19,819,4.644,820,3.904,821,4.644,822,3.461,823,2.294,824,3.461,825,2.91,826,2.294,827,2.294,828,2.294,829,2.294,830,3.461,831,2.294,832,2.294,833,2.294,834,2.294,835,2.294,836,2.294,837,1.928,838,2.294,839,1.928,840,1.687,841,2.294,842,1.928,843,3.461,844,2.294,845,3.461,846,2.294,847,1.928,848,1.928,849,2.294,850,2.294,851,2.294,852,2.294,853,2.294,854,1.687,855,3.461,856,2.294,857,2.294,858,2.294,859,2.294,860,2.294,861,2.294,862,2.294,863,2.294,864,2.91,865,2.91,866,3.461,867,3.461,868,2.294,869,2.294,870,2.294,871,2.294,872,1.928,873,2.294,874,1.928,875,2.294,876,2.294,877,2.294]],["title/injectables/LoginService.html",[267,0.894,309,2.164]],["body/injectables/LoginService.html",[3,0.168,4,0.12,9,0.12,11,0.33,14,0.967,18,1.511,33,0.168,34,0.656,35,1.855,36,0.77,38,2.118,40,0.476,42,1.015,43,0.915,45,1.186,50,2.341,51,0.979,52,0.029,53,0.51,54,0.472,55,0.855,61,0.82,63,1.758,75,1.593,76,0.684,78,0.404,80,0.832,83,0.168,84,0.168,86,2.408,105,2.314,106,0.647,113,1.527,117,1.342,118,0.807,127,1.342,149,0.024,150,0.015,151,0.01,160,2.21,173,1.753,174,1.342,178,0.515,185,0.869,202,1.489,203,1.566,204,1.383,214,1.093,220,2.149,224,2.341,236,1.417,252,1.093,259,1.417,267,0.967,269,1.186,286,1.753,306,2.568,309,2.341,330,2.62,338,2.62,339,3.33,346,1.566,347,1.753,349,1.093,352,2.003,373,2.62,377,2.003,389,1.566,417,1.293,423,2.815,555,1.753,643,2.994,644,2.62,646,2.62,649,1.753,650,3.482,656,2.62,743,2.118,748,2.337,792,2.994,817,3.482,818,3.979,878,2.003,879,4.265,880,4.265,881,3.562,882,3.562,883,4.733,884,3.562,885,3.562,886,4.265,887,3.562,888,2.383,889,3.562,890,3.562,891,3.562,892,3.562,893,2.383,894,3.562,895,4.259,896,2.383,897,4.733,898,5.664,899,4.259,900,3.562,901,2.383,902,3.562,903,2.383,904,3.562,905,2.383,906,3.562,907,2.383,908,3.562,909,2.383,910,2.383,911,3.562,912,2.62,913,4.265,914,1.753,915,2.383,916,2.383,917,2.383,918,2.383,919,2.383,920,2.383,921,1.566,922,2.383,923,2.383,924,2.383,925,2.383,926,3.562,927,2.383,928,2.003,929,2.383,930,2.383,931,2.383,932,2.383,933,2.383,934,2.003,935,2.383,936,3.562,937,2.383,938,2.383,939,2.383,940,2.383,941,2.383,942,2.383,943,2.383]],["title/injectables/MysqlserviceService.html",[267,0.894,367,1.958]],["body/injectables/MysqlserviceService.html",[3,0.27,4,0.192,9,0.192,33,0.27,36,1.071,40,0.763,43,0.853,51,1.013,52,0.029,53,0.509,54,0.474,55,0.853,61,0.701,76,0.795,78,0.646,83,0.27,84,0.27,86,2.428,106,1.036,113,1.466,149,0.016,150,0.021,151,0.016,160,2.198,178,0.825,184,1.5,185,1.391,202,1.729,204,1.883,205,2.808,214,2.523,220,2.101,252,1.751,267,1.344,269,1.9,311,3.741,319,1.5,337,2.071,349,1.751,367,2.945,389,2.508,417,2.071,423,2.945,466,2.508,527,3.208,646,2.808,649,2.808,650,4.045,656,2.808,736,1.9,750,1.9,928,3.208,944,3.208,945,4.622,946,3.816,947,4.953,948,3.816,949,3.816,950,3.816,951,3.816,952,5.819,953,3.816,954,4.953,955,4.953,956,3.816,957,3.816,958,3.208,959,3.816,960,3.816]],["title/components/NavbarComponent.html",[0,0.343,140,0.894]],["body/components/NavbarComponent.html",[0,0.545,1,0.7,2,1.025,3,0.182,4,0.13,5,0.873,6,0.873,7,0.94,8,0.94,9,0.13,11,0.239,14,1.025,26,1.377,27,1.756,28,0.94,29,1.377,31,1.377,33,0.182,34,0.696,35,1.823,36,0.817,37,2.058,40,0.515,41,1.014,42,1.008,43,0.918,51,0.475,52,0.029,53,0.455,54,0.364,55,0.4,61,0.775,62,1.406,63,1.025,75,1.188,76,0.783,78,0.437,80,1.149,82,1.094,83,0.182,84,0.182,86,2.323,106,0.7,113,0.952,117,1.188,118,1.279,119,0.811,120,1.377,121,1.377,122,0.94,123,1.794,124,0.94,125,2.268,126,0.7,127,1.721,128,0.94,129,0.7,130,0.94,131,0.7,132,0.94,133,0.7,134,1.909,135,0.94,136,0.7,137,0.94,138,0.7,139,0.94,140,1.421,141,0.94,142,0.65,143,0.94,144,0.7,145,0.94,146,0.7,147,0.94,148,0.94,149,0.011,150,0.016,151,0.011,160,1.629,174,1.188,184,1.014,185,0.94,199,2.05,201,2.779,202,1.721,203,3.234,204,1.104,207,2.669,208,1.014,227,3.619,236,2.658,237,1.377,241,1.898,257,2.397,260,1.696,261,1.534,282,1.696,306,1.4,311,3.361,319,1.756,337,1.4,344,1.898,346,1.696,349,1.184,373,2.779,459,3.757,462,3.757,473,3.176,567,1.534,608,2.779,611,3.176,623,1.534,625,1.4,626,1.534,673,3.176,729,2.779,765,1.696,781,3.176,815,3.757,817,1.898,839,2.169,847,2.169,848,2.169,961,2.169,962,4.599,963,3.778,964,3.778,965,3.778,966,3.778,967,4.469,968,3.778,969,4.469,970,4.469,971,4.469,972,4.92,973,5.471,974,4.92,975,3.778,976,2.58,977,2.58,978,2.58,979,2.58,980,3.176,981,2.58,982,2.58,983,2.58,984,2.169,985,4.469,986,2.58,987,2.58,988,2.58,989,4.469,990,2.58,991,1.696,992,2.58,993,2.58,994,3.176,995,3.778,996,3.778,997,3.778]],["title/components/PersonComponent.html",[0,0.343,142,0.83]],["body/components/PersonComponent.html",[0,0.669,1,0.923,2,1.245,3,0.24,4,0.171,5,1.151,6,1.151,7,1.239,8,1.239,9,0.171,11,0.315,26,1.673,27,2.04,28,1.239,29,1.673,31,1.673,33,0.24,36,0.992,37,2.281,40,0.679,41,1.336,42,1.102,43,0.806,51,0.626,52,0.029,53,0.515,54,0.374,55,0.528,61,0.481,62,1.069,76,0.668,77,3.306,78,0.576,79,2.817,83,0.24,84,0.24,87,3.857,106,0.923,117,1.069,118,1.151,119,1.069,120,1.673,121,1.673,122,1.239,123,2.027,124,1.239,125,2.375,126,0.923,127,1.881,128,1.239,129,0.923,130,1.239,131,0.923,132,1.239,133,0.923,134,2.116,135,1.239,136,0.923,137,1.239,138,0.923,139,1.239,140,0.923,141,1.239,142,1.462,143,1.239,144,0.923,145,1.239,146,0.923,147,1.239,148,1.239,149,0.014,150,0.019,151,0.014,224,3.015,237,1.893,294,3.015,358,2.728,514,4.673,550,3.857,676,3.857,837,2.858,998,2.858,999,3.857,1000,4.588,1001,4.588,1002,4.588,1003,4.588,1004,3.857,1005,4.588,1006,4.588,1007,5.193,1008,4.588,1009,4.588,1010,3.4,1011,3.4,1012,4.588,1013,4.588,1014,4.588]],["title/components/RegisterComponent.html",[0,0.343,144,0.894]],["body/components/RegisterComponent.html",[0,0.41,1,0.568,2,0.876,3,0.148,4,0.105,5,0.708,6,0.708,7,0.763,8,0.763,9,0.105,11,0.41,14,1.202,26,1.177,27,1.548,28,0.763,29,1.177,31,1.177,33,0.148,34,0.595,35,1.825,36,0.698,37,1.88,38,1.919,40,0.418,41,0.822,42,1.028,43,0.953,45,1.607,51,0.726,52,0.029,53,0.528,54,0.443,55,0.611,61,0.677,62,1.393,63,1.547,75,1.505,76,0.746,78,0.354,80,1.181,82,0.888,83,0.148,84,0.148,86,2.37,105,2.138,106,0.568,113,1.116,115,1.607,117,0.658,118,0.708,119,0.658,120,1.177,121,1.177,122,0.763,123,1.614,124,0.763,125,2.174,126,0.568,127,1.711,128,0.763,129,0.568,130,0.763,131,0.568,132,0.763,133,0.568,134,1.436,135,0.763,136,0.568,137,0.763,138,0.568,139,0.763,140,0.568,141,0.763,142,0.527,143,0.763,144,1.202,145,0.763,146,0.568,147,0.763,148,0.763,149,0.009,150,0.014,151,0.009,160,1.436,174,1.239,185,0.763,197,2.898,199,2.743,202,1.756,204,1.398,208,0.822,209,1.759,214,1.481,218,2.374,219,1.607,236,1.919,237,1.177,239,0.96,245,1.539,248,1.539,257,2.308,261,1.244,282,2.589,337,1.135,346,1.375,349,0.96,454,3.323,461,3.719,478,1.878,502,2.374,556,2.713,557,1.759,558,2.713,559,2.374,560,2.713,561,2.898,562,1.759,563,1.759,564,2.374,565,2.713,566,2.713,567,1.919,568,1.759,569,1.759,571,1.539,573,1.539,575,2.121,576,2.121,578,2.121,583,1.759,601,2.713,623,1.244,624,1.375,625,1.135,626,1.244,641,3.576,662,2.713,732,2.374,747,1.919,748,1.369,751,1.919,752,1.919,753,2.205,765,1.375,820,3.723,874,1.759,934,2.713,945,3.312,984,1.759,991,2.589,999,2.713,1015,1.759,1016,3.228,1017,3.228,1018,3.228,1019,3.94,1020,3.228,1021,4.784,1022,3.94,1023,3.94,1024,3.94,1025,3.94,1026,4.428,1027,3.94,1028,2.093,1029,2.093,1030,2.093,1031,2.093,1032,2.093,1033,2.093,1034,2.093,1035,2.093,1036,2.093,1037,2.093,1038,2.093,1039,2.093,1040,2.093,1041,2.093,1042,2.093,1043,2.093,1044,2.093,1045,2.093,1046,2.093,1047,2.093,1048,2.093,1049,2.093,1050,1.539,1051,3.94,1052,2.093,1053,2.093,1054,2.093,1055,2.093,1056,2.093,1057,2.093,1058,3.228,1059,2.093,1060,3.228,1061,2.093,1062,3.228,1063,3.228,1064,2.093,1065,3.228,1066,2.093,1067,2.093,1068,2.093,1069,2.093,1070,3.228,1071,3.228,1072,3.228,1073,2.093,1074,3.228,1075,3.228,1076,2.093,1077,2.093,1078,2.093]],["title/interfaces/State.html",[189,0.894,195,1.64]],["body/interfaces/State.html",[3,0.278,4,0.198,9,0.198,11,0.364,33,0.278,34,0.931,52,0.029,54,0.32,61,0.557,76,0.718,83,0.453,113,0.991,149,0.017,150,0.021,151,0.017,189,1.068,191,1.806,194,2.318,195,3.195,208,1.546,214,2.859,216,4.661,223,2.741,244,2.586,246,2.586,284,2.895,411,2.586,412,3.667,466,2.586,469,3.308,842,3.308,854,2.895,921,2.586,1079,2.586,1080,5.051,1081,5.579,1082,4.69,1083,3.935,1084,4.246,1085,4.246,1086,2.586,1087,3.935,1088,3.935,1089,2.895,1090,2.895,1091,4.246,1092,2.895,1093,3.308,1094,2.895,1095,3.308,1096,3.308,1097,3.308,1098,3.308,1099,2.586,1100,3.308,1101,3.308,1102,3.308,1103,2.895,1104,4.104,1105,3.308,1106,3.308,1107,3.308]],["title/components/ThankyouComponent.html",[0,0.343,146,0.894]],["body/components/ThankyouComponent.html",[0,0.536,1,0.908,2,1.232,3,0.237,4,0.168,5,1.133,6,1.133,7,1.22,8,1.22,9,0.168,26,1.655,27,2.024,28,1.22,29,1.655,31,1.655,33,0.237,34,0.836,35,1.873,36,0.982,37,2.269,38,2.699,40,0.669,41,1.315,42,1.097,43,0.857,51,0.617,52,0.029,53,0.511,54,0.37,55,0.519,61,0.474,62,1.053,63,1.398,76,0.766,78,0.567,80,1.06,82,1.42,83,0.237,84,0.237,106,0.908,113,1.144,117,1.053,118,1.133,119,1.053,120,1.655,121,1.655,122,1.22,123,2.014,124,1.22,125,2.336,126,0.908,127,1.873,128,1.22,129,0.908,130,1.22,131,0.908,132,1.22,133,0.908,134,1.878,135,1.22,136,0.908,137,1.22,138,0.908,139,1.22,140,0.908,141,1.22,142,0.843,143,1.22,144,0.908,145,1.22,146,1.567,147,1.22,148,1.22,149,0.014,150,0.019,151,0.014,159,2.462,160,1.655,184,1.315,185,1.22,311,3.621,327,2.449,337,1.816,349,1.536,483,3.79,484,4.643,1050,2.462,1108,2.814,1109,5.151,1110,4.539,1111,5.774,1112,4.539,1113,3.347,1114,3.347,1115,3.347,1116,3.347,1117,5.151,1118,3.347,1119,3.347,1120,3.347,1121,3.347,1122,4.539]],["title/guards/ThankyouResolver.html",[1123,2.164,1124,2.423]],["body/guards/ThankyouResolver.html",[3,0.303,4,0.215,9,0.215,26,1.563,33,0.303,36,1.153,40,0.857,41,1.685,42,1.173,43,0.828,51,0.983,52,0.029,53,0.494,54,0.434,55,0.828,60,3.506,61,0.607,76,0.781,78,0.726,80,1.246,83,0.303,84,0.303,86,2.281,106,1.164,113,1.08,117,1.349,149,0.018,150,0.023,151,0.018,184,1.685,259,2.55,267,1.448,327,1.819,483,4.271,729,3.924,1050,3.155,1099,3.506,1123,2.819,1124,4.271,1125,4.288,1126,3.605,1127,6.247,1128,4.288,1129,5.333,1130,6.073,1131,4.288,1132,5.333,1133,4.288,1134,4.288]],["title/coverage.html",[1135,3.774]],["body/coverage.html",[0,0.65,1,0.789,9,0.146,10,2.444,42,0.536,52,0.029,54,0.237,66,4.908,79,1.578,84,0.291,126,0.789,129,0.789,131,0.789,133,0.789,136,0.789,138,0.789,140,0.789,142,0.733,144,0.789,146,0.789,149,0.012,150,0.017,151,0.012,152,2.449,154,2.444,155,3.029,178,0.629,188,2.444,189,1.59,190,1.911,192,3.851,195,1.448,204,0.85,215,2.139,217,2.139,220,1.233,221,1.911,223,2.234,232,2.139,237,1.06,244,2.706,246,2.706,249,2.444,267,1.547,268,1.729,270,2.444,305,2.139,306,1.578,309,1.911,319,1.143,327,1.233,367,1.729,391,1.729,394,1.911,411,1.911,412,1.911,444,2.139,463,2.444,584,2.444,604,2.444,641,1.911,642,2.444,667,2.444,736,1.448,737,3.092,750,1.448,759,2.444,768,2.444,769,2.444,779,2.444,812,2.444,840,2.139,878,2.444,912,2.139,944,2.444,961,2.444,991,4.295,998,2.444,1015,2.444,1079,3.934,1086,2.706,1090,2.139,1094,2.139,1104,2.139,1108,2.444,1123,1.911,1124,2.139,1126,2.444,1135,2.444,1136,2.444,1137,2.908,1138,2.908,1139,4.118,1140,4.118,1141,4.118,1142,4.118,1143,4.118,1144,4.118,1145,6.56,1146,4.781,1147,4.925,1148,6.355,1149,2.444,1150,2.444,1151,2.444,1152,4.371,1153,2.444,1154,6.4,1155,2.908,1156,2.908,1157,4.118,1158,4.118,1159,2.908,1160,2.908,1161,2.908,1162,2.908,1163,2.908,1164,2.908,1165,2.908,1166,2.908,1167,2.444,1168,2.908,1169,2.908,1170,2.444,1171,2.908,1172,4.118,1173,2.444,1174,2.444,1175,2.908,1176,2.908,1177,2.908,1178,2.908,1179,2.908,1180,4.118,1181,2.444,1182,2.444,1183,2.908,1184,2.908]],["title/dependencies.html",[356,2.602,1185,2.752]],["body/dependencies.html",[52,0.029,78,0.726,149,0.018,150,0.023,151,0.018,184,1.685,185,1.563,208,2.096,250,2.819,257,1.819,343,2.819,356,2.819,358,2.55,380,4.484,381,3.924,384,2.819,391,2.55,392,3.155,393,3.155,402,3.155,404,3.605,405,3.605,409,3.605,567,2.55,623,3.172,624,2.819,625,3.15,626,3.172,764,3.605,1186,4.288,1187,6.526,1188,4.288,1189,4.288,1190,4.288,1191,4.288,1192,4.288,1193,4.288,1194,5.333,1195,6.073,1196,4.288,1197,4.288,1198,3.605,1199,4.288,1200,4.288,1201,4.288,1202,4.288,1203,4.288,1204,4.288,1205,4.288,1206,4.288,1207,4.288,1208,4.288,1209,4.288,1210,4.288,1211,4.288,1212,4.288,1213,4.288,1214,4.288]],["title/miscellaneous/functions.html",[1215,1.809,1216,3.328]],["body/miscellaneous/functions.html",[33,0.353,51,0.92,52,0.027,53,0.462,55,0.775,61,0.828,149,0.021,150,0.025,151,0.021,192,3.284,195,2.912,207,3.173,221,3.844,223,2.711,242,4.2,921,3.284,1079,3.284,1089,3.675,1090,4.562,1215,3.284,1216,4.2,1217,4.2,1218,4.2,1219,4.996]],["title/index.html",[33,0.194,1220,2.752,1221,2.752]],["body/index.html",[0,0.565,2,0.517,4,0.096,5,1.424,6,1.015,9,0.265,14,0.517,17,1.6,18,0.807,21,1.6,23,1.6,24,1.4,45,2.279,47,2.52,48,1.4,49,1.4,50,1.251,52,0.027,53,0.343,56,3.537,77,1.783,93,1.033,99,1.4,102,1.6,112,2.52,114,2.728,115,0.948,127,1.529,142,0.48,149,0.008,150,0.013,151,0.013,157,3.095,161,4.03,163,2.283,174,1.323,178,1.224,194,2.334,219,1.493,225,1.97,230,2.206,235,0.807,239,2.679,250,3.965,252,1.376,256,1.6,257,1.272,262,3.537,265,1.6,274,1.6,286,2.728,299,1.6,301,1.6,302,1.4,303,1.251,327,0.807,338,2.728,353,1.627,355,1.033,357,1.251,358,1.132,369,1.4,370,1.4,391,1.132,392,2.728,393,1.4,413,1.4,419,1.6,421,1.6,423,1.132,426,2.52,429,1.6,470,1.6,476,1.6,495,3.537,549,3.576,552,2.52,561,3.576,585,2.52,603,2.728,606,2.728,608,1.4,644,1.4,687,1.4,688,2.52,698,1.6,702,1.6,712,1.6,716,2.52,731,1.6,742,3.646,762,1.6,778,1.4,797,1.6,800,2.52,865,1.6,872,3.537,895,1.6,914,1.4,921,1.251,958,1.6,962,1.6,980,1.6,994,1.6,1004,1.6,1086,1.251,1089,1.4,1092,3.877,1099,3.008,1103,1.4,1222,1.904,1223,5.66,1224,2.998,1225,3.709,1226,2.998,1227,2.998,1228,1.904,1229,1.904,1230,1.904,1231,1.904,1232,1.904,1233,1.904,1234,2.998,1235,2.998,1236,1.6,1237,5.551,1238,1.6,1239,1.904,1240,1.904,1241,4.207,1242,1.904,1243,1.904,1244,3.709,1245,1.904,1246,2.998,1247,1.904,1248,1.904,1249,2.998,1250,1.904,1251,3.709,1252,1.904,1253,1.904,1254,1.904,1255,1.904,1256,4.861,1257,1.904,1258,1.904,1259,2.998,1260,1.904,1261,1.904,1262,1.904,1263,1.904,1264,1.904,1265,1.904,1266,1.904,1267,2.998,1268,1.904,1269,1.904,1270,3.709,1271,1.904,1272,2.998,1273,4.207,1274,2.998,1275,1.904,1276,4.207,1277,1.904,1278,1.904,1279,1.904,1280,1.904,1281,3.709,1282,1.904,1283,1.904,1284,1.904,1285,1.904,1286,1.904,1287,1.904,1288,1.904,1289,1.904,1290,1.904,1291,1.904,1292,1.904,1293,1.904,1294,3.537,1295,1.904,1296,1.904,1297,1.904,1298,1.904,1299,1.904,1300,1.904,1301,3.709,1302,1.904,1303,4.577,1304,3.709,1305,2.998,1306,1.904,1307,1.904,1308,1.904,1309,2.998,1310,4.207,1311,1.904,1312,3.709,1313,2.998,1314,1.904,1315,2.998,1316,3.709,1317,2.998,1318,4.207,1319,1.904,1320,4.577,1321,1.904,1322,1.904,1323,1.904,1324,3.709,1325,1.6,1326,1.904,1327,2.998,1328,1.904,1329,1.904,1330,1.904,1331,1.904,1332,1.904,1333,1.904,1334,1.904,1335,2.998,1336,4.861,1337,1.904,1338,4.577,1339,2.998,1340,4.207,1341,2.998,1342,2.998,1343,1.904,1344,4.577,1345,1.904,1346,1.904,1347,1.904,1348,1.904,1349,2.998,1350,1.904,1351,3.709,1352,1.904,1353,1.904,1354,1.904,1355,4.861,1356,1.904,1357,1.904,1358,1.904,1359,1.904,1360,1.904,1361,1.904,1362,3.709,1363,2.998,1364,1.904,1365,1.904,1366,1.904,1367,1.904,1368,1.904,1369,1.904,1370,1.904,1371,1.904,1372,1.904,1373,1.904,1374,1.904,1375,2.998,1376,2.52,1377,1.904,1378,1.904,1379,1.904,1380,1.904,1381,1.904,1382,3.709,1383,2.998,1384,2.998,1385,2.998,1386,2.998,1387,4.577,1388,2.998,1389,1.904,1390,1.904,1391,1.904,1392,1.904,1393,1.904,1394,2.998,1395,2.998,1396,2.998,1397,5.087,1398,1.904,1399,1.904,1400,2.998,1401,1.904,1402,1.904,1403,1.904,1404,1.904,1405,1.904,1406,1.904,1407,1.904,1408,1.904,1409,2.998,1410,1.904,1411,1.904,1412,1.904,1413,1.904,1414,1.904,1415,1.904,1416,1.904,1417,1.904,1418,1.904,1419,1.904,1420,1.904,1421,2.998,1422,1.904,1423,1.904,1424,3.709,1425,1.904,1426,1.904,1427,2.998,1428,1.904,1429,1.904,1430,1.904,1431,1.904,1432,1.904,1433,1.904,1434,1.904,1435,1.904,1436,1.904,1437,1.904,1438,1.904,1439,1.904,1440,1.904,1441,1.904,1442,1.904,1443,1.904,1444,1.904,1445,1.904,1446,1.904,1447,2.998,1448,1.904,1449,1.904,1450,1.904,1451,1.904,1452,1.904,1453,1.904,1454,1.904,1455,1.6,1456,1.904,1457,1.904,1458,1.904,1459,2.998,1460,1.904,1461,1.904,1462,1.904,1463,1.904,1464,1.904,1465,1.904,1466,1.904,1467,1.904,1468,1.904,1469,1.904,1470,1.904,1471,1.904,1472,1.904,1473,3.709,1474,1.904,1475,1.6,1476,1.6,1477,1.904,1478,1.904,1479,1.904,1480,1.904,1481,1.904,1482,1.904,1483,1.904,1484,1.904,1485,1.904,1486,1.904,1487,1.904,1488,1.904,1489,1.6,1490,1.904,1491,1.904,1492,1.904,1493,1.904]],["title/modules.html",[355,2.436]],["body/modules.html",[52,0.025,149,0.022,150,0.025,151,0.022,354,3.427,355,2.829,366,3.101,381,3.836,625,2.829,1455,4.383,1494,5.214,1495,5.995,1496,5.214]],["title/overview.html",[1497,3.774]],["body/overview.html",[1,1.524,2,1.082,42,1.034,52,0.029,93,2.163,99,3.747,119,1.254,126,1.725,129,1.524,131,1.524,133,1.605,136,1.524,138,1.524,140,1.605,142,1.49,144,1.605,146,1.524,149,0.017,150,0.022,151,0.017,153,2.933,191,1.829,269,1.985,353,2.163,354,4.545,355,2.163,356,2.62,357,2.62,358,2.37,359,3.351,360,3.351,361,3.351,362,3.351,363,3.351,364,3.351,365,3.351,366,3.338,367,3.338,368,4.282,369,2.933,370,2.933,1123,2.62,1170,3.351,1497,3.351,1498,3.986,1499,3.986]],["title/miscellaneous/variables.html",[1215,1.809,1500,3.328]],["body/miscellaneous/variables.html",[4,0.115,11,0.429,14,0.937,18,1.463,24,1.68,33,0.161,52,0.029,53,0.319,54,0.495,55,0.354,61,0.323,63,0.937,68,1.68,75,2.047,79,1.239,88,1.358,89,1.92,90,2.9,91,1.68,93,1.239,94,2.538,95,1.908,97,1.68,98,1.68,104,1.92,113,1.167,149,0.01,150,0.015,151,0.01,161,1.501,174,2.047,178,0.494,190,2.268,192,1.501,194,1.908,195,3.025,197,3.409,198,4.182,201,1.68,202,1.565,204,1.008,206,1.92,207,2.947,213,2.9,215,2.538,216,3.059,217,3.059,218,1.68,219,2.307,220,2.372,221,2.268,222,1.68,223,1.239,224,1.501,225,1.501,226,1.68,227,1.68,228,1.92,229,1.92,230,1.68,231,1.92,232,2.538,233,1.92,234,2.538,235,1.764,236,2.052,237,1.907,238,1.92,239,1.583,240,1.92,241,1.68,244,3.045,245,1.68,246,3.045,247,1.92,248,1.68,284,3.996,291,1.92,302,1.68,305,2.538,306,2.514,325,3.496,326,1.92,327,1.764,411,2.268,412,3.045,466,1.501,478,1.463,591,1.92,655,2.9,687,1.68,739,1.872,740,1.872,741,1.872,745,1.358,748,1.463,753,1.718,772,1.92,773,1.92,774,2.9,775,1.92,776,1.92,777,1.92,778,1.68,825,4.182,840,2.538,854,1.68,864,2.9,899,1.92,912,2.538,914,1.68,991,1.501,1079,1.501,1082,2.9,1084,1.92,1085,1.92,1086,3.045,1091,1.92,1092,1.68,1093,1.92,1094,2.538,1095,1.92,1096,1.92,1097,1.92,1098,1.92,1099,2.268,1100,1.92,1101,1.92,1102,1.92,1103,1.68,1104,3.409,1105,1.92,1106,1.92,1107,1.92,1136,1.92,1147,1.92,1149,2.9,1150,2.9,1151,2.9,1152,1.92,1153,2.9,1167,1.92,1173,1.92,1174,2.9,1181,1.92,1182,1.92,1198,1.92,1215,1.501,1217,4.398,1218,4.182,1236,1.92,1238,1.92,1294,1.92,1325,1.92,1376,2.9,1475,1.92,1476,1.92,1489,2.9,1500,1.92,1501,4.634,1502,2.284,1503,2.284,1504,5.432,1505,2.284,1506,4.158,1507,2.284,1508,5.432,1509,2.284,1510,3.45,1511,2.284,1512,2.284,1513,2.284,1514,2.284,1515,2.284,1516,2.284,1517,4.158,1518,2.284,1519,2.284,1520,2.284,1521,2.284,1522,2.284,1523,2.284,1524,2.284,1525,2.284,1526,2.284,1527,2.284,1528,2.284,1529,2.284,1530,2.284,1531,2.284,1532,2.284,1533,2.284,1534,2.284,1535,2.284,1536,2.284,1537,4.634,1538,2.284,1539,2.284,1540,4.158,1541,4.158,1542,4.158,1543,2.284,1544,2.284]]],"invertedIndex":[["",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"interfaces/ActiveUserState.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"injectables/GitService.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"modules/IamModule.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":991,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.10.2",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1154,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1175,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1172,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1178,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":93,"title":{"classes/ActivatedRouteStub-1.html":{}},"body":{"components/AboutComponent.html":{},"injectables/InMemoryDataService.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.15.0",{"_index":1209,"title":{},"body":{"dependencies.html":{}}}],["1.19.2",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["1.2.24",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1148,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":1171,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1158,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1169,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1162,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1160,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":1498,"title":{},"body":{"overview.html":{}}}],["14",{"_index":1159,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":1161,"title":{},"body":{"coverage.html":{}}}],["180",{"_index":579,"title":{},"body":{"components/ContactComponent.html":{}}}],["2",{"_index":99,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{},"overview.html":{}}}],["2.17.1",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1143,"title":{},"body":{"coverage.html":{}}}],["2019",{"_index":631,"title":{},"body":{"components/FooterComponent.html":{}}}],["25",{"_index":444,"title":{},"body":{"modules/AppModule.html":{},"modules/IamModule.html":{},"coverage.html":{}}}],["2em",{"_index":266,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":102,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["3.4.1",{"_index":1203,"title":{},"body":{"dependencies.html":{}}}],["3/10",{"_index":1168,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":1180,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1140,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1164,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1167,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["305",{"_index":577,"title":{},"body":{"components/ContactComponent.html":{}}}],["33",{"_index":1157,"title":{},"body":{"coverage.html":{}}}],["330px",{"_index":870,"title":{},"body":{"components/LoginComponent.html":{}}}],["35",{"_index":1165,"title":{},"body":{"coverage.html":{}}}],["4.17.1",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["4/10",{"_index":1177,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1176,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":877,"title":{},"body":{"components/LoginComponent.html":{}}}],["42",{"_index":1163,"title":{},"body":{"coverage.html":{}}}],["42a948",{"_index":568,"title":{},"body":{"components/ContactComponent.html":{},"components/RegisterComponent.html":{}}}],["480px",{"_index":728,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["4px",{"_index":572,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{}}}],["5.11.1",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["5.4.1",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["5/14",{"_index":1166,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":1179,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":435,"title":{},"body":{"modules/AppModule.html":{}}}],["500px",{"_index":876,"title":{},"body":{"components/LoginComponent.html":{}}}],["5px",{"_index":566,"title":{},"body":{"components/ContactComponent.html":{},"components/RegisterComponent.html":{}}}],["6",{"_index":1499,"title":{},"body":{"overview.html":{}}}],["6.5.3",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["63",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["640px",{"_index":733,"title":{},"body":{"components/HomeComponent.html":{}}}],["7",{"_index":1170,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["7/11",{"_index":1156,"title":{},"body":{"coverage.html":{}}}],["8.1.2",{"_index":1227,"title":{},"body":{"index.html":{}}}],["8.2.7",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["8.3.0",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["80px",{"_index":1074,"title":{},"body":{"components/RegisterComponent.html":{}}}],["85px",{"_index":1075,"title":{},"body":{"components/RegisterComponent.html":{}}}],["_debugmode",{"_index":784,"title":{},"body":{"injectables/Logger.html":{}}}],["a94442",{"_index":1078,"title":{},"body":{"components/RegisterComponent.html":{}}}],["abcdef123456",{"_index":773,"title":{},"body":{"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["about.component.css",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.html",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"coverage.html":{},"overview.html":{}}}],["abstractcontrol",{"_index":519,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{}}}],["access",{"_index":957,"title":{},"body":{"injectables/MysqlserviceService.html":{}}}],["accessors",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"injectables/Logger.html":{},"injectables/LoginService.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["accumulated",{"_index":720,"title":{},"body":{"components/HomeComponent.html":{}}}],["action",{"_index":207,"title":{},"body":{"interfaces/ActiveUserState.html":{},"injectables/AppEffects.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["action.effects",{"_index":300,"title":{},"body":{"injectables/AppEffects.html":{}}}],["action.principal",{"_index":317,"title":{},"body":{"injectables/AppEffects.html":{}}}],["action.username",{"_index":334,"title":{},"body":{"injectables/AppEffects.html":{}}}],["actionreducermap",{"_index":1085,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":284,"title":{},"body":{"injectables/AppEffects.html":{},"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["actions/login.action",{"_index":839,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["activatedroute",{"_index":484,"title":{},"body":{"components/ContactComponent.html":{},"components/ThankyouComponent.html":{}}}],["activatedroutesnapshot",{"_index":1130,"title":{},"body":{"guards/ThankyouResolver.html":{}}}],["activatedroutestub",{"_index":152,"title":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"coverage.html":{}}}],["activateroute",{"_index":156,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["active",{"_index":213,"title":{},"body":{"interfaces/ActiveUserState.html":{},"miscellaneous/variables.html":{}}}],["activeauthstatekey",{"_index":215,"title":{},"body":{"interfaces/ActiveUserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["activestate",{"_index":1219,"title":{},"body":{"miscellaneous/functions.html":{}}}],["activeuserstate",{"_index":190,"title":{"interfaces/ActiveUserState.html":{}},"body":{"interfaces/ActiveUserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["activity",{"_index":762,"title":{},"body":{"modules/IamModule.html":{},"index.html":{}}}],["actual",{"_index":518,"title":{},"body":{"components/ContactComponent.html":{}}}],["actual_component",{"_index":148,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["add",{"_index":163,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["added",{"_index":1415,"title":{},"body":{"index.html":{}}}],["adding",{"_index":1381,"title":{},"body":{"index.html":{}}}],["address",{"_index":556,"title":{},"body":{"components/ContactComponent.html":{},"components/RegisterComponent.html":{}}}],["adds",{"_index":1361,"title":{},"body":{"index.html":{}}}],["advertise",{"_index":719,"title":{},"body":{"components/HomeComponent.html":{}}}],["agent",{"_index":658,"title":{},"body":{"injectables/GitService.html":{}}}],["ahead",{"_index":1445,"title":{},"body":{"index.html":{}}}],["aid",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["align",{"_index":580,"title":{},"body":{"components/ContactComponent.html":{}}}],["allow",{"_index":466,"title":{},"body":{"components/ContactComponent.html":{},"injectables/MysqlserviceService.html":{},"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["allowed",{"_index":467,"title":{},"body":{"components/ContactComponent.html":{}}}],["allowing",{"_index":280,"title":{},"body":{"injectables/AppEffects.html":{}}}],["allows",{"_index":999,"title":{},"body":{"components/PersonComponent.html":{},"components/RegisterComponent.html":{}}}],["along",{"_index":275,"title":{},"body":{"injectables/AppEffects.html":{}}}],["always",{"_index":1391,"title":{},"body":{"index.html":{}}}],["amd",{"_index":1286,"title":{},"body":{"index.html":{}}}],["angular",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":764,"title":{},"body":{"modules/IamModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"injectables/GitService.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{}}}],["angular/compiler",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"injectables/GitService.html":{},"components/HomeComponent.html":{},"modules/IamModule.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":384,"title":{},"body":{"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":184,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"dependencies.html":{}}}],["another",{"_index":995,"title":{},"body":{"components/NavbarComponent.html":{}}}],["anyone",{"_index":560,"title":{},"body":{"components/ContactComponent.html":{},"components/RegisterComponent.html":{}}}],["api",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["api/login",{"_index":906,"title":{},"body":{"injectables/LoginService.html":{}}}],["api/logout",{"_index":908,"title":{},"body":{"injectables/LoginService.html":{}}}],["app",{"_index":127,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"index.html":{}}}],["app.component.css",{"_index":255,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["appactions",{"_index":344,"title":{},"body":{"injectables/AppEffects.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["appactions.logger",{"_index":308,"title":{},"body":{"injectables/AppEffects.html":{}}}],["appactions.loginsuccess({userprofile",{"_index":323,"title":{},"body":{"injectables/AppEffects.html":{}}}],["appcomponent",{"_index":126,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appeffects",{"_index":268,"title":{"injectables/AppEffects.html":{}},"body":{"injectables/AppEffects.html":{},"modules/AppModule.html":{},"modules/IamModule.html":{},"coverage.html":{}}}],["application",{"_index":194,"title":{},"body":{"interfaces/ActiveUserState.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"interfaces/IPrincipal.html":{},"components/LoginComponent.html":{},"interfaces/State.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":928,"title":{},"body":{"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{}}}],["apply",{"_index":495,"title":{},"body":{"components/ContactComponent.html":{},"index.html":{}}}],["appmodule",{"_index":354,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":610,"title":{},"body":{"components/FooterComponent.html":{}}}],["approutes",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["apps",{"_index":1259,"title":{},"body":{"index.html":{}}}],["argument",{"_index":891,"title":{},"body":{"injectables/LoginService.html":{}}}],["arguments",{"_index":1302,"title":{},"body":{"index.html":{}}}],["around",{"_index":471,"title":{},"body":{"components/ContactComponent.html":{}}}],["artifacts",{"_index":1377,"title":{},"body":{"index.html":{}}}],["asks",{"_index":1443,"title":{},"body":{"index.html":{}}}],["assets/images/1.png",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{},"miscellaneous/variables.html":{}}}],["assets/images/bb.jpg",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{}}}],["assets/images/ss.jpg",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{}}}],["asynchronous",{"_index":299,"title":{},"body":{"injectables/AppEffects.html":{},"index.html":{}}}],["auth.state",{"_index":1088,"title":{},"body":{"interfaces/State.html":{}}}],["authorization",{"_index":929,"title":{},"body":{"injectables/LoginService.html":{}}}],["authorizationdata",{"_index":926,"title":{},"body":{"injectables/LoginService.html":{}}}],["authors",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{}}}],["automatically",{"_index":1372,"title":{},"body":{"index.html":{}}}],["available",{"_index":1455,"title":{},"body":{"index.html":{},"modules.html":{}}}],["aware",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{}}}],["away",{"_index":671,"title":{},"body":{"components/HomeComponent.html":{}}}],["babel",{"_index":1290,"title":{},"body":{"index.html":{}}}],["background",{"_index":668,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["bar",{"_index":1432,"title":{},"body":{"index.html":{}}}],["base",{"_index":911,"title":{},"body":{"injectables/LoginService.html":{}}}],["based",{"_index":291,"title":{},"body":{"injectables/AppEffects.html":{},"miscellaneous/variables.html":{}}}],["basegiturl",{"_index":645,"title":{},"body":{"injectables/GitService.html":{}}}],["baseloginurl",{"_index":879,"title":{},"body":{"injectables/LoginService.html":{}}}],["baselogouturl",{"_index":880,"title":{},"body":{"injectables/LoginService.html":{}}}],["baseurl",{"_index":886,"title":{},"body":{"injectables/LoginService.html":{}}}],["basic",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"interfaces/IPrincipal.html":{},"injectables/LoginService.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["before",{"_index":1099,"title":{},"body":{"interfaces/State.html":{},"guards/ThankyouResolver.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["beforeeach(async",{"_index":1483,"title":{},"body":{"index.html":{}}}],["behavior",{"_index":1474,"title":{},"body":{"index.html":{}}}],["behind",{"_index":1229,"title":{},"body":{"index.html":{}}}],["being",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["better",{"_index":914,"title":{},"body":{"injectables/LoginService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["bhawna",{"_index":100,"title":{},"body":{"components/AboutComponent.html":{}}}],["binded",{"_index":529,"title":{},"body":{"components/ContactComponent.html":{}}}],["binding",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["blank_user_profile",{"_index":1153,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["blogs",{"_index":1439,"title":{},"body":{"index.html":{}}}],["body",{"_index":677,"title":{},"body":{"components/HomeComponent.html":{}}}],["boilerplate",{"_index":1255,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":199,"title":{},"body":{"interfaces/ActiveUserState.html":{},"components/ContactComponent.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["bootstrap",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"components/PersonComponent.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["bootstrapped",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["bootstrapping",{"_index":1283,"title":{},"body":{"index.html":{}}}],["border",{"_index":564,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["boxsize",{"_index":875,"title":{},"body":{"components/LoginComponent.html":{}}}],["branch",{"_index":1387,"title":{},"body":{"index.html":{}}}],["brand",{"_index":611,"title":{},"body":{"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["brands",{"_index":624,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["browse",{"_index":1495,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["btoa(username",{"_index":927,"title":{},"body":{"injectables/LoginService.html":{}}}],["build",{"_index":549,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["building",{"_index":1267,"title":{},"body":{"index.html":{}}}],["built",{"_index":470,"title":{},"body":{"components/ContactComponent.html":{},"index.html":{}}}],["bulk",{"_index":553,"title":{},"body":{"components/ContactComponent.html":{}}}],["button[type=\"submit",{"_index":873,"title":{},"body":{"components/LoginComponent.html":{}}}],["c",{"_index":1306,"title":{},"body":{"index.html":{}}}],["called",{"_index":118,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["callgitzen",{"_index":1026,"title":{},"body":{"components/RegisterComponent.html":{}}}],["capabilities",{"_index":1242,"title":{},"body":{"index.html":{}}}],["capability",{"_index":792,"title":{},"body":{"injectables/Logger.html":{},"injectables/LoginService.html":{}}}],["caps",{"_index":637,"title":{},"body":{"components/FooterComponent.html":{}}}],["capture",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":550,"title":{},"body":{"components/ContactComponent.html":{},"components/PersonComponent.html":{}}}],["card's",{"_index":554,"title":{},"body":{"components/ContactComponent.html":{}}}],["card\\'s",{"_index":582,"title":{},"body":{"components/ContactComponent.html":{}}}],["cards",{"_index":1006,"title":{},"body":{"components/PersonComponent.html":{}}}],["cascading",{"_index":1429,"title":{},"body":{"index.html":{}}}],["case",{"_index":1417,"title":{},"body":{"index.html":{}}}],["catcherror",{"_index":347,"title":{},"body":{"injectables/AppEffects.html":{},"injectables/GitService.html":{},"injectables/LoginService.html":{}}}],["catcherror(err",{"_index":940,"title":{},"body":{"injectables/LoginService.html":{}}}],["catcherror(message",{"_index":324,"title":{},"body":{"injectables/AppEffects.html":{}}}],["catcherror(this.handleerror('login",{"_index":925,"title":{},"body":{"injectables/LoginService.html":{}}}],["categorize",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["center",{"_index":581,"title":{},"body":{"components/ContactComponent.html":{}}}],["change",{"_index":1374,"title":{},"body":{"index.html":{}}}],["changes",{"_index":1397,"title":{},"body":{"index.html":{}}}],["chceck",{"_index":1392,"title":{},"body":{"index.html":{}}}],["check",{"_index":729,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"guards/ThankyouResolver.html":{}}}],["checked",{"_index":1460,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":1401,"title":{},"body":{"index.html":{}}}],["choice",{"_index":1274,"title":{},"body":{"index.html":{}}}],["choose",{"_index":1440,"title":{},"body":{"index.html":{}}}],["chose",{"_index":1451,"title":{},"body":{"index.html":{}}}],["chronology",{"_index":1269,"title":{},"body":{"index.html":{}}}],["clarity",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{}}}],["class",{"_index":84,"title":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"injectables/GitService.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"modules/IamModule.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"coverage.html":{}}}],["classes",{"_index":153,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"overview.html":{}}}],["cli",{"_index":1225,"title":{},"body":{"index.html":{}}}],["client",{"_index":1271,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1256,"title":{},"body":{"index.html":{}}}],["collate",{"_index":713,"title":{},"body":{"components/HomeComponent.html":{}}}],["collection",{"_index":1305,"title":{},"body":{"index.html":{}}}],["collective",{"_index":714,"title":{},"body":{"components/HomeComponent.html":{}}}],["color",{"_index":868,"title":{},"body":{"components/LoginComponent.html":{}}}],["command",{"_index":1301,"title":{},"body":{"index.html":{}}}],["commands",{"_index":1236,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["comment",{"_index":476,"title":{},"body":{"components/ContactComponent.html":{},"index.html":{}}}],["commentator",{"_index":512,"title":{},"body":{"components/ContactComponent.html":{}}}],["comments",{"_index":517,"title":{},"body":{"components/ContactComponent.html":{}}}],["commit",{"_index":1237,"title":{},"body":{"index.html":{}}}],["committed",{"_index":1400,"title":{},"body":{"index.html":{}}}],["committed)add",{"_index":1407,"title":{},"body":{"index.html":{}}}],["common",{"_index":1257,"title":{},"body":{"index.html":{}}}],["commonjs",{"_index":1285,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":763,"title":{},"body":{"modules/IamModule.html":{}}}],["communication",{"_index":1243,"title":{},"body":{"index.html":{}}}],["compilation",{"_index":375,"title":{},"body":{"modules/AppModule.html":{}}}],["compilecomponents",{"_index":1485,"title":{},"body":{"index.html":{}}}],["complete",{"_index":449,"title":{},"body":{"modules/AppModule.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":124,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["componentfixture",{"_index":1463,"title":{},"body":{"index.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"index.html":{},"overview.html":{}}}],["components/constants/variables.constant",{"_index":210,"title":{},"body":{"interfaces/ActiveUserState.html":{}}}],["component’s",{"_index":1468,"title":{},"body":{"index.html":{}}}],["concepts",{"_index":272,"title":{},"body":{"injectables/AppEffects.html":{}}}],["condition",{"_index":489,"title":{},"body":{"components/ContactComponent.html":{}}}],["config",{"_index":1021,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirm",{"_index":1071,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword",{"_index":1027,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword(value",{"_index":1066,"title":{},"body":{"components/RegisterComponent.html":{}}}],["connects",{"_index":253,"title":{},"body":{"components/AppComponent.html":{}}}],["consistent",{"_index":1265,"title":{},"body":{"index.html":{}}}],["console",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{},"injectables/Logger.html":{},"index.html":{}}}],["console.error(this.dateinstance.getdate",{"_index":808,"title":{},"body":{"injectables/Logger.html":{}}}],["console.log",{"_index":352,"title":{},"body":{"injectables/AppEffects.html":{},"injectables/LoginService.html":{}}}],["console.log('this",{"_index":851,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(this.dateinstance.getdate",{"_index":807,"title":{},"body":{"injectables/Logger.html":{}}}],["console.warn(this.dateinstance.getdate",{"_index":809,"title":{},"body":{"injectables/Logger.html":{}}}],["const",{"_index":214,"title":{},"body":{"interfaces/ActiveUserState.html":{},"components/ContactComponent.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{}}}],["constants/variables.constant",{"_index":841,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"injectables/GitService.html":{},"components/HomeComponent.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{}}}],["constructor(actions",{"_index":307,"title":{},"body":{"injectables/AppEffects.html":{}}}],["constructor(http",{"_index":649,"title":{},"body":{"injectables/GitService.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{}}}],["constructor(initialparams",{"_index":169,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["constructor(logger",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{}}}],["constructor(loggerservice",{"_index":616,"title":{},"body":{"components/FooterComponent.html":{}}}],["constructor(logservice",{"_index":678,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(private",{"_index":106,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"injectables/GitService.html":{},"components/HomeComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{}}}],["consult",{"_index":602,"title":{},"body":{"components/ErrorpageComponent.html":{}}}],["consumed",{"_index":758,"title":{},"body":{"interfaces/IPrincipal.html":{}}}],["consumption",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoginService.html":{}}}],["contact",{"_index":473,"title":{},"body":{"components/ContactComponent.html":{},"components/NavbarComponent.html":{}}}],["contact'},{'name",{"_index":130,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["contact.component.css",{"_index":474,"title":{},"body":{"components/ContactComponent.html":{}}}],["contact.component.html",{"_index":475,"title":{},"body":{"components/ContactComponent.html":{}}}],["contactcomponent",{"_index":129,"title":{"components/ContactComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contacted",{"_index":468,"title":{},"body":{"components/ContactComponent.html":{}}}],["contactform",{"_index":477,"title":{},"body":{"components/ContactComponent.html":{}}}],["contain",{"_index":607,"title":{},"body":{"components/FooterComponent.html":{}}}],["content",{"_index":555,"title":{},"body":{"components/ContactComponent.html":{},"injectables/GitService.html":{},"injectables/LoginService.html":{}}}],["context",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":900,"title":{},"body":{"injectables/LoginService.html":{}}}],["contributing",{"_index":1282,"title":{},"body":{"index.html":{}}}],["contributors",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{}}}],["control",{"_index":527,"title":{},"body":{"components/ContactComponent.html":{},"injectables/MysqlserviceService.html":{}}}],["converttoparammap",{"_index":183,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["copy",{"_index":701,"title":{},"body":{"components/HomeComponent.html":{}}}],["copyright",{"_index":630,"title":{},"body":{"components/FooterComponent.html":{}}}],["core",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":494,"title":{},"body":{"components/ContactComponent.html":{}}}],["cover",{"_index":1434,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1135,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crave",{"_index":685,"title":{},"body":{"components/HomeComponent.html":{}}}],["cravings",{"_index":695,"title":{},"body":{"components/HomeComponent.html":{}}}],["create",{"_index":1276,"title":{},"body":{"index.html":{}}}],["createaction('[login",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction('[logout",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction('[profile",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["created",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["createdb",{"_index":770,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["createeffect",{"_index":313,"title":{},"body":{"injectables/AppEffects.html":{}}}],["createfeatureselector",{"_index":1083,"title":{},"body":{"interfaces/State.html":{}}}],["createfeatureselector(fromauthstate.activeauthstatekey",{"_index":1105,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["createreducer",{"_index":206,"title":{},"body":{"interfaces/ActiveUserState.html":{},"miscellaneous/variables.html":{}}}],["creates",{"_index":1310,"title":{},"body":{"index.html":{}}}],["createselector",{"_index":1082,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["creating",{"_index":1004,"title":{},"body":{"components/PersonComponent.html":{},"index.html":{}}}],["creation",{"_index":1300,"title":{},"body":{"index.html":{}}}],["crowd",{"_index":700,"title":{},"body":{"components/HomeComponent.html":{}}}],["css",{"_index":496,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{}}}],["current",{"_index":227,"title":{},"body":{"interfaces/ActiveUserState.html":{},"components/NavbarComponent.html":{},"miscellaneous/variables.html":{}}}],["currentstate",{"_index":1022,"title":{},"body":{"components/RegisterComponent.html":{}}}],["currentuser",{"_index":815,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["cursive",{"_index":635,"title":{},"body":{"components/FooterComponent.html":{}}}],["cypress",{"_index":1481,"title":{},"body":{"index.html":{}}}],["d",{"_index":1321,"title":{},"body":{"index.html":{}}}],["data",{"_index":955,"title":{},"body":{"injectables/MysqlserviceService.html":{}}}],["data.service",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["data.service.ts",{"_index":769,"title":{},"body":{"injectables/InMemoryDataService.html":{},"coverage.html":{}}}],["data.service.ts:8",{"_index":771,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["dataencapsulation",{"_index":433,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":800,"title":{},"body":{"injectables/Logger.html":{},"index.html":{}}}],["dateinstance",{"_index":785,"title":{},"body":{"injectables/Logger.html":{}}}],["debugging",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debugmode",{"_index":788,"title":{},"body":{"injectables/Logger.html":{}}}],["debugmode(value",{"_index":811,"title":{},"body":{"injectables/Logger.html":{}}}],["decide",{"_index":696,"title":{},"body":{"components/HomeComponent.html":{}}}],["decided",{"_index":1488,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"modules/IamModule.html":{},"index.html":{},"overview.html":{}}}],["declarative",{"_index":491,"title":{},"body":{"components/ContactComponent.html":{}}}],["declared",{"_index":376,"title":{},"body":{"modules/AppModule.html":{}}}],["decrease",{"_index":276,"title":{},"body":{"injectables/AppEffects.html":{}}}],["default",{"_index":174,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"components/FooterComponent.html":{},"injectables/GitService.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1314,"title":{},"body":{"index.html":{}}}],["define",{"_index":756,"title":{},"body":{"interfaces/IPrincipal.html":{}}}],["defined",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"injectables/GitService.html":{},"components/HomeComponent.html":{},"modules/IamModule.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{}}}],["definition",{"_index":1287,"title":{},"body":{"index.html":{}}}],["delay",{"_index":434,"title":{},"body":{"modules/AppModule.html":{}}}],["delete",{"_index":1367,"title":{},"body":{"index.html":{}}}],["denote",{"_index":200,"title":{},"body":{"interfaces/ActiveUserState.html":{}}}],["dependencies",{"_index":356,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":1246,"title":{},"body":{"index.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"interfaces/ActiveUserState.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"injectables/GitService.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"modules/IamModule.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["descriptionstr",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{}}}],["descriptionstr(value",{"_index":116,"title":{},"body":{"components/AboutComponent.html":{}}}],["descriptive",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detail",{"_index":852,"title":{},"body":{"components/LoginComponent.html":{}}}],["detailed",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["details",{"_index":235,"title":{},"body":{"interfaces/ActiveUserState.html":{},"components/ContactComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["determines",{"_index":228,"title":{},"body":{"interfaces/ActiveUserState.html":{},"miscellaneous/variables.html":{}}}],["dev",{"_index":1370,"title":{},"body":{"index.html":{}}}],["developer",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["developers",{"_index":1096,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["developing",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":1251,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":402,"title":{},"body":{"modules/AppModule.html":{},"modules/IamModule.html":{},"dependencies.html":{}}}],["dilemma",{"_index":1450,"title":{},"body":{"index.html":{}}}],["dimcheck",{"_index":735,"title":{},"body":{"components/HomeComponent.html":{}}}],["directive",{"_index":122,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["directives",{"_index":147,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["directory",{"_index":1318,"title":{},"body":{"index.html":{}}}],["dirty",{"_index":1419,"title":{},"body":{"index.html":{}}}],["disables",{"_index":1315,"title":{},"body":{"index.html":{}}}],["discard",{"_index":1402,"title":{},"body":{"index.html":{}}}],["dispatch",{"_index":283,"title":{},"body":{"injectables/AppEffects.html":{},"components/LoginComponent.html":{}}}],["dispatched",{"_index":226,"title":{},"body":{"interfaces/ActiveUserState.html":{},"injectables/AppEffects.html":{},"miscellaneous/variables.html":{}}}],["display",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["displaying",{"_index":587,"title":{},"body":{"components/ErrorpageComponent.html":{}}}],["dist",{"_index":1379,"title":{},"body":{"index.html":{}}}],["divide",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":1136,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dologin",{"_index":818,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["dologout",{"_index":972,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["done",{"_index":293,"title":{},"body":{"injectables/AppEffects.html":{}}}],["double",{"_index":158,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["driven",{"_index":1475,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dry",{"_index":1319,"title":{},"body":{"index.html":{}}}],["dummy_user_profile",{"_index":912,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1388,"title":{},"body":{"index.html":{}}}],["each",{"_index":222,"title":{},"body":{"interfaces/ActiveUserState.html":{},"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["edit",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editing",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editmode",{"_index":1023,"title":{},"body":{"components/RegisterComponent.html":{}}}],["effects",{"_index":273,"title":{},"body":{"injectables/AppEffects.html":{}}}],["effectsmodule",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"modules/IamModule.html":{}}}],["effectsmodule.forroot([appeffects",{"_index":445,"title":{},"body":{"modules/AppModule.html":{},"modules/IamModule.html":{}}}],["efforts",{"_index":711,"title":{},"body":{"components/HomeComponent.html":{}}}],["element",{"_index":121,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["elements",{"_index":528,"title":{},"body":{"components/ContactComponent.html":{}}}],["eliminating",{"_index":1253,"title":{},"body":{"index.html":{}}}],["email",{"_index":478,"title":{},"body":{"components/ContactComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["email.invalid",{"_index":545,"title":{},"body":{"components/ContactComponent.html":{}}}],["email.touched",{"_index":544,"title":{},"body":{"components/ContactComponent.html":{}}}],["employ",{"_index":1234,"title":{},"body":{"index.html":{}}}],["employed",{"_index":702,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["empty",{"_index":921,"title":{},"body":{"injectables/LoginService.html":{},"interfaces/State.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["enable",{"_index":1326,"title":{},"body":{"index.html":{}}}],["enabletracing",{"_index":437,"title":{},"body":{"modules/AppModule.html":{}}}],["encapsulation",{"_index":1363,"title":{},"body":{"index.html":{}}}],["encouraging",{"_index":1291,"title":{},"body":{"index.html":{}}}],["end",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["energies",{"_index":715,"title":{},"body":{"components/HomeComponent.html":{}}}],["engine",{"_index":1330,"title":{},"body":{"index.html":{}}}],["engineer",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{},"miscellaneous/variables.html":{}}}],["enhances",{"_index":1248,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":1278,"title":{},"body":{"index.html":{}}}],["entity",{"_index":749,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{}}}],["entry",{"_index":415,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":1086,"title":{},"body":{"interfaces/State.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":1101,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":1087,"title":{},"body":{"interfaces/State.html":{}}}],["err",{"_index":941,"title":{},"body":{"injectables/LoginService.html":{}}}],["error",{"_index":339,"title":{},"body":{"injectables/AppEffects.html":{},"components/ErrorpageComponent.html":{},"injectables/Logger.html":{},"injectables/LoginService.html":{}}}],["error(msg",{"_index":790,"title":{},"body":{"injectables/Logger.html":{}}}],["error.message",{"_index":918,"title":{},"body":{"injectables/LoginService.html":{}}}],["error:403",{"_index":598,"title":{},"body":{"components/ErrorpageComponent.html":{}}}],["errorinput",{"_index":570,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{}}}],["errorpage",{"_index":593,"title":{},"body":{"components/ErrorpageComponent.html":{}}}],["errorpage'},{'name",{"_index":132,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["errorpage.component.css",{"_index":594,"title":{},"body":{"components/ErrorpageComponent.html":{}}}],["errorpage.component.html",{"_index":595,"title":{},"body":{"components/ErrorpageComponent.html":{}}}],["errorpagecomponent",{"_index":131,"title":{"components/ErrorpageComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"coverage.html":{},"overview.html":{}}}],["etc",{"_index":1482,"title":{},"body":{"index.html":{}}}],["event",{"_index":825,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["events",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["everyone",{"_index":1442,"title":{},"body":{"index.html":{}}}],["everything",{"_index":1368,"title":{},"body":{"index.html":{}}}],["example",{"_index":547,"title":{},"body":{"components/ContactComponent.html":{}}}],["execute",{"_index":1383,"title":{},"body":{"index.html":{}}}],["exercise",{"_index":708,"title":{},"body":{"components/HomeComponent.html":{}}}],["exhaustmap",{"_index":348,"title":{},"body":{"injectables/AppEffects.html":{}}}],["exhaustmap((principal",{"_index":318,"title":{},"body":{"injectables/AppEffects.html":{}}}],["exhaustmap((username",{"_index":335,"title":{},"body":{"injectables/AppEffects.html":{}}}],["existing",{"_index":1335,"title":{},"body":{"index.html":{}}}],["expectation",{"_index":1428,"title":{},"body":{"index.html":{}}}],["expected",{"_index":1017,"title":{},"body":{"components/RegisterComponent.html":{}}}],["experience",{"_index":693,"title":{},"body":{"components/HomeComponent.html":{}}}],["expertise",{"_index":1456,"title":{},"body":{"index.html":{}}}],["explore",{"_index":1478,"title":{},"body":{"index.html":{}}}],["export",{"_index":83,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"interfaces/ActiveUserState.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"injectables/GitService.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"modules/IamModule.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{}}}],["exports",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["exposed",{"_index":890,"title":{},"body":{"injectables/LoginService.html":{}}}],["express",{"_index":1198,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["expression",{"_index":488,"title":{},"body":{"components/ContactComponent.html":{}}}],["extension",{"_index":1357,"title":{},"body":{"index.html":{}}}],["external",{"_index":1341,"title":{},"body":{"index.html":{}}}],["f",{"_index":1332,"title":{},"body":{"index.html":{}}}],["faanchor",{"_index":458,"title":{},"body":{"modules/AppModule.html":{}}}],["fablogger",{"_index":455,"title":{},"body":{"modules/AppModule.html":{},"components/FooterComponent.html":{}}}],["facilitates",{"_index":1264,"title":{},"body":{"index.html":{}}}],["fafacebook",{"_index":460,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{}}}],["fagit",{"_index":454,"title":{},"body":{"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["fagoogle",{"_index":461,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["failed",{"_index":899,"title":{},"body":{"injectables/LoginService.html":{},"miscellaneous/variables.html":{}}}],["failure",{"_index":325,"title":{},"body":{"injectables/AppEffects.html":{},"miscellaneous/variables.html":{}}}],["falinkedin",{"_index":453,"title":{},"body":{"modules/AppModule.html":{},"components/FooterComponent.html":{}}}],["false",{"_index":219,"title":{},"body":{"interfaces/ActiveUserState.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/RegisterComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":634,"title":{},"body":{"components/FooterComponent.html":{}}}],["fasignin",{"_index":969,"title":{},"body":{"components/NavbarComponent.html":{}}}],["fasigninalt",{"_index":459,"title":{},"body":{"modules/AppModule.html":{},"components/NavbarComponent.html":{}}}],["fasignout",{"_index":970,"title":{},"body":{"components/NavbarComponent.html":{}}}],["fasignoutalt",{"_index":462,"title":{},"body":{"modules/AppModule.html":{},"components/NavbarComponent.html":{}}}],["fathumbsdown",{"_index":457,"title":{},"body":{"modules/AppModule.html":{}}}],["fathumbsup",{"_index":456,"title":{},"body":{"modules/AppModule.html":{}}}],["fatwitter",{"_index":452,"title":{},"body":{"modules/AppModule.html":{},"components/FooterComponent.html":{}}}],["feature",{"_index":1238,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["features",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["few",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"interfaces/ActiveUserState.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"injectables/GitService.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"modules/IamModule.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":1336,"title":{},"body":{"index.html":{}}}],["filter",{"_index":289,"title":{},"body":{"injectables/AppEffects.html":{}}}],["firefox",{"_index":659,"title":{},"body":{"injectables/GitService.html":{}}}],["fires",{"_index":824,"title":{},"body":{"components/LoginComponent.html":{}}}],["first",{"_index":751,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"components/RegisterComponent.html":{}}}],["firstname",{"_index":1018,"title":{},"body":{"components/RegisterComponent.html":{}}}],["flag",{"_index":1380,"title":{},"body":{"index.html":{}}}],["float",{"_index":874,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["flows",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["folder",{"_index":1273,"title":{},"body":{"index.html":{}}}],["followed",{"_index":1409,"title":{},"body":{"index.html":{}}}],["following",{"_index":1452,"title":{},"body":{"index.html":{}}}],["font",{"_index":633,"title":{},"body":{"components/FooterComponent.html":{}}}],["fontawesome",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":403,"title":{},"body":{"modules/AppModule.html":{}}}],["footer",{"_index":605,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":135,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["footer.component.css",{"_index":614,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":615,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":133,"title":{"components/FooterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"coverage.html":{},"overview.html":{}}}],["force",{"_index":1331,"title":{},"body":{"index.html":{}}}],["forces",{"_index":1333,"title":{},"body":{"index.html":{}}}],["forgot",{"_index":867,"title":{},"body":{"components/LoginComponent.html":{}}}],["form",{"_index":465,"title":{},"body":{"components/ContactComponent.html":{}}}],["formcontrol",{"_index":503,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{}}}],["formgroup",{"_index":505,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{}}}],["formlogin",{"_index":816,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodule",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["fortawesome/angular",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/free",{"_index":623,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["found",{"_index":600,"title":{},"body":{"components/ErrorpageComponent.html":{}}}],["framework",{"_index":1241,"title":{},"body":{"index.html":{}}}],["frameworks",{"_index":1345,"title":{},"body":{"index.html":{}}}],["free",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/ActiveUserState.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"injectables/GitService.html":{},"components/HomeComponent.html":{},"modules/IamModule.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{}}}],["free.time",{"_index":684,"title":{},"body":{"components/HomeComponent.html":{}}}],["freetime",{"_index":1222,"title":{},"body":{"index.html":{}}}],["friend",{"_index":703,"title":{},"body":{"components/HomeComponent.html":{}}}],["fromauth",{"_index":984,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["fromauthstate",{"_index":842,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/State.html":{}}}],["fromauthstate.activeuserstate",{"_index":1081,"title":{},"body":{"interfaces/State.html":{}}}],["fromauthstate.getloggedin",{"_index":1107,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["fromauthstate.getuserprofile",{"_index":1106,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["fromauthstate.initialappstate",{"_index":1091,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["fromauthstate.reducer",{"_index":1102,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["fromconstants",{"_index":209,"title":{},"body":{"interfaces/ActiveUserState.html":{},"components/RegisterComponent.html":{}}}],["fromconstants.blank_user_profile",{"_index":218,"title":{},"body":{"interfaces/ActiveUserState.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["fromstate",{"_index":1049,"title":{},"body":{"components/RegisterComponent.html":{}}}],["fromstore",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"modules/IamModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["fromstore.reducer",{"_index":767,"title":{},"body":{"modules/IamModule.html":{}}}],["ft",{"_index":134,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["function",{"_index":223,"title":{},"body":{"interfaces/ActiveUserState.html":{},"components/ContactComponent.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["functionality",{"_index":420,"title":{},"body":{"modules/AppModule.html":{}}}],["functions",{"_index":1216,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["futile",{"_index":707,"title":{},"body":{"components/HomeComponent.html":{}}}],["g",{"_index":1352,"title":{},"body":{"index.html":{}}}],["gain",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generalize",{"_index":670,"title":{},"body":{"components/HomeComponent.html":{}}}],["generate",{"_index":1312,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1224,"title":{},"body":{"index.html":{}}}],["generates",{"_index":1350,"title":{},"body":{"index.html":{}}}],["generating",{"_index":1308,"title":{},"body":{"index.html":{}}}],["getbaseurl",{"_index":909,"title":{},"body":{"injectables/LoginService.html":{}}}],["getbasicheader",{"_index":881,"title":{},"body":{"injectables/LoginService.html":{}}}],["getbasicheader(username",{"_index":892,"title":{},"body":{"injectables/LoginService.html":{}}}],["getconfirmpassword",{"_index":1044,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getdebugmode",{"_index":802,"title":{},"body":{"injectables/Logger.html":{}}}],["getdescriptionstr",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{}}}],["getemptystate",{"_index":1090,"title":{},"body":{"interfaces/State.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getloggedin",{"_index":246,"title":{},"body":{"interfaces/ActiveUserState.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getmessagestring",{"_index":1114,"title":{},"body":{"components/ThankyouComponent.html":{}}}],["gets",{"_index":1418,"title":{},"body":{"index.html":{}}}],["getter",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{}}}],["getting",{"_index":1220,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":1040,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getuseremail",{"_index":973,"title":{},"body":{"components/NavbarComponent.html":{}}}],["getuserprofile",{"_index":244,"title":{},"body":{"interfaces/ActiveUserState.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getzen",{"_index":648,"title":{},"body":{"injectables/GitService.html":{}}}],["git",{"_index":742,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"index.html":{}}}],["gitprofile",{"_index":739,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["gitservice",{"_index":641,"title":{"injectables/GitService.html":{}},"body":{"injectables/GitService.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["giturl",{"_index":98,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/IProfile.html":{},"miscellaneous/variables.html":{}}}],["give",{"_index":1394,"title":{},"body":{"index.html":{}}}],["gives",{"_index":1464,"title":{},"body":{"index.html":{}}}],["global",{"_index":1080,"title":{},"body":{"interfaces/State.html":{}}}],["go",{"_index":1472,"title":{},"body":{"index.html":{}}}],["good",{"_index":1489,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["google",{"_index":744,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{}}}],["googleprofile",{"_index":740,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":1496,"title":{},"body":{"modules.html":{}}}],["green",{"_index":569,"title":{},"body":{"components/ContactComponent.html":{},"components/RegisterComponent.html":{}}}],["grey",{"_index":869,"title":{},"body":{"components/LoginComponent.html":{}}}],["group",{"_index":507,"title":{},"body":{"components/ContactComponent.html":{}}}],["guard",{"_index":1123,"title":{"guards/ThankyouResolver.html":{}},"body":{"guards/ThankyouResolver.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":1125,"title":{},"body":{"guards/ThankyouResolver.html":{}}}],["guide",{"_index":965,"title":{},"body":{"components/NavbarComponent.html":{}}}],["guideline",{"_index":1486,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":1459,"title":{},"body":{"index.html":{}}}],["guidelines\"in",{"_index":1416,"title":{},"body":{"index.html":{}}}],["hand",{"_index":1458,"title":{},"body":{"index.html":{}}}],["handle",{"_index":897,"title":{},"body":{"injectables/LoginService.html":{}}}],["handled",{"_index":590,"title":{},"body":{"components/ErrorpageComponent.html":{},"components/HomeComponent.html":{}}}],["handleerror",{"_index":882,"title":{},"body":{"injectables/LoginService.html":{}}}],["handleerror(operation",{"_index":894,"title":{},"body":{"injectables/LoginService.html":{}}}],["handling",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hands",{"_index":691,"title":{},"body":{"components/HomeComponent.html":{}}}],["happen",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["head",{"_index":1411,"title":{},"body":{"index.html":{}}}],["header",{"_index":672,"title":{},"body":{"components/HomeComponent.html":{}}}],["headers",{"_index":646,"title":{},"body":{"injectables/GitService.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{}}}],["headers}).pipe",{"_index":960,"title":{},"body":{"injectables/MysqlserviceService.html":{}}}],["healthy",{"_index":689,"title":{},"body":{"components/HomeComponent.html":{}}}],["height",{"_index":578,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["help",{"_index":603,"title":{},"body":{"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"index.html":{}}}],["helper",{"_index":1462,"title":{},"body":{"index.html":{}}}],["here",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{}}}],["hierarchy",{"_index":254,"title":{},"body":{"components/AppComponent.html":{}}}],["highlight",{"_index":718,"title":{},"body":{"components/HomeComponent.html":{}}}],["highlights",{"_index":1438,"title":{},"body":{"index.html":{}}}],["holder",{"_index":781,"title":{},"body":{"injectables/Logger.html":{},"components/NavbarComponent.html":{}}}],["holds",{"_index":963,"title":{},"body":{"components/NavbarComponent.html":{}}}],["home",{"_index":673,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["home'},{'name",{"_index":137,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["home.component.css",{"_index":674,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":675,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":136,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hook",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{}}}],["hooks",{"_index":1299,"title":{},"body":{"index.html":{}}}],["html",{"_index":120,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["http",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"injectables/GitService.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"index.html":{}}}],["http://localhost:4200",{"_index":1371,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":650,"title":{},"body":{"injectables/GitService.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{}}}],["httpclient,private",{"_index":951,"title":{},"body":{"injectables/MysqlserviceService.html":{}}}],["httpclientinmemorywebapimodule",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientinmemorywebapimodule.forroot",{"_index":432,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodule",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":656,"title":{},"body":{"injectables/GitService.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{}}}],["httpheaders({'content",{"_index":956,"title":{},"body":{"injectables/MysqlserviceService.html":{}}}],["httpoptions",{"_index":647,"title":{},"body":{"injectables/GitService.html":{}}}],["httpresponse",{"_index":664,"title":{},"body":{"injectables/GitService.html":{}}}],["https://samarthya.github.io",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.github.com/samarthya",{"_index":775,"title":{},"body":{"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["https://www.linkedin.com/in/samarthyasaurabh",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iam",{"_index":761,"title":{},"body":{"modules/IamModule.html":{}}}],["iam/iam.module",{"_index":410,"title":{},"body":{"modules/AppModule.html":{}}}],["iammodule",{"_index":366,"title":{"modules/IamModule.html":{}},"body":{"modules/AppModule.html":{},"modules/IamModule.html":{},"modules.html":{},"overview.html":{}}}],["icon",{"_index":964,"title":{},"body":{"components/NavbarComponent.html":{}}}],["icons",{"_index":626,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["identification",{"_index":513,"title":{},"body":{"components/ContactComponent.html":{}}}],["identifier",{"_index":1137,"title":{},"body":{"coverage.html":{}}}],["identify",{"_index":613,"title":{},"body":{"components/FooterComponent.html":{}}}],["idetails",{"_index":736,"title":{"interfaces/IDetails.html":{}},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/MysqlserviceService.html":{},"coverage.html":{}}}],["ignore",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{}}}],["image",{"_index":669,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{}}}],["imageurl",{"_index":95,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["img",{"_index":574,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{}}}],["imgsize",{"_index":1073,"title":{},"body":{"components/RegisterComponent.html":{}}}],["implement",{"_index":1254,"title":{},"body":{"index.html":{}}}],["implemented",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{}}}],["import",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"interfaces/ActiveUserState.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"injectables/GitService.html":{},"components/HomeComponent.html":{},"modules/IamModule.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{}}}],["imports",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"modules/IamModule.html":{}}}],["include",{"_index":1406,"title":{},"body":{"index.html":{}}}],["includes",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["increased",{"_index":1268,"title":{},"body":{"index.html":{}}}],["index",{"_index":33,"title":{"index.html":{}},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"interfaces/ActiveUserState.html":{},"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"injectables/GitService.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":448,"title":{},"body":{"modules/AppModule.html":{}}}],["individual",{"_index":698,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["inexpensive",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"interfaces/ActiveUserState.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"injectables/GitService.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"modules/IamModule.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{}}}],["information",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/ActiveUserState.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["init",{"_index":350,"title":{},"body":{"injectables/AppEffects.html":{}}}],["initalized",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{}}}],["initial",{"_index":1092,"title":{},"body":{"interfaces/State.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["initialappstate",{"_index":217,"title":{},"body":{"interfaces/ActiveUserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialised",{"_index":450,"title":{},"body":{"modules/AppModule.html":{}}}],["initialization",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{}}}],["initialize",{"_index":1353,"title":{},"body":{"index.html":{}}}],["initializing",{"_index":1471,"title":{},"body":{"index.html":{}}}],["initialparams",{"_index":172,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["initialstate",{"_index":1094,"title":{},"body":{"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initiated",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initiatied",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":267,"title":{"injectables/AppEffects.html":{},"injectables/GitService.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{}},"body":{"injectables/AppEffects.html":{},"modules/AppModule.html":{},"injectables/GitService.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"guards/ThankyouResolver.html":{},"coverage.html":{}}}],["injectables",{"_index":269,"title":{},"body":{"injectables/AppEffects.html":{},"injectables/GitService.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"overview.html":{}}}],["injection",{"_index":1247,"title":{},"body":{"index.html":{}}}],["inline",{"_index":872,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["inlined",{"_index":871,"title":{},"body":{"components/LoginComponent.html":{}}}],["inmemorydataservice",{"_index":394,"title":{"injectables/InMemoryDataService.html":{}},"body":{"modules/AppModule.html":{},"injectables/InMemoryDataService.html":{},"coverage.html":{}}}],["inner",{"_index":694,"title":{},"body":{"components/HomeComponent.html":{}}}],["input",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/PersonComponent.html":{},"index.html":{}}}],["inputs",{"_index":676,"title":{},"body":{"components/HomeComponent.html":{},"components/PersonComponent.html":{}}}],["inserted",{"_index":447,"title":{},"body":{"modules/AppModule.html":{}}}],["install",{"_index":1270,"title":{},"body":{"index.html":{}}}],["instance",{"_index":644,"title":{},"body":{"injectables/GitService.html":{},"injectables/LoginService.html":{},"index.html":{}}}],["intention",{"_index":1228,"title":{},"body":{"index.html":{}}}],["interact",{"_index":304,"title":{},"body":{"injectables/AppEffects.html":{}}}],["interaction",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{}}}],["interactive",{"_index":1316,"title":{},"body":{"index.html":{}}}],["intercepts",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["interested",{"_index":292,"title":{},"body":{"injectables/AppEffects.html":{}}}],["interface",{"_index":189,"title":{"interfaces/ActiveUserState.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"interfaces/State.html":{}},"body":{"interfaces/ActiveUserState.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"interfaces/State.html":{},"coverage.html":{}}}],["interfaces",{"_index":191,"title":{},"body":{"interfaces/ActiveUserState.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"interfaces/State.html":{},"overview.html":{}}}],["intro",{"_index":731,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["introduction",{"_index":109,"title":{},"body":{"components/AboutComponent.html":{}}}],["introduction/mission",{"_index":1435,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":1077,"title":{},"body":{"components/RegisterComponent.html":{}}}],["invalid:not(form",{"_index":1076,"title":{},"body":{"components/RegisterComponent.html":{}}}],["invoked",{"_index":854,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["ionic",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["ip",{"_index":850,"title":{},"body":{"components/LoginComponent.html":{}}}],["iprincipal",{"_index":319,"title":{"interfaces/IPrincipal.html":{}},"body":{"injectables/AppEffects.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"components/LoginComponent.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["iprofile",{"_index":79,"title":{"interfaces/IProfile.html":{}},"body":{"components/AboutComponent.html":{},"interfaces/IProfile.html":{},"components/PersonComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isauthorized",{"_index":883,"title":{},"body":{"injectables/LoginService.html":{}}}],["isemailvalid",{"_index":479,"title":{},"body":{"components/ContactComponent.html":{}}}],["isformvalid",{"_index":819,"title":{},"body":{"components/LoginComponent.html":{}}}],["isnamevalid",{"_index":480,"title":{},"body":{"components/ContactComponent.html":{}}}],["isolate",{"_index":278,"title":{},"body":{"injectables/AppEffects.html":{}}}],["ispasswordvalid",{"_index":820,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["isusernamevalid",{"_index":821,"title":{},"body":{"components/LoginComponent.html":{}}}],["iuser",{"_index":750,"title":{"interfaces/IUser.html":{}},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/MysqlserviceService.html":{},"coverage.html":{}}}],["iuserprofile",{"_index":204,"title":{"interfaces/IUserProfile.html":{}},"body":{"interfaces/ActiveUserState.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ivy",{"_index":1327,"title":{},"body":{"index.html":{}}}],["jasmine",{"_index":1473,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":1284,"title":{},"body":{"index.html":{}}}],["job",{"_index":915,"title":{},"body":{"injectables/LoginService.html":{}}}],["jquery",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":1240,"title":{},"body":{"index.html":{}}}],["json",{"_index":662,"title":{},"body":{"injectables/GitService.html":{},"components/RegisterComponent.html":{}}}],["json.stringify(ip",{"_index":853,"title":{},"body":{"components/LoginComponent.html":{}}}],["json.stringify(values",{"_index":532,"title":{},"body":{"components/ContactComponent.html":{}}}],["karma",{"_index":1385,"title":{},"body":{"index.html":{}}}],["keep",{"_index":919,"title":{},"body":{"injectables/LoginService.html":{}}}],["key",{"_index":271,"title":{},"body":{"injectables/AppEffects.html":{}}}],["know",{"_index":1280,"title":{},"body":{"index.html":{}}}],["knowledge",{"_index":687,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["lad",{"_index":776,"title":{},"body":{"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":752,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"components/RegisterComponent.html":{}}}],["lastname",{"_index":753,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["later",{"_index":111,"title":{},"body":{"components/AboutComponent.html":{}}}],["latest",{"_index":225,"title":{},"body":{"interfaces/ActiveUserState.html":{},"components/HomeComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["lead",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{}}}],["learn",{"_index":716,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["learning",{"_index":778,"title":{},"body":{"injectables/InMemoryDataService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":565,"title":{},"body":{"components/ContactComponent.html":{},"components/RegisterComponent.html":{}}}],["legend",{"_index":119,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"overview.html":{}}}],["library.add",{"_index":451,"title":{},"body":{"modules/AppModule.html":{}}}],["life",{"_index":1232,"title":{},"body":{"index.html":{}}}],["lifecycle",{"_index":1298,"title":{},"body":{"index.html":{}}}],["link",{"_index":114,"title":{},"body":{"components/AboutComponent.html":{},"components/ContactComponent.html":{},"index.html":{}}}],["linkedin",{"_index":97,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/IProfile.html":{},"miscellaneous/variables.html":{}}}],["links",{"_index":608,"title":{},"body":{"components/FooterComponent.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["lint",{"_index":1487,"title":{},"body":{"index.html":{}}}],["listen",{"_index":288,"title":{},"body":{"injectables/AppEffects.html":{}}}],["loads",{"_index":1261,"title":{},"body":{"index.html":{}}}],["locally",{"_index":1426,"title":{},"body":{"index.html":{}}}],["log",{"_index":786,"title":{},"body":{"injectables/Logger.html":{}}}],["log(msg",{"_index":795,"title":{},"body":{"injectables/Logger.html":{}}}],["log.service",{"_index":837,"title":{},"body":{"components/LoginComponent.html":{},"components/PersonComponent.html":{}}}],["logged",{"_index":203,"title":{},"body":{"interfaces/ActiveUserState.html":{},"injectables/Logger.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{}}}],["loggedin",{"_index":197,"title":{},"body":{"interfaces/ActiveUserState.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["loggedinuser",{"_index":971,"title":{},"body":{"components/NavbarComponent.html":{}}}],["logger",{"_index":42,"title":{"injectables/Logger.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"injectables/GitService.html":{},"components/HomeComponent.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"coverage.html":{},"overview.html":{}}}],["loggerservice",{"_index":618,"title":{},"body":{"components/FooterComponent.html":{}}}],["logging",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{},"injectables/Logger.html":{},"index.html":{}}}],["logic",{"_index":1266,"title":{},"body":{"index.html":{}}}],["login",{"_index":220,"title":{},"body":{"interfaces/ActiveUserState.html":{},"injectables/AppEffects.html":{},"injectables/GitService.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":139,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["login(user",{"_index":947,"title":{},"body":{"injectables/MysqlserviceService.html":{}}}],["login.component.css",{"_index":813,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":814,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.service",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["loginactions",{"_index":211,"title":{},"body":{"interfaces/ActiveUserState.html":{}}}],["loginactions.loginsuccess",{"_index":238,"title":{},"body":{"interfaces/ActiveUserState.html":{},"miscellaneous/variables.html":{}}}],["logincomponent",{"_index":138,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginfailure",{"_index":1149,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loging",{"_index":889,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginreducer",{"_index":232,"title":{},"body":{"interfaces/ActiveUserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginreducer(activestate",{"_index":243,"title":{},"body":{"interfaces/ActiveUserState.html":{}}}],["loginservice",{"_index":309,"title":{"injectables/LoginService.html":{}},"body":{"injectables/AppEffects.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["loginsuccess",{"_index":305,"title":{},"body":{"injectables/AppEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginuser",{"_index":884,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginuser(username",{"_index":902,"title":{},"body":{"injectables/LoginService.html":{}}}],["logos",{"_index":612,"title":{},"body":{"components/FooterComponent.html":{}}}],["logout",{"_index":306,"title":{},"body":{"injectables/AppEffects.html":{},"injectables/InMemoryDataService.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logoutuser",{"_index":885,"title":{},"body":{"injectables/LoginService.html":{}}}],["logoutuser(username",{"_index":904,"title":{},"body":{"injectables/LoginService.html":{}}}],["logservice",{"_index":680,"title":{},"body":{"components/HomeComponent.html":{}}}],["long",{"_index":285,"title":{},"body":{"injectables/AppEffects.html":{}}}],["looged",{"_index":794,"title":{},"body":{"injectables/Logger.html":{}}}],["look",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["m",{"_index":1414,"title":{},"body":{"index.html":{}}}],["maintain",{"_index":1296,"title":{},"body":{"index.html":{}}}],["make",{"_index":551,"title":{},"body":{"components/ContactComponent.html":{}}}],["manjority",{"_index":706,"title":{},"body":{"components/HomeComponent.html":{}}}],["many",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map",{"_index":337,"title":{},"body":{"injectables/AppEffects.html":{},"components/LoginComponent.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["map((data",{"_index":954,"title":{},"body":{"injectables/MysqlserviceService.html":{}}}],["map((userprofile",{"_index":322,"title":{},"body":{"injectables/AppEffects.html":{}}}],["map(action",{"_index":316,"title":{},"body":{"injectables/AppEffects.html":{}}}],["map(param",{"_index":1119,"title":{},"body":{"components/ThankyouComponent.html":{}}}],["margin",{"_index":264,"title":{},"body":{"components/AppComponent.html":{}}}],["matching",{"_index":150,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"interfaces/ActiveUserState.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"injectables/GitService.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"modules/IamModule.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1431,"title":{},"body":{"index.html":{}}}],["max",{"_index":575,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["max_user_length",{"_index":840,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maxage",{"_index":443,"title":{},"body":{"modules/AppModule.html":{},"modules/IamModule.html":{}}}],["meant",{"_index":586,"title":{},"body":{"components/ErrorpageComponent.html":{},"interfaces/IPrincipal.html":{}}}],["media",{"_index":726,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["memory",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"injectables/InMemoryDataService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["message",{"_index":327,"title":{},"body":{"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"injectables/Logger.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["messagestring",{"_index":1111,"title":{},"body":{"components/ThankyouComponent.html":{}}}],["meta",{"_index":1095,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["metareducer",{"_index":1084,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["metareducers",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["method",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"guards/ThankyouResolver.html":{}}}],["methods",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"injectables/GitService.html":{},"components/HomeComponent.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{}}}],["min",{"_index":732,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["minimal",{"_index":1343,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":1215,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mix",{"_index":690,"title":{},"body":{"components/HomeComponent.html":{}}}],["mock",{"_index":177,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["model",{"_index":754,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{}}}],["models/user.model",{"_index":205,"title":{},"body":{"interfaces/ActiveUserState.html":{},"injectables/InMemoryDataService.html":{},"injectables/MysqlserviceService.html":{}}}],["moderated",{"_index":110,"title":{},"body":{"components/AboutComponent.html":{}}}],["modern",{"_index":1258,"title":{},"body":{"index.html":{}}}],["modified",{"_index":230,"title":{},"body":{"interfaces/ActiveUserState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":353,"title":{"modules/AppModule.html":{},"modules/IamModule.html":{}},"body":{"modules/AppModule.html":{},"modules/IamModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":355,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/IamModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":783,"title":{},"body":{"injectables/Logger.html":{}}}],["more",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":793,"title":{},"body":{"injectables/Logger.html":{}}}],["much",{"_index":1366,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["mysqlserviceservice",{"_index":367,"title":{"injectables/MysqlserviceService.html":{}},"body":{"modules/AppModule.html":{},"injectables/MysqlserviceService.html":{},"coverage.html":{},"overview.html":{}}}],["name",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"injectables/GitService.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name.invalid",{"_index":542,"title":{},"body":{"components/ContactComponent.html":{}}}],["name.touched",{"_index":541,"title":{},"body":{"components/ContactComponent.html":{}}}],["navbar",{"_index":966,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":141,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["navbar.component.css",{"_index":967,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":968,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":140,"title":{"components/NavbarComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":1272,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":962,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["need",{"_index":421,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["needs",{"_index":1001,"title":{},"body":{"components/PersonComponent.html":{}}}],["never",{"_index":558,"title":{},"body":{"components/ContactComponent.html":{},"components/RegisterComponent.html":{}}}],["new",{"_index":178,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"interfaces/ActiveUserState.html":{},"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"injectables/GitService.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newly",{"_index":229,"title":{},"body":{"interfaces/ActiveUserState.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":164,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["ng",{"_index":561,"title":{},"body":{"components/ContactComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["ngclass",{"_index":497,"title":{},"body":{"components/ContactComponent.html":{}}}],["nginit",{"_index":830,"title":{},"body":{"components/LoginComponent.html":{}}}],["ngmodule",{"_index":385,"title":{},"body":{"modules/AppModule.html":{},"modules/IamModule.html":{}}}],["ngmodules",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["ngrx",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngrx/effects",{"_index":343,"title":{},"body":{"injectables/AppEffects.html":{},"modules/AppModule.html":{},"modules/IamModule.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":208,"title":{},"body":{"interfaces/ActiveUserState.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"modules/IamModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"dependencies.html":{}}}],["nodemon",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["none",{"_index":730,"title":{},"body":{"components/HomeComponent.html":{}}}],["normal",{"_index":1100,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["null",{"_index":236,"title":{},"body":{"interfaces/ActiveUserState.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":745,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":655,"title":{},"body":{"injectables/GitService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":160,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"injectables/GitService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["observables",{"_index":1245,"title":{},"body":{"index.html":{}}}],["observables's",{"_index":182,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["of(false",{"_index":942,"title":{},"body":{"injectables/LoginService.html":{}}}],["of(result",{"_index":922,"title":{},"body":{"injectables/LoginService.html":{}}}],["offerring",{"_index":1449,"title":{},"body":{"index.html":{}}}],["oftype",{"_index":341,"title":{},"body":{"injectables/AppEffects.html":{}}}],["oftype(appactions.login",{"_index":315,"title":{},"body":{"injectables/AppEffects.html":{}}}],["oftype(appactions.loginsuccess",{"_index":329,"title":{},"body":{"injectables/AppEffects.html":{}}}],["oftype(appactions.logout",{"_index":333,"title":{},"body":{"injectables/AppEffects.html":{}}}],["oftype(root_effects_init",{"_index":351,"title":{},"body":{"injectables/AppEffects.html":{}}}],["on(loginactions.login",{"_index":233,"title":{},"body":{"interfaces/ActiveUserState.html":{},"miscellaneous/variables.html":{}}}],["on(loginactions.logout",{"_index":240,"title":{},"body":{"interfaces/ActiveUserState.html":{},"miscellaneous/variables.html":{}}}],["one",{"_index":413,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["oninit",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["onreset",{"_index":481,"title":{},"body":{"components/ContactComponent.html":{}}}],["onsubmission",{"_index":482,"title":{},"body":{"components/ContactComponent.html":{}}}],["operation",{"_index":898,"title":{},"body":{"injectables/LoginService.html":{}}}],["operator",{"_index":295,"title":{},"body":{"injectables/AppEffects.html":{}}}],["opinionated",{"_index":1260,"title":{},"body":{"index.html":{}}}],["optional",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"interfaces/ActiveUserState.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"injectables/GitService.html":{},"components/HomeComponent.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":1304,"title":{},"body":{"index.html":{}}}],["origin",{"_index":958,"title":{},"body":{"injectables/MysqlserviceService.html":{},"index.html":{}}}],["origin/v1.0",{"_index":1396,"title":{},"body":{"index.html":{}}}],["original",{"_index":231,"title":{},"body":{"interfaces/ActiveUserState.html":{},"miscellaneous/variables.html":{}}}],["others",{"_index":1446,"title":{},"body":{"index.html":{}}}],["out",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":1362,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1497,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwriting",{"_index":1334,"title":{},"body":{"index.html":{}}}],["p",{"_index":994,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["p1",{"_index":1058,"title":{},"body":{"components/RegisterComponent.html":{}}}],["p1.length",{"_index":1062,"title":{},"body":{"components/RegisterComponent.html":{}}}],["p1.search(p2",{"_index":1064,"title":{},"body":{"components/RegisterComponent.html":{}}}],["p2",{"_index":1060,"title":{},"body":{"components/RegisterComponent.html":{}}}],["p2.length",{"_index":1063,"title":{},"body":{"components/RegisterComponent.html":{}}}],["package",{"_index":1185,"title":{"dependencies.html":{}},"body":{}}],["package.json",{"_index":1295,"title":{},"body":{"index.html":{}}}],["packages",{"_index":1354,"title":{},"body":{"index.html":{}}}],["page",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ErrorpageComponent.html":{}}}],["param",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{},"components/ContactComponent.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/RegisterComponent.html":{}}}],["param.get(message",{"_index":1120,"title":{},"body":{"components/ThankyouComponent.html":{}}}],["parameters",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"injectables/GitService.html":{},"components/HomeComponent.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"miscellaneous/functions.html":{}}}],["parammap",{"_index":159,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/ThankyouComponent.html":{}}}],["params",{"_index":170,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["parent",{"_index":592,"title":{},"body":{"components/ErrorpageComponent.html":{}}}],["part",{"_index":487,"title":{},"body":{"components/ContactComponent.html":{}}}],["passed",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{}}}],["password",{"_index":748,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["password)).pipe",{"_index":932,"title":{},"body":{"injectables/LoginService.html":{}}}],["password.valid",{"_index":863,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordconfirm",{"_index":1024,"title":{},"body":{"components/RegisterComponent.html":{}}}],["path",{"_index":1347,"title":{},"body":{"index.html":{}}}],["payload",{"_index":326,"title":{},"body":{"injectables/AppEffects.html":{},"miscellaneous/variables.html":{}}}],["perform",{"_index":296,"title":{},"body":{"injectables/AppEffects.html":{}}}],["person",{"_index":514,"title":{},"body":{"components/ContactComponent.html":{},"components/PersonComponent.html":{}}}],["person'},{'name",{"_index":143,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["person.component.css",{"_index":1007,"title":{},"body":{"components/PersonComponent.html":{}}}],["person.component.html",{"_index":1008,"title":{},"body":{"components/PersonComponent.html":{}}}],["personcomponent",{"_index":142,"title":{"components/PersonComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["petite",{"_index":638,"title":{},"body":{"components/FooterComponent.html":{}}}],["pic",{"_index":1072,"title":{},"body":{"components/RegisterComponent.html":{}}}],["pipe",{"_index":938,"title":{},"body":{"injectables/LoginService.html":{}}}],["pipe(catcherror(err",{"_index":935,"title":{},"body":{"injectables/LoginService.html":{}}}],["place",{"_index":780,"title":{},"body":{"injectables/Logger.html":{}}}],["platform",{"_index":717,"title":{},"body":{"components/HomeComponent.html":{}}}],["play",{"_index":1133,"title":{},"body":{"guards/ThankyouResolver.html":{}}}],["please",{"_index":601,"title":{},"body":{"components/ErrorpageComponent.html":{},"components/RegisterComponent.html":{}}}],["point",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{}}}],["pojo's",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["popper.js",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["portal",{"_index":1016,"title":{},"body":{"components/RegisterComponent.html":{}}}],["possible",{"_index":588,"title":{},"body":{"components/ErrorpageComponent.html":{}}}],["pre",{"_index":1097,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["predictable",{"_index":196,"title":{},"body":{"interfaces/ActiveUserState.html":{}}}],["prefer",{"_index":1277,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":1349,"title":{},"body":{"index.html":{}}}],["preprocessor",{"_index":1358,"title":{},"body":{"index.html":{}}}],["prescriptions",{"_index":1263,"title":{},"body":{"index.html":{}}}],["presence",{"_index":725,"title":{},"body":{"components/HomeComponent.html":{}}}],["pretty",{"_index":1365,"title":{},"body":{"index.html":{}}}],["principal",{"_index":234,"title":{},"body":{"interfaces/ActiveUserState.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["principal.password).pipe",{"_index":321,"title":{},"body":{"injectables/AppEffects.html":{}}}],["private",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"injectables/GitService.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["probelm",{"_index":1233,"title":{},"body":{"index.html":{}}}],["process",{"_index":1098,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["prod",{"_index":1375,"title":{},"body":{"index.html":{}}}],["production",{"_index":1376,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["productivity",{"_index":1249,"title":{},"body":{"index.html":{}}}],["professional",{"_index":723,"title":{},"body":{"components/HomeComponent.html":{}}}],["profile",{"_index":237,"title":{},"body":{"interfaces/ActiveUserState.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["profile.description",{"_index":1014,"title":{},"body":{"components/PersonComponent.html":{}}}],["profile.subtitle",{"_index":1013,"title":{},"body":{"components/PersonComponent.html":{}}}],["profile.title",{"_index":1012,"title":{},"body":{"components/PersonComponent.html":{}}}],["profilefailure",{"_index":1150,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["profiles",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{},"components/PersonComponent.html":{}}}],["profilesuccess",{"_index":1151,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["progressive",{"_index":1491,"title":{},"body":{"index.html":{}}}],["project",{"_index":1223,"title":{},"body":{"index.html":{}}}],["projects",{"_index":1313,"title":{},"body":{"index.html":{}}}],["prompts",{"_index":1317,"title":{},"body":{"index.html":{}}}],["prop",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["properly",{"_index":936,"title":{},"body":{"injectables/LoginService.html":{}}}],["properties",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"interfaces/ActiveUserState.html":{},"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"components/FooterComponent.html":{},"injectables/GitService.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"components/ThankyouComponent.html":{}}}],["property",{"_index":980,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["props",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["protractor",{"_index":1389,"title":{},"body":{"index.html":{}}}],["provide",{"_index":302,"title":{},"body":{"injectables/AppEffects.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":865,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["providedin",{"_index":417,"title":{},"body":{"modules/AppModule.html":{},"injectables/GitService.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{}}}],["provider",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"components/ContactComponent.html":{},"injectables/GitService.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"guards/ThankyouResolver.html":{}}}],["pull",{"_index":1427,"title":{},"body":{"index.html":{}}}],["pure",{"_index":281,"title":{},"body":{"injectables/AppEffects.html":{}}}],["purposes",{"_index":1346,"title":{},"body":{"index.html":{}}}],["push",{"_index":1386,"title":{},"body":{"index.html":{}}}],["queryparammap",{"_index":166,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["queryparams",{"_index":534,"title":{},"body":{"components/ContactComponent.html":{}}}],["question",{"_index":1441,"title":{},"body":{"index.html":{}}}],["quick",{"_index":546,"title":{},"body":{"components/ContactComponent.html":{}}}],["reactive",{"_index":464,"title":{},"body":{"components/ContactComponent.html":{}}}],["reactiveformsmodule",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":301,"title":{},"body":{"injectables/AppEffects.html":{},"index.html":{}}}],["readme.md",{"_index":1404,"title":{},"body":{"index.html":{}}}],["readme.mdalways",{"_index":1413,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":165,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["ready",{"_index":430,"title":{},"body":{"modules/AppModule.html":{}}}],["real",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["reasons",{"_index":1453,"title":{},"body":{"index.html":{}}}],["receive",{"_index":431,"title":{},"body":{"modules/AppModule.html":{}}}],["recommendations",{"_index":1262,"title":{},"body":{"index.html":{}}}],["recommended",{"_index":1293,"title":{},"body":{"index.html":{}}}],["records",{"_index":516,"title":{},"body":{"components/ContactComponent.html":{}}}],["red",{"_index":573,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["reducer",{"_index":221,"title":{},"body":{"interfaces/ActiveUserState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reducer(activestate",{"_index":242,"title":{},"body":{"interfaces/ActiveUserState.html":{},"miscellaneous/functions.html":{}}}],["reducers",{"_index":412,"title":{},"body":{"modules/AppModule.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["redux",{"_index":1493,"title":{},"body":{"index.html":{}}}],["ref",{"_index":1292,"title":{},"body":{"index.html":{}}}],["reference",{"_index":1465,"title":{},"body":{"index.html":{}}}],["referenced",{"_index":1342,"title":{},"body":{"index.html":{}}}],["register",{"_index":945,"title":{},"body":{"injectables/MysqlserviceService.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":145,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["register(user",{"_index":949,"title":{},"body":{"injectables/MysqlserviceService.html":{}}}],["register.component.css",{"_index":1019,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":1020,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":144,"title":{"components/RegisterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":747,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"components/RegisterComponent.html":{}}}],["relative",{"_index":1348,"title":{},"body":{"index.html":{}}}],["reload",{"_index":1373,"title":{},"body":{"index.html":{}}}],["remove",{"_index":428,"title":{},"body":{"modules/AppModule.html":{}}}],["rendering",{"_index":1329,"title":{},"body":{"index.html":{}}}],["replaysubject",{"_index":179,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["repo",{"_index":1421,"title":{},"body":{"index.html":{}}}],["reportprogress",{"_index":660,"title":{},"body":{"injectables/GitService.html":{}}}],["reports",{"_index":1323,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1309,"title":{},"body":{"index.html":{}}}],["representation",{"_index":193,"title":{},"body":{"interfaces/ActiveUserState.html":{}}}],["represents",{"_index":738,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{}}}],["request",{"_index":952,"title":{},"body":{"injectables/MysqlserviceService.html":{}}}],["requested",{"_index":599,"title":{},"body":{"components/ErrorpageComponent.html":{}}}],["requests",{"_index":424,"title":{},"body":{"modules/AppModule.html":{}}}],["required",{"_index":1275,"title":{},"body":{"index.html":{}}}],["requirejs",{"_index":1288,"title":{},"body":{"index.html":{}}}],["reserved",{"_index":629,"title":{},"body":{"components/FooterComponent.html":{}}}],["reset",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["resets",{"_index":500,"title":{},"body":{"components/ContactComponent.html":{}}}],["resolve",{"_index":1127,"title":{},"body":{"guards/ThankyouResolver.html":{}}}],["resolve(route",{"_index":1129,"title":{},"body":{"guards/ThankyouResolver.html":{}}}],["resolves",{"_index":1132,"title":{},"body":{"guards/ThankyouResolver.html":{}}}],["resources",{"_index":1454,"title":{},"body":{"index.html":{}}}],["response",{"_index":1069,"title":{},"body":{"components/RegisterComponent.html":{}}}],["responses",{"_index":427,"title":{},"body":{"modules/AppModule.html":{}}}],["responsetype",{"_index":661,"title":{},"body":{"injectables/GitService.html":{}}}],["responsibility",{"_index":277,"title":{},"body":{"injectables/AppEffects.html":{}}}],["responsible",{"_index":1470,"title":{},"body":{"index.html":{}}}],["result",{"_index":149,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"interfaces/ActiveUserState.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"injectables/GitService.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"modules/IamModule.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":151,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"interfaces/ActiveUserState.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"injectables/GitService.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"modules/IamModule.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":113,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/ActiveUserState.html":{},"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"injectables/GitService.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":939,"title":{},"body":{"injectables/LoginService.html":{}}}],["returning",{"_index":920,"title":{},"body":{"injectables/LoginService.html":{}}}],["returns",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"interfaces/ActiveUserState.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"injectables/GitService.html":{},"components/HomeComponent.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reusability",{"_index":1250,"title":{},"body":{"index.html":{}}}],["rich",{"_index":1239,"title":{},"body":{"index.html":{}}}],["right",{"_index":571,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["rights",{"_index":628,"title":{},"body":{"components/FooterComponent.html":{}}}],["root",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/GitService.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"index.html":{}}}],["root'},{'name",{"_index":128,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["root_effects_init",{"_index":342,"title":{},"body":{"injectables/AppEffects.html":{}}}],["route",{"_index":483,"title":{},"body":{"components/ContactComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{}}}],["route.queryparams[message",{"_index":1134,"title":{},"body":{"guards/ThankyouResolver.html":{}}}],["router",{"_index":311,"title":{},"body":{"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/ThankyouComponent.html":{}}}],["routermodule",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approutes",{"_index":436,"title":{},"body":{"modules/AppModule.html":{}}}],["routerservice",{"_index":310,"title":{},"body":{"injectables/AppEffects.html":{}}}],["routing",{"_index":1244,"title":{},"body":{"index.html":{}}}],["rules",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":1320,"title":{},"body":{"index.html":{}}}],["runner",{"_index":1477,"title":{},"body":{"index.html":{}}}],["running",{"_index":286,"title":{},"body":{"injectables/AppEffects.html":{},"injectables/LoginService.html":{},"index.html":{}}}],["runs",{"_index":1322,"title":{},"body":{"index.html":{}}}],["runtimechecks",{"_index":439,"title":{},"body":{"modules/AppModule.html":{}}}],["rxjs",{"_index":185,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"injectables/AppEffects.html":{},"injectables/GitService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":349,"title":{},"body":{"injectables/AppEffects.html":{},"injectables/GitService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["s",{"_index":1339,"title":{},"body":{"index.html":{}}}],["saurabh",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["saurabh777@gmail.com",{"_index":772,"title":{},"body":{"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["save",{"_index":1425,"title":{},"body":{"index.html":{}}}],["scenario",{"_index":589,"title":{},"body":{"components/ErrorpageComponent.html":{}}}],["schematics",{"_index":1307,"title":{},"body":{"index.html":{}}}],["screen",{"_index":727,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["search",{"_index":997,"title":{},"body":{"components/NavbarComponent.html":{}}}],["secure",{"_index":866,"title":{},"body":{"components/LoginComponent.html":{}}}],["see",{"_index":469,"title":{},"body":{"components/ContactComponent.html":{},"interfaces/State.html":{}}}],["select",{"_index":282,"title":{},"body":{"injectables/AppEffects.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["selectactiveuserstate",{"_index":1104,"title":{},"body":{"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":125,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["selectors",{"_index":1103,"title":{},"body":{"interfaces/State.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sending",{"_index":515,"title":{},"body":{"components/ContactComponent.html":{}}}],["sent",{"_index":535,"title":{},"body":{"components/ContactComponent.html":{}}}],["separating",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serve",{"_index":1369,"title":{},"body":{"index.html":{}}}],["server",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["service",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{},"injectables/GitService.html":{},"injectables/LoginService.html":{},"index.html":{}}}],["services",{"_index":287,"title":{},"body":{"injectables/AppEffects.html":{}}}],["services/mysqlservice.service",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":115,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"modules/AppModule.html":{},"injectables/Logger.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["setconfirmpassword(value",{"_index":1046,"title":{},"body":{"components/RegisterComponent.html":{}}}],["setdebugmode(value",{"_index":804,"title":{},"body":{"injectables/Logger.html":{}}}],["setdescriptionstr(value",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{}}}],["setparammap",{"_index":162,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["setqueryparammap",{"_index":168,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["setqueryparammap(params",{"_index":180,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["setter",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{}}}],["setuser(user",{"_index":1042,"title":{},"body":{"components/RegisterComponent.html":{}}}],["shall",{"_index":606,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["share",{"_index":559,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["shared",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sharma",{"_index":774,"title":{},"body":{"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["sheet",{"_index":1430,"title":{},"body":{"index.html":{}}}],["short",{"_index":108,"title":{},"body":{"components/AboutComponent.html":{}}}],["shown",{"_index":1002,"title":{},"body":{"components/PersonComponent.html":{}}}],["shows",{"_index":1337,"title":{},"body":{"index.html":{}}}],["side",{"_index":279,"title":{},"body":{"injectables/AppEffects.html":{}}}],["similar",{"_index":1447,"title":{},"body":{"index.html":{}}}],["simple",{"_index":797,"title":{},"body":{"injectables/Logger.html":{},"index.html":{}}}],["simplify",{"_index":782,"title":{},"body":{"injectables/Logger.html":{}}}],["simulated",{"_index":425,"title":{},"body":{"modules/AppModule.html":{}}}],["singleton",{"_index":643,"title":{},"body":{"injectables/GitService.html":{},"injectables/LoginService.html":{}}}],["sinon",{"_index":1479,"title":{},"body":{"index.html":{}}}],["size",{"_index":639,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["skip",{"_index":1351,"title":{},"body":{"index.html":{}}}],["slightly",{"_index":1448,"title":{},"body":{"index.html":{}}}],["small",{"_index":640,"title":{},"body":{"components/FooterComponent.html":{}}}],["smallest",{"_index":1003,"title":{},"body":{"components/PersonComponent.html":{}}}],["social",{"_index":724,"title":{},"body":{"components/HomeComponent.html":{}}}],["software",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{},"miscellaneous/variables.html":{}}}],["solid",{"_index":567,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["solve",{"_index":1231,"title":{},"body":{"index.html":{}}}],["something",{"_index":996,"title":{},"body":{"components/NavbarComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"interfaces/ActiveUserState.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"injectables/GitService.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"modules/IamModule.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["spa",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["span#copyright",{"_index":632,"title":{},"body":{"components/FooterComponent.html":{}}}],["spec",{"_index":1461,"title":{},"body":{"index.html":{}}}],["spec.ts",{"_index":1356,"title":{},"body":{"index.html":{}}}],["specific",{"_index":419,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["specifies",{"_index":755,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{}}}],["spiritied",{"_index":710,"title":{},"body":{"components/HomeComponent.html":{}}}],["spy",{"_index":1490,"title":{},"body":{"index.html":{}}}],["src",{"_index":1311,"title":{},"body":{"index.html":{}}}],["src/.../auth.state.ts",{"_index":1218,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../data.values.ts",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1217,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../login.action.ts",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../variables.constant.ts",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/activatedroute",{"_index":154,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:17",{"_index":258,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.effects.ts",{"_index":270,"title":{},"body":{"injectables/AppEffects.html":{},"coverage.html":{}}}],["src/app/app.effects.ts:28",{"_index":328,"title":{},"body":{"injectables/AppEffects.html":{}}}],["src/app/app.effects.ts:41",{"_index":332,"title":{},"body":{"injectables/AppEffects.html":{}}}],["src/app/app.effects.ts:50",{"_index":340,"title":{},"body":{"injectables/AppEffects.html":{}}}],["src/app/app.effects.ts:63",{"_index":312,"title":{},"body":{"injectables/AppEffects.html":{}}}],["src/app/app.module.ts",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/about/about.component.ts",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/components/about/about.component.ts:24",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/about/about.component.ts:55",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/about/about.component.ts:70",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/about/about.component.ts:77",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/about/about.component.ts:84",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/actions/login.action.ts",{"_index":1147,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/activatedroute",{"_index":188,"title":{},"body":{"classes/ActivatedRouteStub-1.html":{},"coverage.html":{}}}],["src/app/components/constants/variables.constant.ts",{"_index":1152,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/contact/contact.component.ts",{"_index":463,"title":{},"body":{"components/ContactComponent.html":{},"coverage.html":{}}}],["src/app/components/contact/contact.component.ts:23",{"_index":506,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/contact/contact.component.ts:29",{"_index":511,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/contact/contact.component.ts:30",{"_index":509,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/contact/contact.component.ts:31",{"_index":485,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/contact/contact.component.ts:43",{"_index":498,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/contact/contact.component.ts:51",{"_index":501,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/contact/contact.component.ts:64",{"_index":499,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/contact/contact.component.ts:76",{"_index":490,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/contact/contact.component.ts:88",{"_index":486,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/errorpage/errorpage.component.ts",{"_index":584,"title":{},"body":{"components/ErrorpageComponent.html":{},"coverage.html":{}}}],["src/app/components/errorpage/errorpage.component.ts:13",{"_index":596,"title":{},"body":{"components/ErrorpageComponent.html":{}}}],["src/app/components/errorpage/errorpage.component.ts:17",{"_index":597,"title":{},"body":{"components/ErrorpageComponent.html":{}}}],["src/app/components/footer/footer.component.ts",{"_index":604,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/components/footer/footer.component.ts:14",{"_index":621,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:15",{"_index":622,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:16",{"_index":620,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:17",{"_index":617,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:21",{"_index":619,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/git.service.ts",{"_index":642,"title":{},"body":{"injectables/GitService.html":{},"coverage.html":{}}}],["src/app/components/git.service.ts:17",{"_index":651,"title":{},"body":{"injectables/GitService.html":{}}}],["src/app/components/git.service.ts:23",{"_index":654,"title":{},"body":{"injectables/GitService.html":{}}}],["src/app/components/git.service.ts:25",{"_index":663,"title":{},"body":{"injectables/GitService.html":{}}}],["src/app/components/git.service.ts:35",{"_index":652,"title":{},"body":{"injectables/GitService.html":{}}}],["src/app/components/home/home.component.ts",{"_index":667,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts:15",{"_index":681,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:16",{"_index":679,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:20",{"_index":682,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/log.service.ts",{"_index":779,"title":{},"body":{"injectables/Logger.html":{},"coverage.html":{}}}],["src/app/components/log.service.ts:10",{"_index":801,"title":{},"body":{"injectables/Logger.html":{}}}],["src/app/components/log.service.ts:11",{"_index":789,"title":{},"body":{"injectables/Logger.html":{}}}],["src/app/components/log.service.ts:21",{"_index":796,"title":{},"body":{"injectables/Logger.html":{}}}],["src/app/components/log.service.ts:31",{"_index":791,"title":{},"body":{"injectables/Logger.html":{}}}],["src/app/components/log.service.ts:37",{"_index":799,"title":{},"body":{"injectables/Logger.html":{}}}],["src/app/components/log.service.ts:43",{"_index":803,"title":{},"body":{"injectables/Logger.html":{}}}],["src/app/components/log.service.ts:47",{"_index":805,"title":{},"body":{"injectables/Logger.html":{}}}],["src/app/components/login/login.component.ts",{"_index":812,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:28",{"_index":831,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:29",{"_index":836,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:30",{"_index":835,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:31",{"_index":834,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:36",{"_index":832,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:37",{"_index":833,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:38",{"_index":822,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:65",{"_index":829,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:76",{"_index":823,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:90",{"_index":826,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:94",{"_index":828,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:99",{"_index":827,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":961,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts:28",{"_index":981,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:29",{"_index":983,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:31",{"_index":982,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:32",{"_index":975,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:46",{"_index":978,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:53",{"_index":977,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:60",{"_index":979,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:64",{"_index":976,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/person/person.component.ts",{"_index":998,"title":{},"body":{"components/PersonComponent.html":{},"coverage.html":{}}}],["src/app/components/person/person.component.ts:19",{"_index":1009,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/components/person/person.component.ts:25",{"_index":1010,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/components/register/register.component.ts",{"_index":1015,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/components/register/register.component.ts:28",{"_index":1033,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:30",{"_index":1037,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:31",{"_index":1032,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:32",{"_index":1034,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:34",{"_index":1036,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:35",{"_index":1035,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:37",{"_index":1039,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:39",{"_index":1038,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:41",{"_index":1041,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:45",{"_index":1043,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:47",{"_index":1028,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:63",{"_index":1031,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:71",{"_index":1030,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:84",{"_index":1045,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:87",{"_index":1047,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:91",{"_index":1029,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/thankyou/thankyou.component.ts",{"_index":1108,"title":{},"body":{"components/ThankyouComponent.html":{},"coverage.html":{}}}],["src/app/components/thankyou/thankyou.component.ts:13",{"_index":1112,"title":{},"body":{"components/ThankyouComponent.html":{}}}],["src/app/components/thankyou/thankyou.component.ts:18",{"_index":1113,"title":{},"body":{"components/ThankyouComponent.html":{}}}],["src/app/components/thankyou/thankyou.component.ts:29",{"_index":1115,"title":{},"body":{"components/ThankyouComponent.html":{}}}],["src/app/components/thankyou/thankyou.resolver.service.ts",{"_index":1126,"title":{},"body":{"guards/ThankyouResolver.html":{},"coverage.html":{}}}],["src/app/components/thankyou/thankyou.resolver.service.ts:16",{"_index":1131,"title":{},"body":{"guards/ThankyouResolver.html":{}}}],["src/app/components/thankyou/thankyou.resolver.service.ts:7",{"_index":1128,"title":{},"body":{"guards/ThankyouResolver.html":{}}}],["src/app/data/test/data.values.ts",{"_index":1173,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/iam/iam.module.ts",{"_index":760,"title":{},"body":{"modules/IamModule.html":{}}}],["src/app/in",{"_index":768,"title":{},"body":{"injectables/InMemoryDataService.html":{},"coverage.html":{}}}],["src/app/login.service.ts",{"_index":878,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/app/login.service.ts:100",{"_index":910,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:16",{"_index":907,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:17",{"_index":887,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:33",{"_index":896,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:47",{"_index":888,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:54",{"_index":893,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:66",{"_index":901,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:70",{"_index":903,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:85",{"_index":905,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/models/profiles.model",{"_index":1011,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/models/profiles.model.ts",{"_index":759,"title":{},"body":{"interfaces/IProfile.html":{},"coverage.html":{}}}],["src/app/models/user.model",{"_index":838,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/models/user.model.ts",{"_index":737,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"coverage.html":{}}}],["src/app/services/mysqlservice.service.ts",{"_index":944,"title":{},"body":{"injectables/MysqlserviceService.html":{},"coverage.html":{}}}],["src/app/services/mysqlservice.service.ts:11",{"_index":946,"title":{},"body":{"injectables/MysqlserviceService.html":{}}}],["src/app/services/mysqlservice.service.ts:15",{"_index":950,"title":{},"body":{"injectables/MysqlserviceService.html":{}}}],["src/app/services/mysqlservice.service.ts:24",{"_index":948,"title":{},"body":{"injectables/MysqlserviceService.html":{}}}],["src/app/state/auth.state.ts",{"_index":192,"title":{},"body":{"interfaces/ActiveUserState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/state/index.ts",{"_index":1079,"title":{},"body":{"interfaces/State.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":1181,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1182,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["staged",{"_index":1398,"title":{},"body":{"index.html":{}}}],["stakeholders",{"_index":1437,"title":{},"body":{"index.html":{}}}],["start",{"_index":1281,"title":{},"body":{"index.html":{}}}],["started",{"_index":1221,"title":{"index.html":{}},"body":{}}],["stash",{"_index":1424,"title":{},"body":{"index.html":{}}}],["stashing",{"_index":1423,"title":{},"body":{"index.html":{}}}],["state",{"_index":195,"title":{"interfaces/State.html":{}},"body":{"interfaces/ActiveUserState.html":{},"injectables/AppEffects.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state.loggedin",{"_index":248,"title":{},"body":{"interfaces/ActiveUserState.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["state.userprofile",{"_index":245,"title":{},"body":{"interfaces/ActiveUserState.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["state:activeuserstate",{"_index":247,"title":{},"body":{"interfaces/ActiveUserState.html":{},"miscellaneous/variables.html":{}}}],["statement",{"_index":1436,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1138,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":1093,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["static",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{}}}],["status",{"_index":338,"title":{},"body":{"injectables/AppEffects.html":{},"injectables/LoginService.html":{},"index.html":{}}}],["statusit",{"_index":1393,"title":{},"body":{"index.html":{}}}],["statuswhich",{"_index":1410,"title":{},"body":{"index.html":{}}}],["still",{"_index":777,"title":{},"body":{"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{},"index.html":{}}}],["stored",{"_index":1378,"title":{},"body":{"index.html":{}}}],["storedevtoolsmodule",{"_index":401,"title":{},"body":{"modules/AppModule.html":{},"modules/IamModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":442,"title":{},"body":{"modules/AppModule.html":{},"modules/IamModule.html":{}}}],["storemodule",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"modules/IamModule.html":{}}}],["storemodule.forfeature(fromstore.activeauthstatekey",{"_index":766,"title":{},"body":{"modules/IamModule.html":{}}}],["storemodule.forroot(reducers",{"_index":438,"title":{},"body":{"modules/AppModule.html":{}}}],["storerouterconnectingmodule",{"_index":408,"title":{},"body":{"modules/AppModule.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":446,"title":{},"body":{"modules/AppModule.html":{}}}],["storing",{"_index":1422,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":1364,"title":{},"body":{"index.html":{}}}],["streams",{"_index":472,"title":{},"body":{"components/ContactComponent.html":{}}}],["strictactionimmutability",{"_index":441,"title":{},"body":{"modules/AppModule.html":{}}}],["strictstateimmutability",{"_index":440,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"injectables/GitService.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":757,"title":{},"body":{"interfaces/IPrincipal.html":{}}}],["stub.ts",{"_index":155,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"coverage.html":{}}}],["stub.ts:10",{"_index":171,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["stub.ts:17",{"_index":176,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["stub.ts:20",{"_index":181,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["style",{"_index":1338,"title":{},"body":{"index.html":{}}}],["styleguide",{"_index":1297,"title":{},"body":{"index.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"index.html":{}}}],["styleurls",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["subject",{"_index":167,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["submit",{"_index":502,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["subsciption",{"_index":746,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{}}}],["subscribetoemail",{"_index":741,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["subtitle",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/IProfile.html":{},"miscellaneous/variables.html":{}}}],["success",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["such",{"_index":709,"title":{},"body":{"components/HomeComponent.html":{}}}],["supplied",{"_index":493,"title":{},"body":{"components/ContactComponent.html":{}}}],["support",{"_index":1494,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":625,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["switchmap",{"_index":1116,"title":{},"body":{"components/ThankyouComponent.html":{}}}],["synchronous",{"_index":298,"title":{},"body":{"injectables/AppEffects.html":{}}}],["syntax",{"_index":688,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["t",{"_index":895,"title":{},"body":{"injectables/LoginService.html":{},"index.html":{}}}],["table",{"_index":1184,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1183,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":224,"title":{},"body":{"interfaces/ActiveUserState.html":{},"injectables/LoginService.html":{},"components/PersonComponent.html":{},"miscellaneous/variables.html":{}}}],["tap",{"_index":330,"title":{},"body":{"injectables/AppEffects.html":{},"injectables/GitService.html":{},"injectables/LoginService.html":{}}}],["tap((user",{"_index":933,"title":{},"body":{"injectables/LoginService.html":{}}}],["tap(_",{"_index":924,"title":{},"body":{"injectables/LoginService.html":{}}}],["targeted",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tasks",{"_index":297,"title":{},"body":{"injectables/AppEffects.html":{}}}],["teams",{"_index":1252,"title":{},"body":{"index.html":{}}}],["technologies",{"_index":686,"title":{},"body":{"components/HomeComponent.html":{}}}],["techstack",{"_index":1230,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"index.html":{}}}],["templateurl",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["test",{"_index":157,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"index.html":{}}}],["testbed",{"_index":1469,"title":{},"body":{"index.html":{}}}],["testbed.configuretestingmodule",{"_index":1484,"title":{},"body":{"index.html":{}}}],["tested",{"_index":1466,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1344,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1355,"title":{},"body":{"index.html":{}}}],["text",{"_index":548,"title":{},"body":{"components/ContactComponent.html":{},"injectables/GitService.html":{}}}],["text/html,application/xhtml,application/xml",{"_index":657,"title":{},"body":{"injectables/GitService.html":{}}}],["thank",{"_index":1122,"title":{},"body":{"components/ThankyouComponent.html":{}}}],["thankyou.component.css",{"_index":1109,"title":{},"body":{"components/ThankyouComponent.html":{}}}],["thankyou.component.html",{"_index":1110,"title":{},"body":{"components/ThankyouComponent.html":{}}}],["thankyoucomponent",{"_index":146,"title":{"components/ThankyouComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"coverage.html":{},"overview.html":{}}}],["thankyouresolver",{"_index":1124,"title":{"guards/ThankyouResolver.html":{}},"body":{"guards/ThankyouResolver.html":{},"coverage.html":{}}}],["things",{"_index":1279,"title":{},"body":{"index.html":{}}}],["this._debugmode",{"_index":810,"title":{},"body":{"injectables/Logger.html":{}}}],["this.actions$.pipe",{"_index":314,"title":{},"body":{"injectables/AppEffects.html":{}}}],["this.baseloginurl",{"_index":943,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.comment",{"_index":522,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.comment.reset",{"_index":538,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.config",{"_index":1068,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.confirmpassword",{"_index":1061,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.contactform",{"_index":521,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.contactform.addcontrol('email",{"_index":525,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.contactform.addcontrol('name",{"_index":523,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.contactform.get('email",{"_index":543,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.contactform.get('name",{"_index":540,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.contactform.reset",{"_index":539,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.contactform.value",{"_index":531,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.currentstate",{"_index":1054,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.currentstate$.subscribe(state",{"_index":1056,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.currentuser",{"_index":847,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["this.currentuser$.subscribe",{"_index":849,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.currentuser$.subscribe((user",{"_index":986,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.debugmode",{"_index":806,"title":{},"body":{"injectables/Logger.html":{}}}],["this.description",{"_index":107,"title":{},"body":{"components/AboutComponent.html":{}}}],["this.editmode",{"_index":1053,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.email",{"_index":526,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.email.reset",{"_index":537,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.formlogin",{"_index":846,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formlogin.get('password",{"_index":862,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formlogin.get('username",{"_index":860,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formlogin.valid",{"_index":859,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.getbasicheader(username",{"_index":931,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.gitservice.getzen().subscribe(response",{"_index":1067,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.http.get('http://localhost:4000/login'+user",{"_index":959,"title":{},"body":{"injectables/MysqlserviceService.html":{}}}],["this.http.get(this.basegiturl",{"_index":665,"title":{},"body":{"injectables/GitService.html":{}}}],["this.http.get(this.baseloginurl).pipe",{"_index":923,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.http.post('http://localhost:4000/add',user).pipe",{"_index":953,"title":{},"body":{"injectables/MysqlserviceService.html":{}}}],["this.http.post(this.baseloginurl",{"_index":930,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.http.post(this.baselogouturl",{"_index":937,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.httpoptions",{"_index":666,"title":{},"body":{"injectables/GitService.html":{}}}],["this.loggedin",{"_index":1057,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.loggedinuser",{"_index":985,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.loggedinuser.email",{"_index":989,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.loggedinuser.email.length",{"_index":990,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.logger.log",{"_index":117,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{}}}],["this.logger.log('welcome",{"_index":988,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.logger.log(`${operation",{"_index":917,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.loggerservice.log",{"_index":627,"title":{},"body":{"components/FooterComponent.html":{}}}],["this.loginservice.loginuser(principal.email",{"_index":320,"title":{},"body":{"injectables/AppEffects.html":{}}}],["this.loginservice.logoutuser(username).pipe",{"_index":336,"title":{},"body":{"injectables/AppEffects.html":{}}}],["this.logservice.log",{"_index":683,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.message",{"_index":1117,"title":{},"body":{"components/ThankyouComponent.html":{}}}],["this.name",{"_index":524,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.name.reset",{"_index":536,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.password",{"_index":845,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.password.value",{"_index":857,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.passwordconfirm",{"_index":1065,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.route.queryparammap.pipe",{"_index":1118,"title":{},"body":{"components/ThankyouComponent.html":{}}}],["this.route.snapshot.queryparams[message",{"_index":1121,"title":{},"body":{"components/ThankyouComponent.html":{}}}],["this.router.navigate(['/home",{"_index":993,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigate(['/tyu",{"_index":533,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.routerservice.navigate(['/home",{"_index":331,"title":{},"body":{"injectables/AppEffects.html":{}}}],["this.setqueryparammap(initialparams",{"_index":186,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["this.store.dispatch(appactions.login",{"_index":858,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.store.dispatch(appactions.logout",{"_index":992,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.store.pipe(select(fromstate.selectactiveuserstate",{"_index":1055,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.store.pipe(select(fromstore.getuserprofile",{"_index":848,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["this.subject.asobservable",{"_index":175,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["this.subject.next(converttoparammap(params",{"_index":187,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{}}}],["this.username",{"_index":843,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.username.value",{"_index":856,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userp",{"_index":1051,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userp.user.password",{"_index":1059,"title":{},"body":{"components/RegisterComponent.html":{}}}],["those",{"_index":290,"title":{},"body":{"injectables/AppEffects.html":{}}}],["through",{"_index":112,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["throughout",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":1457,"title":{},"body":{"index.html":{}}}],["time/app.component",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["time/app.effects",{"_index":400,"title":{},"body":{"modules/AppModule.html":{},"modules/IamModule.html":{}}}],["time/components/actions/login.action",{"_index":212,"title":{},"body":{"interfaces/ActiveUserState.html":{}}}],["time/components/constants/variables.constant",{"_index":1050,"title":{},"body":{"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{}}}],["time/components/git.service",{"_index":1048,"title":{},"body":{"components/RegisterComponent.html":{}}}],["time/components/index",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppEffects.html":{},"modules/AppModule.html":{},"injectables/LoginService.html":{},"guards/ThankyouResolver.html":{}}}],["time/components/log.service",{"_index":82,"title":{},"body":{"components/AboutComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"injectables/GitService.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["time/in",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["time/login.service",{"_index":345,"title":{},"body":{"injectables/AppEffects.html":{}}}],["time/models/profiles.model",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{}}}],["time/models/user.model",{"_index":346,"title":{},"body":{"injectables/AppEffects.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["time/routes/main.routes",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["time/state/auth.state",{"_index":765,"title":{},"body":{"modules/IamModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["time/state/index",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["tips",{"_index":1390,"title":{},"body":{"index.html":{}}}],["title",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"interfaces/IProfile.html":{},"miscellaneous/variables.html":{}}}],["todo",{"_index":913,"title":{},"body":{"injectables/LoginService.html":{}}}],["tools",{"_index":1476,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["top",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["topics",{"_index":1433,"title":{},"body":{"index.html":{}}}],["topmargin",{"_index":263,"title":{},"body":{"components/AppComponent.html":{}}}],["transforming",{"_index":916,"title":{},"body":{"injectables/LoginService.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["tried",{"_index":704,"title":{},"body":{"components/HomeComponent.html":{}}}],["true",{"_index":239,"title":{},"body":{"interfaces/ActiveUserState.html":{},"modules/AppModule.html":{},"injectables/GitService.html":{},"injectables/InMemoryDataService.html":{},"injectables/Logger.html":{},"components/RegisterComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trying",{"_index":712,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["ts",{"_index":1340,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"interfaces/ActiveUserState.html":{},"components/AppComponent.html":{},"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"injectables/GitService.html":{},"components/HomeComponent.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IProfile.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"components/ThankyouComponent.html":{},"guards/ThankyouResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":241,"title":{},"body":{"interfaces/ActiveUserState.html":{},"components/NavbarComponent.html":{},"miscellaneous/variables.html":{}}}],["understand",{"_index":1294,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["undestand",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["unique",{"_index":864,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":1382,"title":{},"body":{"index.html":{}}}],["unstage",{"_index":1412,"title":{},"body":{"index.html":{}}}],["untracked",{"_index":1405,"title":{},"body":{"index.html":{}}}],["up",{"_index":552,"title":{},"body":{"components/ContactComponent.html":{},"index.html":{}}}],["update",{"_index":1399,"title":{},"body":{"index.html":{}}}],["updated",{"_index":1420,"title":{},"body":{"index.html":{}}}],["upfront",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["upon",{"_index":722,"title":{},"body":{"components/HomeComponent.html":{}}}],["url",{"_index":743,"title":{},"body":{"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/LoginService.html":{}}}],["use",{"_index":161,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":274,"title":{},"body":{"injectables/AppEffects.html":{},"index.html":{}}}],["user",{"_index":202,"title":{},"body":{"interfaces/ActiveUserState.html":{},"components/ContactComponent.html":{},"injectables/GitService.html":{},"interfaces/IDetails.html":{},"interfaces/IPrincipal.html":{},"interfaces/IUser.html":{},"interfaces/IUserProfile.html":{},"injectables/InMemoryDataService.html":{},"injectables/LoginService.html":{},"injectables/MysqlserviceService.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["user(user",{"_index":1052,"title":{},"body":{"components/RegisterComponent.html":{}}}],["user.user",{"_index":987,"title":{},"body":{"components/NavbarComponent.html":{}}}],["user.user.email",{"_index":934,"title":{},"body":{"injectables/LoginService.html":{},"components/RegisterComponent.html":{}}}],["userloggedin",{"_index":974,"title":{},"body":{"components/NavbarComponent.html":{}}}],["username",{"_index":817,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{}}}],["username.valid",{"_index":861,"title":{},"body":{"components/LoginComponent.html":{}}}],["userp",{"_index":1025,"title":{},"body":{"components/RegisterComponent.html":{}}}],["userprincipal",{"_index":855,"title":{},"body":{"components/LoginComponent.html":{}}}],["userprofile",{"_index":198,"title":{},"body":{"interfaces/ActiveUserState.html":{},"miscellaneous/variables.html":{}}}],["userprofile1",{"_index":1174,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userstate",{"_index":216,"title":{},"body":{"interfaces/ActiveUserState.html":{},"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["uses",{"_index":1328,"title":{},"body":{"index.html":{}}}],["using",{"_index":294,"title":{},"body":{"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/PersonComponent.html":{}}}],["usually",{"_index":699,"title":{},"body":{"components/HomeComponent.html":{}}}],["utility",{"_index":1089,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["v",{"_index":1360,"title":{},"body":{"index.html":{}}}],["v1.0",{"_index":1395,"title":{},"body":{"index.html":{}}}],["valid.required",{"_index":563,"title":{},"body":{"components/ContactComponent.html":{},"components/RegisterComponent.html":{}}}],["valid[required",{"_index":562,"title":{},"body":{"components/ContactComponent.html":{},"components/RegisterComponent.html":{}}}],["validating",{"_index":492,"title":{},"body":{"components/ContactComponent.html":{}}}],["validators",{"_index":520,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{}}}],["validators.email",{"_index":508,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{}}}],["validators.maxlength(50",{"_index":510,"title":{},"body":{"components/ContactComponent.html":{}}}],["validators.maxlength(max_user_length",{"_index":844,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.required",{"_index":504,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{}}}],["value",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"components/FooterComponent.html":{},"injectables/GitService.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":530,"title":{},"body":{"components/ContactComponent.html":{}}}],["var",{"_index":123,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["variable",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/ActiveUserState.html":{},"coverage.html":{}}}],["variables",{"_index":1500,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variant",{"_index":636,"title":{},"body":{"components/FooterComponent.html":{}}}],["various",{"_index":1235,"title":{},"body":{"index.html":{}}}],["vasu",{"_index":103,"title":{},"body":{"components/AboutComponent.html":{}}}],["verbose",{"_index":1359,"title":{},"body":{"index.html":{}}}],["version",{"_index":1226,"title":{},"body":{"index.html":{}}}],["via",{"_index":1384,"title":{},"body":{"index.html":{}}}],["view",{"_index":585,"title":{},"body":{"components/ErrorpageComponent.html":{},"index.html":{}}}],["visualization",{"_index":1000,"title":{},"body":{"components/PersonComponent.html":{}}}],["visualizes",{"_index":1005,"title":{},"body":{"components/PersonComponent.html":{}}}],["void",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{},"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"components/ContactComponent.html":{},"components/ErrorpageComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"injectables/Logger.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PersonComponent.html":{},"components/RegisterComponent.html":{},"components/ThankyouComponent.html":{}}}],["wallaby",{"_index":1480,"title":{},"body":{"index.html":{}}}],["warn",{"_index":787,"title":{},"body":{"injectables/Logger.html":{}}}],["warn(msg",{"_index":798,"title":{},"body":{"injectables/Logger.html":{}}}],["way",{"_index":303,"title":{},"body":{"injectables/AppEffects.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["we'll",{"_index":557,"title":{},"body":{"components/ContactComponent.html":{},"components/RegisterComponent.html":{}}}],["we\\'ll",{"_index":583,"title":{},"body":{"components/ContactComponent.html":{},"components/RegisterComponent.html":{}}}],["wealthy",{"_index":692,"title":{},"body":{"components/HomeComponent.html":{}}}],["web",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["webpack",{"_index":1289,"title":{},"body":{"index.html":{}}}],["website",{"_index":609,"title":{},"body":{"components/FooterComponent.html":{}}}],["welcome",{"_index":1070,"title":{},"body":{"components/RegisterComponent.html":{}}}],["well",{"_index":1467,"title":{},"body":{"index.html":{}}}],["went",{"_index":1444,"title":{},"body":{"index.html":{}}}],["whether",{"_index":201,"title":{},"body":{"interfaces/ActiveUserState.html":{},"components/NavbarComponent.html":{},"miscellaneous/variables.html":{}}}],["width",{"_index":576,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["width:100",{"_index":734,"title":{},"body":{"components/HomeComponent.html":{}}}],["wisely",{"_index":721,"title":{},"body":{"components/HomeComponent.html":{}}}],["wish",{"_index":1408,"title":{},"body":{"index.html":{}}}],["within",{"_index":591,"title":{},"body":{"components/ErrorpageComponent.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":1324,"title":{},"body":{"index.html":{}}}],["work",{"_index":705,"title":{},"body":{"components/HomeComponent.html":{}}}],["worker",{"_index":1492,"title":{},"body":{"index.html":{}}}],["working",{"_index":1403,"title":{},"body":{"index.html":{}}}],["works",{"_index":697,"title":{},"body":{"components/HomeComponent.html":{}}}],["workspace",{"_index":1303,"title":{},"body":{"index.html":{}}}],["write",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["writing",{"_index":1325,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":173,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"classes/ActivatedRouteStub-1.html":{},"injectables/LoginService.html":{}}}],["zen",{"_index":653,"title":{},"body":{"injectables/GitService.html":{}}}],["zone.js",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/about/about.component.ts\n\n\n    \n        Description\n    \n    \n        About page component\n\nThis should display information about the authors and contributors of the SPA.\nFor more clarity, you should be aware about binding and component interaction, to undestand how\nthe information is being\npassed.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./about.component.css\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                description\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    descriptionStr\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/about/about.component.ts:55\n                            \n                        \n\n                \n                    \n                            Basic initialization constructor that includes\na basic console logging service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Logger service end point.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/about/about.component.ts:84\n                \n            \n\n\n            \n                \n                    The {OnInit} hook method.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/about/about.component.ts:24\n                            \n                        \n\n                \n                    \n                        It is a static string variable that is initalized with basic information about\n the context.\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        descriptionStr\n                    \n                \n\n                \n                    \n                        getdescriptionStr()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/about/about.component.ts:70\n                                \n                            \n                    \n                        \n                                Getter method for the static string.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setdescriptionStr(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/about/about.component.ts:77\n                                \n                            \n                    \n                        \n                                Setter method for the #description\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { IProfile } from '@free-time/models/profiles.model';\nimport { Logger } from '@free-time/components/log.service';\n\n/**\n * About page component\n * \n * This should display information about the authors and contributors of the SPA.\n * For more clarity, you should be aware about binding and component interaction, to undestand how\n * the information is being\n * passed.\n * \n */\n@Component({\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  /**\n * It is a static string variable that is initalized with basic information about\n   * the context.\n   */\n  private description: string;\n\n\n  /**\n   * @ignore\n   */\n  public profiles: IProfile[] = [\n    {\n      title: 'Software Engineer',\n      subTitle: ' Lead 1',\n      description: 'I am Saurabh',\n      imageUrl: '../../assets/images/ss.jpg',\n      linkedIn: '',\n      giturl: ''\n    },\n    {\n      title: 'Software Engineer',\n      subTitle: 'Lead 2',\n      description: 'I am Bhawna',\n      imageUrl: '../../assets/images/bb.jpg',\n      linkedIn: '',\n      giturl: ''\n    },\n    {\n      title: 'Software Engineer',\n      subTitle: 'Lead 3',\n      description: 'I am Vasu',\n      imageUrl: '../../assets/images/1.png',\n      linkedIn: '',\n      giturl: ''\n    }\n  ];\n\n  /**\n   * Basic initialization constructor that includes\n   * a basic console logging service.\n   * @param logger Logger service end point.\n   */\n  constructor(private logger: Logger) {\n    this.description = 'A short introduction to the about page, which can be moderated later'\n                        + ' through a service or any other source.';\n  }\n\n  /**\n   * Getter method for the static string.\n   */\n  get descriptionStr(): string {\n    return this.description;\n  }\n\n  /**\n   * Setter method for the {@link AboutComponent #description}\n   */\n  set descriptionStr(value: string) {\n    this.description = value;\n  }\n\n  /**\n   * The {OnInit} hook method.\n   */\n  ngOnInit() {\n    this.logger.log(' ngOnInit called for AboutComponent.');\n  }\n\n}\n\n    \n\n    \n        \n  About Us\n  \n  {{ descriptionStr }}\n\n  \n    \n      \n  \n\n\n\n    \n\n    \n                \n                    ./about.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  About Us    {{ descriptionStr }}              '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorpageComponent', 'selector': 'app-errorpage'},{'name': 'FooterComponent', 'selector': 'ft-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'ft-navbar'},{'name': 'PersonComponent', 'selector': 'ft-person'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ThankyouComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActivatedRouteStub.html":{"url":"classes/ActivatedRouteStub.html","title":"class - ActivatedRouteStub","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActivatedRouteStub\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/activatedroute-stub.ts\n        \n\n            \n                Description\n            \n            \n                An ActivateRoute test double with a paramMap observable.\nUse the setParamMap() method to add the next paramMap value.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                queryParamMap\n                            \n                            \n                                    Private\n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setQueryParamMap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(initialParams?: Params)\n                    \n                \n                        \n                            \n                                Defined in src/app/activatedroute-stub.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initialParams\n                                                  \n                                                        \n                                                                        Params\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            queryParamMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.subject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/activatedroute-stub.ts:17\n                            \n                        \n\n                \n                    \n                        The mock paramMap observable \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReplaySubject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/activatedroute-stub.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setQueryParamMap\n                        \n                        \n                    \n                \n            \n            \n                \nsetQueryParamMap(params?: Params)\n                \n            \n\n\n            \n                \n                    Defined in src/app/activatedroute-stub.ts:20\n                \n            \n\n\n            \n                \n                    Set the paramMap observables's next value \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Params\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {  ParamMap, Params, convertToParamMap } from '@angular/router';\nimport { ReplaySubject } from 'rxjs';\n\n/**\n * An ActivateRoute test double with a `paramMap` observable.\n * Use the `setParamMap()` method to add the next `paramMap` value.\n */\nexport class ActivatedRouteStub {\n\n  private subject = new ReplaySubject();\n\n  constructor(initialParams?: Params) {\n    this.setQueryParamMap(initialParams);\n  }\n\n  /** The mock paramMap observable */\n  readonly queryParamMap = this.subject.asObservable();\n\n  /** Set the paramMap observables's next value */\n  setQueryParamMap(params?: Params) {\n    this.subject.next(convertToParamMap(params));\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActivatedRouteStub-1.html":{"url":"classes/ActivatedRouteStub-1.html","title":"class - ActivatedRouteStub-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActivatedRouteStub\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/activatedroute-stub.ts\n        \n\n            \n                Description\n            \n            \n                An ActivateRoute test double with a paramMap observable.\nUse the setParamMap() method to add the next paramMap value.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                queryParamMap\n                            \n                            \n                                    Private\n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setQueryParamMap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(initialParams?: Params)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/activatedroute-stub.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initialParams\n                                                  \n                                                        \n                                                                        Params\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            queryParamMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.subject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/activatedroute-stub.ts:17\n                            \n                        \n\n                \n                    \n                        The mock paramMap observable \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReplaySubject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/activatedroute-stub.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setQueryParamMap\n                        \n                        \n                    \n                \n            \n            \n                \nsetQueryParamMap(params?: Params)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/activatedroute-stub.ts:20\n                \n            \n\n\n            \n                \n                    Set the paramMap observables's next value \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Params\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {  ParamMap, Params, convertToParamMap } from '@angular/router';\nimport { ReplaySubject } from 'rxjs';\n\n/**\n * An ActivateRoute test double with a `paramMap` observable.\n * Use the `setParamMap()` method to add the next `paramMap` value.\n */\nexport class ActivatedRouteStub {\n\n  private subject = new ReplaySubject();\n\n  constructor(initialParams?: Params) {\n    this.setQueryParamMap(initialParams);\n  }\n\n  /** The mock paramMap observable */\n  readonly queryParamMap = this.subject.asObservable();\n\n  /** Set the paramMap observables's next value */\n  setQueryParamMap(params?: Params) {\n    this.subject.next(convertToParamMap(params));\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActiveUserState.html":{"url":"interfaces/ActiveUserState.html","title":"interface - ActiveUserState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActiveUserState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/auth.state.ts\n        \n\n            \n                Description\n            \n            \n                Representation of application state: Predictable state.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        loggedIn\n                                \n                                \n                                            Optional\n                                        userProfile\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loggedIn\n                                    \n                                \n                                \n                                    \n                                        loggedIn:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable to denote whether the user has logged in.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userProfile\n                                    \n                                \n                                \n                                    \n                                        userProfile:         IUserProfile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IUserProfile\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The user information.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IUserProfile } from '../models/user.model';\nimport { createReducer, on, Action } from '@ngrx/store';\n\nimport * as fromConstants from '../components/constants/variables.constant';\nimport * as LoginActions from '@free-time/components/actions/login.action';\n\n/**\n * Active user state information.\n */\nexport const activeAuthStateKey = 'userState';\n\n/**\n * Representation of application state: Predictable state.\n */\nexport interface ActiveUserState {\n  /**\n   * A variable to denote whether the user has logged in.\n   */\n  loggedIn: boolean;\n  /**\n   * The user information.\n   */\n  userProfile?: IUserProfile;\n}\n\nexport const initialAppState: ActiveUserState  = {\n  userProfile: fromConstants.BLANK_USER_PROFILE,\n  loggedIn: false\n};\n\n\n/**\n * The login reducer.\n * Each reducer function takes the latest Action dispatched, the current state,\n * and determines whether to return a newly modified state or the original state.\n */\nconst loginReducer =\n  createReducer(\n    initialAppState,\n    on(LoginActions.login, (state, {principal}) => {\n      return {\n        /** Returns the new state for the Active User State. */\n        loggedIn: false,\n        userProfile: {\n          user: principal,\n          details: null,\n          profile: null\n        }\n      }\n    }),\n    on(\n      LoginActions.loginSuccess, (state, { userProfile }) => {\n        return {\n            ...state,\n            loggedIn: true,\n            userProfile\n        };\n      }),\n      on(LoginActions.logout, (state) => {\n        return {\n          ...state,\n          loggedIn: false,\n          userProfile: undefined\n        }\n      })\n  );\n\n\nexport function reducer(activeState: ActiveUserState | undefined, action: Action) {\n  return loginReducer(activeState, action);\n}\n\nexport const getUserProfile = (state: ActiveUserState) => state.userProfile;\nexport const getLoggedIn = (state:ActiveUserState) => state.loggedIn;\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        The angular-bootstrapped class\nEvery root component connects Component Hierarchy with Page DOM.\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Logger } from '@free-time/components/index';\nimport { Store }  from '@ngrx/store';\n\nimport * as fromStore from '@free-time/state/index';\n\n/**\n * The angular-bootstrapped class\n * Every root component connects Component Hierarchy with Page DOM.\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  constructor(private logger: Logger, private store: Store) {\n    this.logger.log(' AppComponent created.');\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n  \n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .topMargin {\n  margin-top: 2em;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorpageComponent', 'selector': 'app-errorpage'},{'name': 'FooterComponent', 'selector': 'ft-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'ft-navbar'},{'name': 'PersonComponent', 'selector': 'ft-person'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ThankyouComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppEffects.html":{"url":"injectables/AppEffects.html","title":"injectable - AppEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.effects.ts\n        \n\n            \n                Description\n            \n            \n                Key concepts\n\nEffects when used along with Store, decrease the responsibility of the component\nEffects isolate side effects from components, allowing for more pure components that select state and dispatch actions.\nEffects are long-running services that listen to an observable of every action dispatched from the Store.\nEffects filter those actions based on the type of action they are interested in. This is done by using an operator.\nEffects perform tasks, which are synchronous or asynchronous and return a new action.Effects when used along with Store, decrease the responsibility of the component.\nRead this\n Effects provide a way to interact with services and isolate them from the components.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                login$\n                            \n                            \n                                loginSuccess$\n                            \n                            \n                                logout$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, logger: AppActions.Logger, loginService: LoginService, routerService: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.effects.ts:63\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        AppActions.Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routerService\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(AppActions.login),\n      map(action => action.principal),\n      exhaustMap((principal: IPrincipal) =>\n        this.loginService.loginUser(principal.email, principal.password).pipe(\n          map((userProfile) => AppActions.loginSuccess({userProfile})),\n          catchError(message => of({ type: '[Login Failure] Login', payload: message }))\n        )\n      )\n    )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.effects.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginSuccess$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(AppActions.loginSuccess),\n        tap(() => this.routerService.navigate(['/home']))\n      ),\n    { dispatch: false }\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.effects.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(AppActions.logout),\n      map(action => action.userName),\n      exhaustMap((userName: string) =>\n        this.loginService.logoutUser(userName).pipe(\n          map( (status) => {\n            this.logger.log( ' Error: ' + status)\n          })\n        )\n      )\n    ),\n    { dispatch: false }\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.effects.ts:50\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType, ROOT_EFFECTS_INIT } from '@ngrx/effects';\nimport * as AppActions from '@free-time/components/index';\nimport { LoginService } from '@free-time/login.service';\nimport { IPrincipal } from '@free-time/models/user.model';\nimport { map, catchError, tap, exhaustMap } from 'rxjs/operators';\nimport { of, Observable } from 'rxjs';\n\nimport { Router } from '@angular/router';\nimport { Action } from '@ngrx/store';\n\n\n/**\n * Key concepts\n * - Effects when used along with Store, decrease the responsibility of the component\n * - Effects isolate side effects from components, allowing for more pure components that select state and dispatch actions.\n * - Effects are long-running services that listen to an observable of every action dispatched from the Store.\n * - Effects filter those actions based on the type of action they are interested in. This is done by using an operator.\n * - Effects perform tasks, which are synchronous or asynchronous and return a new action.\n * Effects when used along with Store, decrease the responsibility of the component.\n * Read this\n *  Effects provide a way to interact with services and isolate them from the components.\n */\n@Injectable()\nexport class AppEffects {\n\n\n  login$: Observable = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AppActions.login),\n      map(action => action.principal),\n      exhaustMap((principal: IPrincipal) =>\n        this.loginService.loginUser(principal.email, principal.password).pipe(\n          map((userProfile) => AppActions.loginSuccess({userProfile})),\n          catchError(message => of({ type: '[Login Failure] Login', payload: message }))\n        )\n      )\n    )\n  );\n\n  loginSuccess$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(AppActions.loginSuccess),\n        tap(() => this.routerService.navigate(['/home']))\n      ),\n    { dispatch: false }\n  );\n  \n  logout$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AppActions.logout),\n      map(action => action.userName),\n      exhaustMap((userName: string) =>\n        this.loginService.logoutUser(userName).pipe(\n          map( (status) => {\n            this.logger.log( ' Error: ' + status)\n          })\n        )\n      )\n    ),\n    { dispatch: false }\n  );\n\n\n  // init$ = createEffect(() =>\n  //   this.actions$.pipe(\n  //     ofType(ROOT_EFFECTS_INIT),\n  //     tap(() => {\n  //       console.log(' INIT called. ');\n  //     })\n  //   )\n  // );\n\n\n  constructor(\n    private actions$: Actions,\n    private logger: AppActions.Logger,\n    private loginService: LoginService,\n    private routerService: Router) {\n    this.logger.log(' AppEffects called.');\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nContactComponent\n\nContactComponent\n\nAppModule -->\n\nContactComponent->AppModule\n\n\n\n\n\nErrorpageComponent\n\nErrorpageComponent\n\nAppModule -->\n\nErrorpageComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPersonComponent\n\nPersonComponent\n\nAppModule -->\n\nPersonComponent->AppModule\n\n\n\nAppModule -->\n\nPersonComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nThankyouComponent\n\nThankyouComponent\n\nAppModule -->\n\nThankyouComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nIamModule\n\nIamModule\n\nAppModule -->\n\nIamModule->AppModule\n\n\n\n\n\nLogger\n\nLogger\n\nAppModule -->\n\nLogger->AppModule\n\n\n\n\n\nMysqlserviceService\n\nMysqlserviceService\n\nAppModule -->\n\nMysqlserviceService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n            Description\n        \n        \n            \nThe root module to be bootstrapped by angular for more information\nlook here\n\n\nNgModules are the compilation context for all the components\ndeclared, defined for consumption.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            ContactComponent\n                        \n                        \n                            ErrorpageComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            PersonComponent\n                        \n                        \n                            PersonComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            ThankyouComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            Logger\n                        \n                        \n                            MysqlserviceService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IamModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from '@free-time/app.component';\n\n\n\n\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\n//import { InMemoryDataService } from '@free-time/in-memory-data.service';\nimport { MysqlserviceService } from './services/mysqlservice.service';\nimport { StoreModule } from '@ngrx/store';\n\nimport { EffectsModule } from '@ngrx/effects';\nimport { AppEffects } from '@free-time/app.effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { appRoutes } from '@free-time/routes/main.routes';\n\nimport {\n  AboutComponent, ContactComponent,\n  Logger, HomeComponent,\n  ErrorpageComponent, PersonComponent,\n  NavbarComponent, ThankyouComponent,\n  FooterComponent, \n  LoginComponent,\n  RegisterComponent } from '@free-time/components/index';\n\n\n\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { IamModule } from './iam/iam.module';\nimport {metaReducers, reducers} from '@free-time/state/index';\n\n/**\n * \n * The root module to be bootstrapped by angular for more information\n * look here\n * \n * \n * NgModules are the compilation context for all the components\n * declared, defined for consumption.\n * \n */\n@NgModule({\n  /**\n   * Components declared in this module.\n   * Components should be declared in only one NgModule class.\n   */\n  declarations: [\n    RegisterComponent,\n    AppComponent,\n    NavbarComponent,\n    AboutComponent,\n    PersonComponent,\n    HomeComponent,\n    ContactComponent,\n    ErrorpageComponent,\n    PersonComponent,\n    NavbarComponent,\n    ThankyouComponent,\n    FooterComponent,\n    LoginComponent,\n    FooterComponent,\n    RegisterComponent\n  ],\n  providers: [\n    Logger,\n    MysqlserviceService\n    /* Did not add a provider entry for login.service as the providedIn prop is set in @injectable. */\n  ],\n  /**\n   * For browser specific functionality you need this module.\n   */\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    FormsModule,\n    FontAwesomeModule,\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\n    // and returns simulated server responses.\n    // Remove it when a real server is ready to receive requests.\n    /*\n    HttpClientInMemoryWebApiModule.forRoot(\n      InMemoryDataService, { dataEncapsulation: false, delay: 500 }\n    ),*/\n    RouterModule.forRoot(appRoutes, { enableTracing: true }),\n    HttpClientModule,\n    IamModule,\n    StoreModule.forRoot(reducers, {\n      metaReducers,\n      runtimeChecks: {\n        strictStateImmutability: true,\n        strictActionImmutability: true\n      }\n    }),\n    StoreDevtoolsModule.instrument({ maxAge: 25 }),\n    //EffectsModule.forRoot([AppEffects]),\n    StoreRouterConnectingModule.forRoot()\n  ],\n\n  /**\n   * Root component that is inserted in the index.html.\n   * Each component bootstrapped is root of its complete application components.\n   */\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n  constructor(private logger: Logger) {\n    this.logger.log(' AppModule initialised.');\n    // library.add(\n    //   faTwitter, faLinkedin,\n    //   faGit, faBlogger, faThumbsUp,\n    //   faThumbsDown, faAnchor, faSignInAlt,\n    //   faFacebook, faGoogle,\n    //   faSignOutAlt);\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactComponent.html":{"url":"components/ContactComponent.html","title":"component - ContactComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contact/contact.component.ts\n\n\n    \n        Description\n    \n    \n        \nReactive form to allow user to add details to be allowed to contacted.\nsee this link\nReactive form is built around observable streams.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact\n            \n\n            \n                styleUrls\n                ./contact.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                comment\n                            \n                            \n                                    Public\n                                contactForm\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isEmailValid\n                            \n                            \n                                    Public\n                                isNameValid\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onReset\n                            \n                            \n                                    Public\n                                onSubmission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contact/contact.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isEmailValid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEmailValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contact/contact.component.ts:88\n                \n            \n\n\n            \n                \n                    Function called as part of expression condition for Email input for class application.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isNameValid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isNameValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contact/contact.component.ts:76\n                \n            \n\n\n            \n                \n                    A declarative way of validating the Name is supplied and is correct to apply CSS using\nngClass.\nFor more information see\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contact/contact.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onReset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onReset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contact/contact.component.ts:64\n                \n            \n\n\n            \n                \n                    Resets the contact form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSubmission\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmission()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contact/contact.component.ts:51\n                \n            \n\n\n            \n                \n                    Function that is called when you submit the form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            comment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl('', [Validators.required])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contact/contact.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            contactForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contact/contact.component.ts:23\n                            \n                        \n\n                \n                    \n                        Group for the ContactForm.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl('', [Validators.required, Validators.email])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contact/contact.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl('', [Validators.required, Validators.maxLength(50)])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contact/contact.component.ts:29\n                            \n                        \n\n                \n                    \n                        Name - Input element that will store the name of the commentator.\nEmail - Email identification for the person sending in the contact, only for records.\nComments - Actual comment supplied.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, AbstractControl } from '@angular/forms';\nimport { Logger } from '@free-time/components/log.service';\nimport { Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n/**\n * \n * Reactive form to allow user to add details to be allowed to contacted.\n * see this link\n * Reactive form is built around observable streams.\n * \n * \n */\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n  /**\n   * Group for the ContactForm.\n   */\n  public contactForm: FormGroup;\n  /**\n   * Name - Input element that will store the name of the commentator.\n   * Email - Email identification for the person sending in the contact, only for records.\n   * Comments - Actual comment supplied.\n   */\n  public name: FormControl = new FormControl('', [Validators.required, Validators.maxLength(50)]);\n  public email: FormControl = new FormControl('', [Validators.required, Validators.email]);\n  public comment: FormControl = new FormControl('', [Validators.required]);\n\n  constructor(private logger: Logger, private route: ActivatedRoute, private router: Router) {\n    this.contactForm = new FormGroup({\n      comment: this.comment\n    });\n\n    this.contactForm.addControl('name', this.name);\n    this.contactForm.addControl('email', this.email);\n\n  }\n\n  ngOnInit() {\n    this.logger.log(' ngOnInit called for ContactComponent.');\n  }\n\n  /**\n   * Function that is called when you submit the form.\n   * @param value  string Value of form control elements binded in the form group.\n   */\n  public onSubmission(): void {\n    const values = this.contactForm.value;\n\n    this.logger.log(' Submit called from contactcomponent.');\n    this.logger.log(' Values: ' + JSON.stringify(values));\n    this.router.navigate(['/tyu'], {\n      queryParams: { message: 'Your message has been sent.' }\n    });\n  }\n\n  /**\n   * Resets the contact form.\n   */\n  public onReset(): void {\n    this.name.reset();\n    this.email.reset();\n    this.comment.reset();\n    this.contactForm.reset();\n  }\n\n  /**\n   * A declarative way of validating the Name is supplied and is correct to apply CSS using\n   * ngClass.\n   * For more information see\n   */\n  public isNameValid(): boolean {\n    const name: AbstractControl = this.contactForm.get('name');\n    if (name.touched) {\n      return name.invalid;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function called as part of expression condition for Email input for class application.\n   */\n  public isEmailValid(): boolean {\n    const email: AbstractControl = this.contactForm.get('email');\n\n    if (email.touched) {\n      return email.invalid;\n    }\n\n    return false;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        Contact Form\n        Some quick example text to build on the card title and make up the bulk of the card's\n          content.\n        \n      \n      \n\n      \n        \n          \n          What you would like us to address you as?\n        \n        \n          \n          We'll never share your email with anyone else.\n        \n\n        \n          \n        \n      \n      \n        \n          \n        \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./contact.component.css\n                \n                \n.ng-valid[required], .ng-valid.required  {\n  border-left: 5px solid #42A948; /* green */\n}\n\n.errorInput {\n  border-right: 4px solid red;\n}\n\nimg {\n  max-width: 305;\n  max-height: 180;\n  align-content: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Contact Form        Some quick example text to build on the card title and make up the bulk of the card\\'s          content.                                                      What you would like us to address you as?                                    We\\'ll never share your email with anyone else.                                                                                                              '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorpageComponent', 'selector': 'app-errorpage'},{'name': 'FooterComponent', 'selector': 'ft-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'ft-navbar'},{'name': 'PersonComponent', 'selector': 'ft-person'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ThankyouComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorpageComponent.html":{"url":"components/ErrorpageComponent.html","title":"component - ErrorpageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorpageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/errorpage/errorpage.component.ts\n\n\n    \n        Description\n    \n    \n        Error page component is a view that is meant for displaying error message for any\npossible scenario that cannot be handled within the parent view.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-errorpage\n            \n\n            \n                styleUrls\n                ./errorpage.component.css\n            \n\n\n\n            \n                templateUrl\n                ./errorpage.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/errorpage/errorpage.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/errorpage/errorpage.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Logger } from '@free-time/components/log.service';\n\n/**\n * Error page component is a view that is meant for displaying error message for any\n * possible scenario that cannot be handled within the parent view.\n */\n@Component({\n  selector: 'app-errorpage',\n  templateUrl: './errorpage.component.html',\n  styleUrls: ['./errorpage.component.css']\n})\nexport class ErrorpageComponent implements OnInit {\n\n  constructor(private logger: Logger) { }\n\n  ngOnInit() {\n    this.logger.log(' ngOnInit called for ErrorpageComponent');\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        ERROR:403 Page requested cannot be found.\n        \n        Please consult our help for more information.\n      \n    \n  \n\n    \n\n    \n                \n                    ./errorpage.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  ERROR:403 Page requested cannot be found.                Please consult our help for more information.            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorpageComponent', 'selector': 'app-errorpage'},{'name': 'FooterComponent', 'selector': 'ft-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'ft-navbar'},{'name': 'PersonComponent', 'selector': 'ft-person'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ThankyouComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorpageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/footer/footer.component.ts\n\n\n    \n        Description\n    \n    \n        Footer component shall contain the basic links to the website and with the appropriate\nbrand logos that can help identify the information.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ft-footer\n            \n\n            \n                styleUrls\n                ./footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faBlogger\n                            \n                            \n                                faGit\n                            \n                            \n                                faLinkedIn\n                            \n                            \n                                faTwitter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loggerService: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/footer/footer.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loggerService\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/footer/footer.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faBlogger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faBlogger\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/footer/footer.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faGit\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faGit\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/footer/footer.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faLinkedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faLinkedin\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/footer/footer.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faTwitter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faTwitter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/footer/footer.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Logger } from '@free-time/components/log.service';\nimport {faGit, faLinkedin, faTwitter, faBlogger} from '@fortawesome/free-brands-svg-icons';\n/**\n * Footer component shall contain the basic links to the website and with the appropriate\n * brand logos that can help identify the information.\n */\n@Component({\n  selector: 'ft-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n  faGit = faGit;\n  faLinkedIn = faLinkedin;\n  faBlogger = faBlogger;\n  faTwitter = faTwitter;\n\n  constructor(private loggerService: Logger) { }\n\n  ngOnInit() {\n    this.loggerService.log(' FooterComponent: OnInit called.');\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      All rights reserved. Copyright @ 2019\n    \n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./footer.component.css\n                \n                span#copyright\n{\n  font-family: cursive;\n  font-variant-caps: all-petite-caps;\n  font-size: small;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            All rights reserved. Copyright @ 2019                                                                  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorpageComponent', 'selector': 'app-errorpage'},{'name': 'FooterComponent', 'selector': 'ft-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'ft-navbar'},{'name': 'PersonComponent', 'selector': 'ft-person'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ThankyouComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GitService.html":{"url":"injectables/GitService.html","title":"injectable - GitService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GitService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/git.service.ts\n        \n\n            \n                Description\n            \n            \n                Singleton instance for the login service.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseGitURL\n                            \n                            \n                                headers\n                            \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getZen\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/git.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getZen\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getZen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/git.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseGitURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'zen'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/git.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/git.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    headers: new HttpHeaders({\n      'Content-Type':  'text/html,application/xhtml,application/xml',\n      'User-Agent': 'Firefox'\n    }),\n    reportProgress: true,\n    responseType: 'text' as 'json'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/git.service.ts:25\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport { Logger } from '@free-time/components/log.service';\nimport { tap, catchError } from 'rxjs/operators';\n\n\n/**\n * Singleton instance for the login service.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GitService {\n\n  private baseGitURL = 'zen';\n\n  constructor(private http: HttpClient, private logger: Logger) {\n\n  }\n\n  headers: any;\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'text/html,application/xhtml,application/xml',\n      'User-Agent': 'Firefox'\n    }),\n    reportProgress: true,\n    responseType: 'text' as 'json'\n  };\n\n\n  public getZen(): Observable {\n    return this.http.get(this.baseGitURL, this.httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        A basic component that shall have a background image (which we will generalize away from CSS)\nand have a header and title.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logService: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/home/home.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        body\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/home/home.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/home/home.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home/home.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Logger } from '@free-time/components/log.service';\n\n/**\n * A basic component that shall have a background image (which we will generalize away from CSS)\n * and have a header and title.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  @Input() title?: string;\n  @Input() body?: string;\n\n  constructor(private logService: Logger) { }\n\n  ngOnInit() {\n    this.logService.log(' Home Component: ' + 'ngOnInit called.');\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      Free.Time\n      \n        Some crave for the latest technologies, some crave for the knowledge -\n        free of syntax, some crave for a healthy mix of hands-on and wealthy\n        experience. In some way or the other, we all are handled by the inner\n        cravings and to decide what works for an individual, it is usually a\n        crowd copy that is employed. My friend just tried this, my friend just\n        tried that. It might work for some, but for manjority it is a futile\n        exercise. In one such new and spiritied efforts, we are trying to\n        collate our collective energies to learn and build a platform to share,\n        highlight, and advertise the knowledge we have accumulated, and to\n        wisely build upon our professional social presence.\n      \n      \n      @Free.Time\n    \n  \n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                @media screen and (max-width: 480px) {\n  .size-check {\n    display: none;\n  }\n  #intro {\n    min-height: 640px;\n    width:100%;\n  }\n}\n\n.dimCheck {\n  min-height: 640px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Free.Time              Some crave for the latest technologies, some crave for the knowledge -        free of syntax, some crave for a healthy mix of hands-on and wealthy        experience. In some way or the other, we all are handled by the inner        cravings and to decide what works for an individual, it is usually a        crowd copy that is employed. My friend just tried this, my friend just        tried that. It might work for some, but for manjority it is a futile        exercise. In one such new and spiritied efforts, we are trying to        collate our collective energies to learn and build a platform to share,        highlight, and advertise the knowledge we have accumulated, and to        wisely build upon our professional social presence.                  @Free.Time      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorpageComponent', 'selector': 'app-errorpage'},{'name': 'FooterComponent', 'selector': 'ft-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'ft-navbar'},{'name': 'PersonComponent', 'selector': 'ft-person'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ThankyouComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDetails.html":{"url":"interfaces/IDetails.html","title":"interface - IDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents the User details.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        gitProfile\n                                \n                                \n                                        googleProfile\n                                \n                                \n                                        subscribeToEmail\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Some about me description.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gitProfile\n                                    \n                                \n                                \n                                    \n                                        gitProfile:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    GIT profile url.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        googleProfile\n                                    \n                                \n                                \n                                    \n                                        googleProfile:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Google profile URL.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscribeToEmail\n                                    \n                                \n                                \n                                    \n                                        subscribeToEmail:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Subsciption to email.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IPrincipal {\n  /**\n   * Email, Registered user name for the user.\n   */\n  email: string;\n  /**\n   * Password\n   */\n  password: string;\n}\n\n/**\n * Represents the user entity.\n */\nexport interface IUser {\n  /**\n   * First name for the user.\n   */\n  name: string;\n  /**\n   * Last name for the user.\n   */\n  lastName: string;\n  /**\n   * Image URL.\n   */\n  imageUrl: string;\n}\n\n/**\n * Represents the User details.\n */\nexport interface IDetails {\n  /**\n   * Subsciption to email.\n   */\n  subscribeToEmail: number;\n  /**\n   * GIT profile url.\n   */\n  gitProfile: string;\n  /**\n   * Google profile URL.\n   */\n  googleProfile: string;\n  /**\n   * Some about me description.\n   */\n  description: string;\n}\n\n\n/**\n * Model class that specifies the New user profile information.\n */\nexport interface IUserProfile {\n  /**\n   * User information\n   */\n  user: IPrincipal;\n\n  /**\n   * User information\n   */\n  profile: IUser;\n\n  /**\n   * User details\n   */\n  details: IDetails;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPrincipal.html":{"url":"interfaces/IPrincipal.html","title":"interface - IPrincipal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPrincipal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n            \n                Description\n            \n            \n                This file is meant to define the basic user structure that will be consumed in the application.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Email, Registered user name for the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Password\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IPrincipal {\n  /**\n   * Email, Registered user name for the user.\n   */\n  email: string;\n  /**\n   * Password\n   */\n  password: string;\n}\n\n/**\n * Represents the user entity.\n */\nexport interface IUser {\n  /**\n   * First name for the user.\n   */\n  name: string;\n  /**\n   * Last name for the user.\n   */\n  lastName: string;\n  /**\n   * Image URL.\n   */\n  imageUrl: string;\n}\n\n/**\n * Represents the User details.\n */\nexport interface IDetails {\n  /**\n   * Subsciption to email.\n   */\n  subscribeToEmail: number;\n  /**\n   * GIT profile url.\n   */\n  gitProfile: string;\n  /**\n   * Google profile URL.\n   */\n  googleProfile: string;\n  /**\n   * Some about me description.\n   */\n  description: string;\n}\n\n\n/**\n * Model class that specifies the New user profile information.\n */\nexport interface IUserProfile {\n  /**\n   * User information\n   */\n  user: IPrincipal;\n\n  /**\n   * User information\n   */\n  profile: IUser;\n\n  /**\n   * User details\n   */\n  details: IDetails;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProfile.html":{"url":"interfaces/IProfile.html","title":"interface - IProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/profiles.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        giturl\n                                \n                                \n                                        imageUrl\n                                \n                                \n                                        linkedIn\n                                \n                                \n                                        subTitle\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        giturl\n                                    \n                                \n                                \n                                    \n                                        giturl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrl\n                                    \n                                \n                                \n                                    \n                                        imageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        linkedIn\n                                    \n                                \n                                \n                                    \n                                        linkedIn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subTitle\n                                    \n                                \n                                \n                                    \n                                        subTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IProfile {\n  title: string;\n  subTitle: string;\n  description: string;\n  imageUrl: string;\n  linkedIn: string;\n  giturl: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents the user entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        imageUrl\n                                \n                                \n                                        lastName\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrl\n                                    \n                                \n                                \n                                    \n                                        imageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Image URL.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Last name for the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    First name for the user.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IPrincipal {\n  /**\n   * Email, Registered user name for the user.\n   */\n  email: string;\n  /**\n   * Password\n   */\n  password: string;\n}\n\n/**\n * Represents the user entity.\n */\nexport interface IUser {\n  /**\n   * First name for the user.\n   */\n  name: string;\n  /**\n   * Last name for the user.\n   */\n  lastName: string;\n  /**\n   * Image URL.\n   */\n  imageUrl: string;\n}\n\n/**\n * Represents the User details.\n */\nexport interface IDetails {\n  /**\n   * Subsciption to email.\n   */\n  subscribeToEmail: number;\n  /**\n   * GIT profile url.\n   */\n  gitProfile: string;\n  /**\n   * Google profile URL.\n   */\n  googleProfile: string;\n  /**\n   * Some about me description.\n   */\n  description: string;\n}\n\n\n/**\n * Model class that specifies the New user profile information.\n */\nexport interface IUserProfile {\n  /**\n   * User information\n   */\n  user: IPrincipal;\n\n  /**\n   * User information\n   */\n  profile: IUser;\n\n  /**\n   * User details\n   */\n  details: IDetails;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserProfile.html":{"url":"interfaces/IUserProfile.html","title":"interface - IUserProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n            \n                Description\n            \n            \n                Model class that specifies the New user profile information.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        details\n                                \n                                \n                                        profile\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:         IDetails\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDetails\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User details\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profile\n                                    \n                                \n                                \n                                    \n                                        profile:         IUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IUser\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User information\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         IPrincipal\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPrincipal\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User information\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IPrincipal {\n  /**\n   * Email, Registered user name for the user.\n   */\n  email: string;\n  /**\n   * Password\n   */\n  password: string;\n}\n\n/**\n * Represents the user entity.\n */\nexport interface IUser {\n  /**\n   * First name for the user.\n   */\n  name: string;\n  /**\n   * Last name for the user.\n   */\n  lastName: string;\n  /**\n   * Image URL.\n   */\n  imageUrl: string;\n}\n\n/**\n * Represents the User details.\n */\nexport interface IDetails {\n  /**\n   * Subsciption to email.\n   */\n  subscribeToEmail: number;\n  /**\n   * GIT profile url.\n   */\n  gitProfile: string;\n  /**\n   * Google profile URL.\n   */\n  googleProfile: string;\n  /**\n   * Some about me description.\n   */\n  description: string;\n}\n\n\n/**\n * Model class that specifies the New user profile information.\n */\nexport interface IUserProfile {\n  /**\n   * User information\n   */\n  user: IPrincipal;\n\n  /**\n   * User information\n   */\n  profile: IUser;\n\n  /**\n   * User details\n   */\n  details: IDetails;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IamModule.html":{"url":"modules/IamModule.html","title":"module - IamModule","body":"\n                   \n\n\n\n\n    Modules\n    IamModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/iam/iam.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Defined a module for IAM activity.\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AppEffects } from '@free-time/app.effects';\nimport * as fromStore from '@free-time/state/auth.state';\n\n/**\n * Defined a module for IAM activity.\n */\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(fromStore.activeAuthStateKey, fromStore.reducer),\n    EffectsModule.forRoot([AppEffects]),\n    StoreDevtoolsModule.instrument({ maxAge: 25 })\n  ]\n})\n\nexport class IamModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InMemoryDataService.html":{"url":"injectables/InMemoryDataService.html","title":"injectable - InMemoryDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InMemoryDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/in-memory-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDb\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createDb\n                        \n                        \n                    \n                \n            \n            \n                \ncreateDb()\n                \n            \n\n\n            \n                \n                    Defined in src/app/in-memory-data.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         { login: any; }\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IUserProfile } from './models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InMemoryDataService {\n  createDb() {\n    const login: IUserProfile = {\n      user: {\n        email: 'saurabh777@gmail.com',\n        password: 'ABCDEF123456',\n      },\n      profile: {\n        name: 'Saurabh',\n        lastName: 'Sharma',\n        imageUrl: '',\n      },\n      details: {\n        subscribeToEmail: 1,\n        gitProfile: 'https://www.github.com/samarthya',\n        googleProfile: '',\n        description: 'This lad is still learning.'\n      }\n    };\n    const logout:  boolean = true;\n    return { login };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/log.service.ts\n        \n\n            \n                Description\n            \n            \n                A place holder class to simplify logging to console at the moment.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _debugMode\n                            \n                            \n                                    Private\n                                dateInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    debugMode\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/log.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(msg: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/log.service.ts:31\n                \n            \n\n\n            \n                \n                    Error logging capability.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Message to be looged.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(msg: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/log.service.ts:21\n                \n            \n\n\n            \n                \n                    Simple logging message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Message to be logged.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(msg: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/log.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _debugMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/log.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dateInstance\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/log.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        debugMode\n                    \n                \n\n                \n                    \n                        getdebugMode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/log.service.ts:43\n                                \n                            \n\n                \n                    \n                        setdebugMode(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/log.service.ts:47\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\n\n/**\n * A place holder class to simplify logging to console at the moment.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class Logger {\n  private dateInstance: Date = new Date();\n  private _debugMode = true;\n\n  constructor( ) {\n\n  }\n\n  /**\n   * Simple logging message.\n   * @param msg Message to be logged.\n   */\n  log(msg: any) {\n    if (this.debugMode === true) {\n       console.log(this.dateInstance.getDate() + ' : ' + msg);\n      }\n  }\n\n  /**\n   * Error logging capability.\n   * @param msg Message to be looged.\n   */\n  error(msg: any) {\n    if (this.debugMode === true) {\n      console.error(this.dateInstance.getDate() + ' : ' + msg);\n    }\n  }\n\n  warn(msg: any) {\n    if (this.debugMode === true) {\n      console.warn(this.dateInstance.getDate() + ' : ' + msg);\n    }\n  }\n\n  public get debugMode() {\n    return this._debugMode;\n  }\n\n  public set debugMode(value) {\n    this._debugMode = value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Login component\nAdd some more description.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentUser$\n                            \n                            \n                                faFacebook\n                            \n                            \n                                faGit\n                            \n                            \n                                faGoogle\n                            \n                            \n                                formLogin\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                doLogin\n                            \n                            \n                                    Public\n                                isFormValid\n                            \n                            \n                                    Public\n                                isPasswordValid\n                            \n                            \n                                    Public\n                                isUsernameValid\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:38\n                            \n                        \n\n                \n                    \n                            Constructor for the application.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:76\n                \n            \n\n\n            \n                \n                    Fires the login event.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isFormValid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isFormValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isPasswordValid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPasswordValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isUsernameValid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isUsernameValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:65\n                \n            \n\n\n            \n                \n                    The NgInit\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentUser$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faFacebook\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faFacebook\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:36\n                            \n                        \n\n                \n                    \n                        Using icons.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faGit\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faGit\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faGoogle\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faGoogle\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Logger } from '../log.service';\nimport { Store, select } from '@ngrx/store';\nimport { IPrincipal, IUserProfile } from 'src/app/models/user.model';\nimport { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport * as appActions from '../actions/login.action';\n\nimport { Observable, of } from 'rxjs';\nimport { MAX_USER_LENGTH } from '../constants/variables.constant';\nimport {faFacebook, faGoogle, faGit} from '@fortawesome/free-brands-svg-icons';\nimport { map } from 'rxjs/operators';\n\nimport * as fromStore from '@free-time/state/index';\nimport * as fromAuthState from '@free-time/state/auth.state';\n\n/**\n * Login component\n * Add some more description.\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n\n  private currentUser$: Observable;\n  username: FormControl;\n  password: FormControl;\n  formLogin: FormGroup;\n\n  /**\n   * Using icons.\n   */\n  faFacebook = faFacebook;\n  faGoogle = faGoogle;\n  faGit = faGit;\n\n\n  /**\n   * Constructor for the application.\n   * @param logger \n   * @param store \n   */\n  constructor(\n    private logger: Logger, \n    private store: Store) {\n      this.logger.log(' Login Component - Constructor');\n      this.username = new FormControl('', [\n                                  Validators.required,\n                                  Validators.email,\n                                  Validators.maxLength(MAX_USER_LENGTH)]);\n      this.password = new FormControl('', [Validators.required]);\n\n      this.formLogin = new FormGroup({\n        username: this.username,\n        password: this.password\n      });\n  }\n\n  /**\n   * The NgInit\n   */\n  ngOnInit() {\n    this.logger.log(' ngOnInit called for LoginComponent.');\n    this.currentUser$ = this.store.pipe(select(fromStore.getUserProfile));\n    this.currentUser$.subscribe( iP => {\n      console.log('This is the detail I got ' + JSON.stringify(iP));\n    });\n  }\n\n  /**\n   * Fires the login event.\n   */\n  public doLogin(): void {\n    this.logger.log(' doLogin() invoked. ');\n\n    const userPrincipal: IPrincipal = {\n      email: this.username.value,\n      password: this.password.value\n    };\n\n    /**\n     * Dispatch the action.\n     */\n    this.store.dispatch(appActions.login({ principal: userPrincipal }));\n  }\n\n  public isFormValid(): boolean {\n    return this.formLogin.valid;\n  }\n\n  public isUsernameValid(): boolean {\n    const username: AbstractControl = this.formLogin.get('username');\n    return username.valid;\n  }\n\n  public isPasswordValid(): boolean {\n    const password: AbstractControl = this.formLogin.get('password');\n    return password.valid;\n  }\n}\n\n\n    \n\n    \n        \n    \n    \n      \n        \n\n\n              \n                  \n                      \n                      \n                      \n                  \n              \n\n\n          \n          \n            \n              \n                \n                The unique username provided to\n                  you.\n              \n              \n                \n                Your secure password.\n              \n            \n\n              \n                Forgot password?\n              \n              \n                Submit\n              \n          \n        \n      \n    \n\n    \n\n    \n                \n                    ./login.component.css\n                \n                @media screen and (max-width: 480px) {\n\n  img {\n    background-color: grey;\n    min-height: 330px;\n  }\n\n  .inlineD {\n    display: inline;\n  }\n\n  button[type=\"submit\"] {\n    float: right;\n  }\n}\n\n.errorInput {\n  border-right: 4px solid red;\n}\n\nboxSize {\n  min-width: 500px;\n  min-height: 400px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                      The unique username provided to                  you.                                                            Your secure password.                                                        Forgot password?                                            Submit                                          '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorpageComponent', 'selector': 'app-errorpage'},{'name': 'FooterComponent', 'selector': 'ft-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'ft-navbar'},{'name': 'PersonComponent', 'selector': 'ft-person'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ThankyouComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login.service.ts\n        \n\n            \n                Description\n            \n            \n                Singleton instance for the login service.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseLoginURL\n                            \n                            \n                                    Private\n                                baseLogoutUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doLogin\n                            \n                            \n                                    Public\n                                getBasicHeader\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Public\n                                isAuthorized\n                            \n                            \n                                    Public\n                                loginUser\n                            \n                            \n                                    Public\n                                logoutUser\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    baseURL\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/app/login.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doLogin\n                        \n                        \n                    \n                \n            \n            \n                \ndoLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:47\n                \n            \n\n\n            \n                \n                    Loging capability exposed.\nIt takes in argument as IUserProfile\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBasicHeader\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBasicHeader(userName: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { headers: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(operation: string, result?: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:33\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    \nHandle Http operation that failed.\nLet the app continue.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    operation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'operation'\n                                    \n\n                                    \n                                        \nname of the operation that failed\n\n\n                                    \n                                \n                                \n                                    result\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \noptional value to return as the observable result\nMore information  here \n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (error: any) => any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isAuthorized\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isAuthorized()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loginUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loginUser(userName: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logoutUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logoutUser(userName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:85\n                \n            \n\n\n            \n                \n                    Logout user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseLoginURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'api/login'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseLogoutUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'api/logout'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        baseURL\n                    \n                \n\n                \n                    \n                        getbaseURL()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login.service.ts:100\n                                \n                            \n                    \n                        \n                                Returns the base login URL\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { DUMMY_USER_PROFILE, Logger } from '@free-time/components/index';\nimport { IUserProfile } from '@free-time/models/user.model';\n\n/**\n * Singleton instance for the login service.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  private baseLoginURL = 'api/login';\n  private baseLogoutUrl = 'api/logout';\n\n  constructor(private http: HttpClient, private logger: Logger) {\n\n  }\n\n  /**\n   * \n   * Handle Http operation that failed.\n   * Let the app continue.\n   * \n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   * \n   * More information  here \n   */\n  private handleError(operation = 'operation', result?: T) {\n    return (error: any): Observable => {\n      // TODO: better job of transforming error for user consumption\n      this.logger.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /**\n   * Loging capability exposed.\n   * It takes in argument as IUserProfile\n   */\n  doLogin(): Observable {\n    return this.http.get(this.baseLoginURL).pipe(\n      tap(_ => this.logger.log(' Login called.')),\n      catchError(this.handleError('login', []))\n    );\n  }\n\n  public getBasicHeader(userName: string, password: string) {\n    const authorizationData: string = 'Basic ' + btoa(userName + ':' + password);\n\n    return {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        Authorization: authorizationData,\n      })\n    };\n\n  }\n\n  public isAuthorized(): Observable {\n    return null;\n  }\n\n  public loginUser(userName: string, password: string): Observable {\n    return this.http.post(this.baseLoginURL, {}, this.getBasicHeader(userName, password)).pipe(\n        tap((user: IUserProfile) => {\n        console.log(' User logged in ' + user.user.email);\n      })\n    ).pipe(catchError(err => {\n      // TODO: Handle the error properly.\n      return of( DUMMY_USER_PROFILE );\n    }));\n  }\n\n  /**\n   * Logout user.\n   * @param userName\n   */\n  public logoutUser(userName: string): Observable {\n    return this.http.post(this.baseLogoutUrl, {}).pipe(\n      tap( (status) => {\n        this.logger.log(' Logout returned: ' + status);\n      }),\n      catchError(err => {\n      // TODO: Handle the error properly.\n      this.logger.log(' Logout ' + err);\n      return of(false);\n    }));\n  }\n\n  /**\n   * Returns the base login URL\n   */\n  public get baseURL(): string {\n    return this.baseLoginURL;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MysqlserviceService.html":{"url":"injectables/MysqlserviceService.html","title":"injectable - MysqlserviceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MysqlserviceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/mysqlservice.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/mysqlservice.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: IUserProfile)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/mysqlservice.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUserProfile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(user: IUserProfile)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/mysqlservice.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUserProfile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPrincipal, IUserProfile, IUser, IDetails } from '../models/user.model';\nimport { map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MysqlserviceService {\n  \n  constructor(private http: HttpClient,private router: Router) { }\n\n  public register (user: IUserProfile): Observable {\n    const request= this.http.post('http://localhost:4000/add',user).pipe(\n           map((data: IUserProfile)=> {\n             return data;\n           })\n    )\n    return request;\n  }\n\n  public login(user: IUserProfile): Observable {\n    const headers = new HttpHeaders({'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' });\n    const request =this.http.get('http://localhost:4000/login'+user, {headers}).pipe(\n      map((data: IUserProfile)=>{\n        return data;\n      })\n    )\n    return request;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n    \n        Description\n    \n    \n        Navigation component that holds the navigation links,\nbrand icon and other information to guide the navigation.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ft-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentUser$\n                            \n                            \n                                faSignin\n                            \n                            \n                                faSignout\n                            \n                            \n                                    Private\n                                loggedInUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                doLogout\n                            \n                            \n                                    Public\n                                getUserEmail\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                userLoggedIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, router: Router, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doLogout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUserEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserEmail()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:53\n                \n            \n\n\n            \n                \n                    Returns the logged in user.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:60\n                \n            \n\n\n            \n                \n                    Property to check whether the user has logged in.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentUser$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faSignin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faSignInAlt\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faSignout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faSignOutAlt\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loggedInUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPrincipal\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Logger } from '@free-time/components/log.service';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { Observable } from 'rxjs';\n\nimport { IPrincipal, IUserProfile } from '@free-time/models/user.model';\nimport {faSignInAlt, faSignOutAlt} from '@fortawesome/free-solid-svg-icons';\nimport { map } from 'rxjs/operators';\n\nimport * as appActions from '../actions/login.action';\nimport * as fromStore from '@free-time/state/index';\nimport * as fromAuth from '@free-time/state/auth.state';\nimport { Router } from '@angular/router';\n\n/**\n * Navigation component that holds the navigation links,\n * brand icon and other information to guide the navigation.\n */\n@Component({\n  selector: 'ft-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  private currentUser$: Observable;\n  private loggedInUser: IPrincipal;\n\n  faSignin = faSignInAlt;\n  faSignout = faSignOutAlt;\n\n  constructor(private logger: Logger, private router: Router, private store: Store) {\n    this.loggedInUser = null;\n    this.currentUser$ = this.store.pipe(select(fromStore.getUserProfile));\n    this.currentUser$.subscribe((user: IUserProfile) => {\n\n      if( user != null || user != undefined) {\n        this.loggedInUser = user.user;\n        this.logger.log('Welcome ' + this.loggedInUser.email);\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.logger.log(' ngOnInit for NavBarComponent called.');\n  }\n\n  /**\n   * Returns the logged in user.\n   */\n  public getUserEmail(): string {\n    return this.loggedInUser.email;\n  }\n\n  /**\n   * Property to check whether the user has logged in.\n   */\n  public userLoggedIn(): boolean {\n    return (this.loggedInUser != null) && (this.loggedInUser.email.length > 0);\n  }\n\n  public doLogout(): void {\n    this.logger.log(' Logout called.');\n    this.store.dispatch(appActions.logout({ userName: this.loggedInUser.email }));\n    this.router.navigate(['/home']);\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n    \n  \n\n  \n    \n      \n        \n          Home (current)\n        \n      \n      \n        About (current)\n      \n      \n        Contact\n      \n      \n        \n          P-Holder\n        \n        \n          Action\n          Another action\n          \n          Something else here\n        \n      \n    \n\n\n    \n      \n      Search\n    \n\n    \n      \n        \n      \n\n      \n        \n          {{ getUserEmail()! }}\n        \n        \n          \n            \n            \n          \n          Profile\n        \n      \n    \n\n  \n\n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Home (current)                            About (current)                    Contact                              P-Holder                          Action          Another action                    Something else here                                  Search                                                    {{ getUserEmail()! }}                                                                      Profile                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorpageComponent', 'selector': 'app-errorpage'},{'name': 'FooterComponent', 'selector': 'ft-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'ft-navbar'},{'name': 'PersonComponent', 'selector': 'ft-person'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ThankyouComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PersonComponent.html":{"url":"components/PersonComponent.html","title":"component - PersonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PersonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/person/person.component.ts\n\n\n    \n        Description\n    \n    \n        Person component allows a card visualization for the profiles that needs to be shown.\nIt is the smallest component, that only takes input from the component creating this\ncomponent and visualizes using bootstrap cards.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ft-person\n            \n\n            \n                styleUrls\n                ./person.component.css\n            \n\n\n\n            \n                templateUrl\n                ./person.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/person/person.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        profile\n                    \n                \n                \n                    \n                        Type :         IProfile\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/person/person.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/person/person.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { IProfile } from 'src/app/models/profiles.model';\nimport { Logger } from '../log.service';\n\n\n/**\n * Person component allows a card visualization for the profiles that needs to be shown.\n * It is the smallest component, that only takes input from the component creating this\n * component and visualizes using bootstrap cards.\n */\n@Component({\n  selector: 'ft-person',\n  templateUrl: './person.component.html',\n  styleUrls: ['./person.component.css']\n})\n\nexport class PersonComponent implements OnInit {\n\n  @Input() profile: IProfile;\n\n  constructor(private logger: Logger) {\n\n  }\n\n  ngOnInit() {\n    this.logger.log(' ngOnInit called for PersonComponent');\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    {{ profile.title }}\n    {{ profile.subTitle }}\n    {{ profile.description }}\n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./person.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ profile.title }}    {{ profile.subTitle }}    {{ profile.description }}                              '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorpageComponent', 'selector': 'app-errorpage'},{'name': 'FooterComponent', 'selector': 'ft-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'ft-navbar'},{'name': 'PersonComponent', 'selector': 'ft-person'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ThankyouComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PersonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/register/register.component.ts\n\n\n    \n        Description\n    \n    \n        It allows user to be registered for the portal. The basic information expected is\n\n{\n  firstName: \"Name\",\n  lastName: \"LastName\",\n}\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                config\n                            \n                            \n                                    Private\n                                currentState$\n                            \n                            \n                                    Public\n                                editMode\n                            \n                            \n                                faGit\n                            \n                            \n                                faGoogle\n                            \n                            \n                                    Public\n                                loggedIn\n                            \n                            \n                                    Private\n                                passwordConfirm\n                            \n                            \n                                    Private\n                                userP\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                callGitZen\n                            \n                            \n                                isPasswordValid\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    user\n                                \n                                \n                                    confirmPassword\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, gitService: GitService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/register/register.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Logger information.\n\n                                                        \n                                                \n                                                \n                                                        gitService\n                                                  \n                                                        \n                                                                        GitService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            callGitZen\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    callGitZen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/register/register.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isPasswordValid\n                        \n                        \n                    \n                \n            \n            \n                \nisPasswordValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/register/register.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/register/register.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/register/register.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentState$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/register/register.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/register/register.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faGit\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faGit\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/register/register.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faGoogle\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faGoogle\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/register/register.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/register/register.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            passwordConfirm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/register/register.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userP\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IUserProfile\n\n                        \n                    \n                    \n                        \n                            Default value : fromConstants.BLANK_USER_PROFILE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/register/register.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n                \n                    \n                        getuser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/register/register.component.ts:41\n                                \n                            \n\n                \n                    \n                        setuser(user)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/register/register.component.ts:45\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            user\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/register/register.component.ts:84\n                                \n                            \n\n                \n                    \n                        setconfirmPassword(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/register/register.component.ts:87\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { faGoogle, faGit } from '@fortawesome/free-brands-svg-icons';\n\nimport { IUserProfile } from '@free-time/models/user.model';\nimport { Logger } from '@free-time/components/log.service';\nimport { GitService } from '@free-time/components/git.service';\nimport * as fromState from '@free-time/state/index';\nimport * as fromAuth from '@free-time/state/auth.state';\nimport * as fromConstants from '@free-time/components/constants/variables.constant';\n/**\n * It allows user to be registered for the portal. The basic information expected is\n * \n * {\n *  firstName: \"Name\",\n *  lastName: \"LastName\",\n * }\n * \n */\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  private currentState$: Observable;\n  \n  public loggedIn: boolean;\n  public config: string;\n  public editMode: boolean;\n\n  faGoogle = faGoogle;\n  faGit = faGit;\n\n  private userP: IUserProfile = fromConstants.BLANK_USER_PROFILE;\n\n  private passwordConfirm: string;\n\n  get user(): IUserProfile {\n    return this.userP;\n  }\n\n  set user(user: IUserProfile) {\n    this.userP = user;\n  }\n\n  /**\n   * \n   * @param logger Logger information.\n   * @param gitService \n   * @param store \n   */\n  constructor(private logger: Logger,\n    private gitService: GitService,\n    private store: Store) {\n    this.editMode = false;\n\n    this.currentState$ = this.store.pipe(select(fromState.selectActiveUserState));\n  }\n\n  ngOnInit() {\n    this.logger.log(' Register ngOnInit called');\n    this.currentState$.subscribe(state => {\n      this.userP = state.userProfile;\n      this.loggedIn = state.loggedIn;\n    });\n  }\n\n  isPasswordValid(): boolean {\n    const p1: string = this.userP.user.password;\n    const p2: string = this.confirmPassword;\n    if (p1 != null && p2 != null) {\n      if (p1.length !== 0 && p2.length !== 0) {\n        if (p1.search(p2) === 0 && p1.length === p2.length) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  public get confirmPassword(): string {\n    return this.passwordConfirm;\n  }\n  public set confirmPassword(value: string) {\n    this.passwordConfirm = value;\n  }\n\n  public callGitZen() {\n    this.gitService.getZen().subscribe(response => {\n      this.config = response;\n    });\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n      \n      \n        \n        \n          \n            Welcome {{user.user.email}}!\n          \n        \n      \n      \n      \n      \n        \n          First and last name\n        \n        \n        \n      \n\n      \n      \n        Email address\n        \n        We'll never share your email with anyone else.\n      \n\n      \n      \n        Password\n        \n        Confirm\n        \n      \n\n      \n      \n        Please select a profile pic\n        \n      \n\n      \n      \n        \n          \n            \n          \n        \n        \n      \n\n      \n      \n        \n          Description\n        \n        \n      \n\n      \n      \n          \n            \n              \n            \n          \n          \n        \n        \n          \n            \n              \n            \n          \n          \n      \n\n      \n      Submit\n    \n  \n  {{user | json}}\n  \n    \n     {{ config }}\n  \n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                imgSize {\n  min-width: 80px;\n  max-width: 85px;\n  min-height: 80px;\n  max-height: 85px;\n  float: right;\n}\n\n.ng-valid[required], .ng-valid.required  {\n  border-left: 5px solid #42A948; /* green */\n}\n\n.ng-invalid:not(form), invalid  {\n  border-left: 5px solid #a94442; /* red */\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          Welcome {{user.user.email}}!                                                            First and last name                                                  Email address                We\\'ll never share your email with anyone else.                          Password                Confirm                                  Please select a profile pic                                                                                                                      Description                                                                                                                                                                                                            Submit        {{user | json}}           {{ config }}  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorpageComponent', 'selector': 'app-errorpage'},{'name': 'FooterComponent', 'selector': 'ft-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'ft-navbar'},{'name': 'PersonComponent', 'selector': 'ft-person'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ThankyouComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State.html":{"url":"interfaces/State.html","title":"interface - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/index.ts\n        \n\n            \n                Description\n            \n            \n                The global state for the application.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        userState\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userState\n                                    \n                                \n                                \n                                    \n                                        userState:     fromAuthState.ActiveUserState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromAuthState.ActiveUserState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createSelector, createFeatureSelector, MetaReducer, ActionReducerMap } from '@ngrx/store';\nimport { environment } from '../../environments/environment';\n\nimport * as fromAuthState from './auth.state';\n\n\n\n/**\n * The global state for the application.\n */\nexport interface State {\n  userState: fromAuthState.ActiveUserState;\n}\n\n/**\n * Returns the Empty state (Utility function.)\n * @see {State}\n */\nexport function getEmptyState(): State {\n  return {\n    userState: fromAuthState.initialAppState\n  };\n}\n\n/**\n * Initial states.\n */\nexport const initialState: State = {\n  userState: fromAuthState.initialAppState,\n};\n\n\n/**\n * Meta-reducers allow developers to pre-process actions before normal reducers are invoked.\n */\nexport const metaReducers: MetaReducer[] = !environment.production ? [] : [];\n\nexport const reducers: ActionReducerMap = {\n    userState: fromAuthState.reducer,\n};\n\n/**\n * Selectors\n */\nexport const selectActiveUserState = createFeatureSelector(fromAuthState.activeAuthStateKey);\nexport const getUserProfile = createSelector(\n    selectActiveUserState,\n    fromAuthState.getUserProfile\n);\n\nexport const getLoggedIn = createSelector(\n  selectActiveUserState,\n  fromAuthState.getLoggedIn\n)\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThankyouComponent.html":{"url":"components/ThankyouComponent.html","title":"component - ThankyouComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ThankyouComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/thankyou/thankyou.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./thankyou.component.css\n            \n\n\n\n            \n                templateUrl\n                ./thankyou.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    messageString\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/thankyou/thankyou.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/thankyou/thankyou.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/thankyou/thankyou.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        messageString\n                    \n                \n\n                \n                    \n                        getmessageString()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/thankyou/thankyou.component.ts:29\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Logger } from '@free-time/components/log.service';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\nimport { switchMap, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { MESSAGE } from '@free-time/components/constants/variables.constant';\n\n@Component({\n  templateUrl: './thankyou.component.html',\n  styleUrls: ['./thankyou.component.css']\n})\nexport class ThankyouComponent implements OnInit {\n  private message: string;\n  // private message$: Observable;\n\n  constructor(private logger: Logger, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.logger.log(' ngOnInit called for ThankyouComponent');\n    // this.message$ = this.route.queryParamMap.pipe(\n    //   map(param => {\n    //     return param.get(MESSAGE);\n    //   })\n    // );\n\n    this.message = this.route.snapshot.queryParams[MESSAGE];\n  }\n\n  get messageString(): string {\n    return this.message;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          {{ messageString }}\n      \n      \n      Thank you!\n    \n  \n\n\n    \n\n    \n                \n                    ./thankyou.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{ messageString }}                  Thank you!      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorpageComponent', 'selector': 'app-errorpage'},{'name': 'FooterComponent', 'selector': 'ft-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'ft-navbar'},{'name': 'PersonComponent', 'selector': 'ft-person'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ThankyouComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ThankyouComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ThankyouResolver.html":{"url":"guards/ThankyouResolver.html","title":"guard - ThankyouResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    ThankyouResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/components/thankyou/thankyou.resolver.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/thankyou/thankyou.resolver.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/thankyou/thankyou.resolver.service.ts:16\n                \n            \n\n\n            \n                \n                    The method to check before the route resolves.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Logger } from '@free-time/components/index';\nimport { MESSAGE } from '@free-time/components/constants/variables.constant';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ThankyouResolver implements Resolve {\n\n  constructor(private logger: Logger) {\n\n  }\n\n  /**\n   * The method to check before the route resolves.\n   */\n  public resolve(route: ActivatedRouteSnapshot) {\n    this.logger.log(' Resolve guard in play: ThankYouResolver.');\n    return route.queryParams[MESSAGE];\n  }\n\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/activatedroute-stub.ts\n            \n            class\n            ActivatedRouteStub\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/app.effects.ts\n            \n            injectable\n            AppEffects\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/components/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/actions/login.action.ts\n            \n            variable\n            login\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/actions/login.action.ts\n            \n            variable\n            loginFailure\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/actions/login.action.ts\n            \n            variable\n            loginSuccess\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/actions/login.action.ts\n            \n            variable\n            logout\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/actions/login.action.ts\n            \n            variable\n            profile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/actions/login.action.ts\n            \n            variable\n            profileFailure\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/actions/login.action.ts\n            \n            variable\n            profileSuccess\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/activatedroute-stub.ts\n            \n            class\n            ActivatedRouteStub\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/components/constants/variables.constant.ts\n            \n            variable\n            BLANK_USER_PROFILE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/constants/variables.constant.ts\n            \n            variable\n            DUMMY_USER_PROFILE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/constants/variables.constant.ts\n            \n            variable\n            MAX_USER_LENGTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/constants/variables.constant.ts\n            \n            variable\n            MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/contact/contact.component.ts\n            \n            component\n            ContactComponent\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                src/app/components/errorpage/errorpage.component.ts\n            \n            component\n            ErrorpageComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/components/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/components/git.service.ts\n            \n            injectable\n            GitService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/components/log.service.ts\n            \n            injectable\n            Logger\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                35 %\n                (5/14)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                30 %\n                (3/10)\n            \n        \n        \n            \n                \n                src/app/components/person/person.component.ts\n            \n            component\n            PersonComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/app/components/thankyou/thankyou.component.ts\n            \n            component\n            ThankyouComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/thankyou/thankyou.resolver.service.ts\n            \n            guard\n            ThankyouResolver\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/data/test/data.values.ts\n            \n            variable\n            userProfile1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/in-memory-data.service.ts\n            \n            injectable\n            InMemoryDataService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/login.service.ts\n            \n            injectable\n            LoginService\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/models/profiles.model.ts\n            \n            interface\n            IProfile\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            interface\n            IDetails\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            interface\n            IPrincipal\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            interface\n            IUser\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            interface\n            IUserProfile\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/mysqlservice.service.ts\n            \n            injectable\n            MysqlserviceService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/state/auth.state.ts\n            \n            interface\n            ActiveUserState\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/state/auth.state.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/auth.state.ts\n            \n            variable\n            activeAuthStateKey\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/state/auth.state.ts\n            \n            variable\n            getLoggedIn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/auth.state.ts\n            \n            variable\n            getUserProfile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/auth.state.ts\n            \n            variable\n            initialAppState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/auth.state.ts\n            \n            variable\n            loginReducer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/state/index.ts\n            \n            interface\n            State\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/state/index.ts\n            \n            function\n            getEmptyState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/state/index.ts\n            \n            variable\n            getLoggedIn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/index.ts\n            \n            variable\n            getUserProfile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/index.ts\n            \n            variable\n            initialState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/state/index.ts\n            \n            variable\n            metaReducers\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/state/index.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/index.ts\n            \n            variable\n            selectActiveUserState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.2.7\n        \n            @angular/common : ^8.2.7\n        \n            @angular/compiler : ^8.2.7\n        \n            @angular/core : ^8.2.7\n        \n            @angular/forms : ^8.2.7\n        \n            @angular/platform-browser : ^8.2.7\n        \n            @angular/platform-browser-dynamic : ^8.2.7\n        \n            @angular/router : ^8.2.7\n        \n            @fortawesome/angular-fontawesome : ^0.5.0\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.24\n        \n            @fortawesome/free-brands-svg-icons : ^5.11.1\n        \n            @fortawesome/free-solid-svg-icons : ^5.11.1\n        \n            @ngrx/effects : ^8.3.0\n        \n            @ngrx/router-store : ^8.3.0\n        \n            @ngrx/store : ^8.3.0\n        \n            @ngrx/store-devtools : ^8.3.0\n        \n            angular-in-memory-web-api : ^0.8.0\n        \n            bootstrap : ^4.3.1\n        \n            express : ^4.17.1\n        \n            ionic : ^5.4.1\n        \n            jquery : ^3.4.1\n        \n            mysql : ^2.17.1\n        \n            nodemon : ^1.19.2\n        \n            popper.js : ^1.15.0\n        \n            rxjs : ^6.5.3\n        \n            tslib : ^1.9.0\n        \n            zone.js : ^0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getEmptyState   (src/.../index.ts)\n                        \n                        \n                            reducer   (src/.../auth.state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/state/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getEmptyState\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmptyState()\n                \n            \n\n\n\n\n            \n                \n                    Returns the Empty state (Utility function.)\n\n\n                    \n                        Returns :         State\n\n                    \n                \n            \n        \n    \n    src/app/state/auth.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            reducer\n                        \n                        \n                    \n                \n            \n            \n                \nreducer(activeState, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activeState\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFreeTime\nThis project was generated with Angular CLI version 8.1.2. The intention behind this project is to learn new techstack while trying to solve a real life probelm. You should be able to use git and employ various commands to commit.\nAngular\nAngular is a feature rich JS framework with various built-in capabilities like HTTP communication, routing, observables and dependency injection. It enhances productivity and reusability for development teams by eliminating the need to implement boilerplate code common to modern web apps.\nAngular is an opinionated framework, with loads of recommendations or prescriptions, this facilitates consistent application logic building with increased productivity.\nChronology\nInstall angular client version 8.1.2 and you are almost set. You can navigate to any folder of your choice or if required you can create one. I prefer to have my own folder and that way I can ensure what I am creating and where.\nThings you should know before you start contributing.\n\nAngular bootstrapping\nJavaScript and [Angular Modules]\nSome knowledge of CommonJS, AMD (Asynchronous Module Definition)  - RequireJS, Webpack and Babel would be encouraging. ref-link\nIt is recommended to understand what is package.json and how to maintain it.\nLearn about the styleguide.\nAngular Lifecycle hooks.\nProperty binding\n\nApplication creation\nThe command (Angular CLI) used to create this application.\nng new --help\narguments:\n  name\n    The name of the new workspace and initial project.\n\noptions:\n  --collection (-c)\n    A collection of schematics to use in generating the initial app.\n  --commit\n    Initial git repository commit information.\n  --create-application\n    When true (the default), creates a new initial app project in the src folder of the new workspace. When false, creates an empty workspace with no initial app. You can then use the generate application command so that all apps are created in the projects folder.\n  --defaults\n    When true, disables interactive input prompts for options with a default.\n  --directory\n    The directory name to create the workspace in.\n  --dry-run (-d)\n    When true, runs through and reports activity without writing out results.\n  --enable-ivy\n    When true, creates a new app that uses the Ivy rendering engine.\n  --force (-f)\n    When true, forces overwriting of existing files.\n  --help\n    Shows a help message for this command in the console.\n  --inline-style (-s)\n    When true, includes styles inline in the component TS file. By default, an external styles file is created and referenced in the component TS file.\n  --inline-template (-t)\n    When true, includes template inline in the component TS file. By default, an external template file is created and referenced in the component TS file.\n  --interactive\n    When false, disables interactive input prompts.\n  --minimal\n    When true, creates a project without any testing frameworks. (Use for learning purposes only.)\n  --new-project-root\n    The path where new projects will be created, relative to the new workspace root.\n  --prefix (-p)\n    The prefix to apply to generated selectors for the initial project.\n  --routing\n    When true, generates a routing module for the initial project.\n  --skip-git (-g)\n    When true, does not initialize a git repository.\n  --skip-install\n    When true, does not install dependency packages.\n  --skip-tests (-S)\n    When true, does not generate \"spec.ts\" test files for the new project.\n  --style\n    The file extension or preprocessor to use for style files.\n  --verbose (-v)\n    When true, adds more details to output logging.\n  --view-encapsulation\n    The view encapsulation strategy to use in the initial project.  Pretty much delete everything in the app.component.html file and will start from there.\nRunning the development server - Application testing\nYou can use ng serve for the dev server & navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nBuild - Use --prod for production build\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nAdding a new component to your application\nng generate component test-component\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRun tests before any commit or push to the branch.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nGit - Tips\nAlways before you commit you should chceck the status\n  git statusIt will give an output like\ngit status\nOn branch v1.0\nYour branch is up-to-date with 'origin/v1.0'.\n\nChanges not staged for commit:\n  (use \"git add ...\" to update what will be committed)\n  (use \"git checkout -- ...\" to discard changes in working directory)\n\n        modified:   README.md\n\nUntracked files:\n  (use \"git add ...\" to include in what will be committed)Add the files you wish to add before you push the commit\ngit add .followed by\ngit statuswhich should give an output like\ngit status\nOn branch v1.0\nYour branch is up-to-date with 'origin/v1.0'.\n\nChanges to be committed:\n  (use \"git reset HEAD ...\" to unstage)\n\n        modified:   README.mdAlways provide comment to any changes that you shall commit.\ngit commit -m \"Added some basic components and guidelines\"In case your code gets dirty with your changes:\nGet the updated code from repo and then apply your changes to it, for storing your changes use stashing:\n1) git stash (This will save your  locally)\n2) git pull origin (This will pull the latest code from repo)\n3) git stash apply (This will apply the latest stash)\nWhat are we building & why\nThe expectation is to start with a simple SPA that will employ Angular and some cascading style sheet framework that can either be Bootstrap or Angular Material and shall have a Navigation bar at the top. The basic topics that it should cover are\n\nIntroduction/Mission statement\nAbout (The stakeholders)\nHighlights (May be link to the individual blogs)\n\nWhy choose Angular\nThe basic question that everyone asks is why you went ahead with that specific choice of framework, when the others had similar or slightly better offerring? We had a similar dilemma and we chose Angular because of the following reasons\n\nResources available.\nExisting expertise.\nTime at hand.\n\nGuidelines\nBasic guidelines to be followed\n\nNo component code to be checked in without the unit testing code (spec). helper link\n\nUnderstand ComponentFixture which gives us a reference to the component instance being tested, as well as the component’s template.\nDo understand the TestBed utility, which is responsible for initializing the environment.\nDo go through the Angular Testing.\nUndestand the Jasmine Syntax.\nUnderstand Behavior driven development.\nTools that we shall use for testing will be as provided by the Angular CLI\nKarma - The test runner.\nJasmine - The basic syntax.\nYou can explore the other options like Sinon and Wallaby, Cypress etc.\n\n\n\n\n\n\nbeforeEach(async(() => {\n    TestBed.configureTestingModule({\n      declarations: [ PersonComponent ]\n    })\n    .compileComponents();\n  }\nAngular style guideline to be employed, use lint before every commit.\nE2E to be decided.\n\nGood links to read\n\nJasmine how to spy\nProgressive web app & Service worker intro\nCan I use\nIn memory web API\nRedux store\nWhen to use Store\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IamModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nContactComponent\n\nContactComponent\n\nAppModule -->\n\nContactComponent->AppModule\n\n\n\n\n\nErrorpageComponent\n\nErrorpageComponent\n\nAppModule -->\n\nErrorpageComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPersonComponent\n\nPersonComponent\n\nAppModule -->\n\nPersonComponent->AppModule\n\n\n\nAppModule -->\n\nPersonComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nThankyouComponent\n\nThankyouComponent\n\nAppModule -->\n\nThankyouComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nIamModule\n\nIamModule\n\nAppModule -->\n\nIamModule->AppModule\n\n\n\n\n\nLogger\n\nLogger\n\nAppModule -->\n\nLogger->AppModule\n\n\n\n\n\nMysqlserviceService\n\nMysqlserviceService\n\nAppModule -->\n\nMysqlserviceService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            activeAuthStateKey   (src/.../auth.state.ts)\n                        \n                        \n                            BLANK_USER_PROFILE   (src/.../variables.constant.ts)\n                        \n                        \n                            DUMMY_USER_PROFILE   (src/.../variables.constant.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            getLoggedIn   (src/.../auth.state.ts)\n                        \n                        \n                            getLoggedIn   (src/.../index.ts)\n                        \n                        \n                            getUserProfile   (src/.../auth.state.ts)\n                        \n                        \n                            getUserProfile   (src/.../index.ts)\n                        \n                        \n                            initialAppState   (src/.../auth.state.ts)\n                        \n                        \n                            initialState   (src/.../index.ts)\n                        \n                        \n                            login   (src/.../login.action.ts)\n                        \n                        \n                            loginFailure   (src/.../login.action.ts)\n                        \n                        \n                            loginReducer   (src/.../auth.state.ts)\n                        \n                        \n                            loginSuccess   (src/.../login.action.ts)\n                        \n                        \n                            logout   (src/.../login.action.ts)\n                        \n                        \n                            MAX_USER_LENGTH   (src/.../variables.constant.ts)\n                        \n                        \n                            MESSAGE   (src/.../variables.constant.ts)\n                        \n                        \n                            metaReducers   (src/.../index.ts)\n                        \n                        \n                            profile   (src/.../login.action.ts)\n                        \n                        \n                            profileFailure   (src/.../login.action.ts)\n                        \n                        \n                            profileSuccess   (src/.../login.action.ts)\n                        \n                        \n                            reducers   (src/.../index.ts)\n                        \n                        \n                            selectActiveUserState   (src/.../index.ts)\n                        \n                        \n                            userProfile1   (src/.../data.values.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/state/auth.state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            activeAuthStateKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'userState'\n                        \n                    \n\n                \n                    \n                        Active user state information.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLoggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state:ActiveUserState) => state.loggedIn\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserProfile\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: ActiveUserState) => state.userProfile\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialAppState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActiveUserState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  userProfile: fromConstants.BLANK_USER_PROFILE,\n  loggedIn: false\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginReducer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createReducer(\n    initialAppState,\n    on(LoginActions.login, (state, {principal}) => {\n      return {\n        /** Returns the new state for the Active User State. */\n        loggedIn: false,\n        userProfile: {\n          user: principal,\n          details: null,\n          profile: null\n        }\n      }\n    }),\n    on(\n      LoginActions.loginSuccess, (state, { userProfile }) => {\n        return {\n            ...state,\n            loggedIn: true,\n            userProfile\n        };\n      }),\n      on(LoginActions.logout, (state) => {\n        return {\n          ...state,\n          loggedIn: false,\n          userProfile: undefined\n        }\n      })\n  )\n                        \n                    \n\n                \n                    \n                        The login reducer.\nEach reducer function takes the latest Action dispatched, the current state,\nand determines whether to return a newly modified state or the original state.\n\n                    \n                \n\n            \n        \n\n    src/app/components/constants/variables.constant.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BLANK_USER_PROFILE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IUserProfile\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  user: {\n    email: '',\n    password: '',\n  },\n  profile: {\n    name: '',\n    lastName: '',\n    imageUrl: '',\n  },\n  details: {\n    subscribeToEmail: 0,\n    gitProfile: '',\n    googleProfile: '',\n    description: ''\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DUMMY_USER_PROFILE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IUserProfile\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  user: {\n    email: 'saurabh777@gmail.com',\n    password: 'ABCDEF123456',\n  },\n  profile: {\n    name: 'Saurabh',\n    lastName: 'Sharma',\n    imageUrl: '',\n  },\n  details: {\n    subscribeToEmail: 1,\n    gitProfile: 'https://www.github.com/samarthya',\n    googleProfile: '',\n    description: 'This lad is still learning.'\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_USER_LENGTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 30\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MESSAGE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'message'\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/state/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getLoggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n  selectActiveUserState,\n  fromAuthState.getLoggedIn\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserProfile\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n    selectActiveUserState,\n    fromAuthState.getUserProfile\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         State\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  userState: fromAuthState.initialAppState,\n}\n                        \n                    \n\n                \n                    \n                        Initial states.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            metaReducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MetaReducer[]\n\n                        \n                    \n                    \n                        \n                            Default value : !environment.production ? [] : []\n                        \n                    \n\n                \n                    \n                        Meta-reducers allow developers to pre-process actions before normal reducers are invoked.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    userState: fromAuthState.reducer,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectActiveUserState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createFeatureSelector(fromAuthState.activeAuthStateKey)\n                        \n                    \n\n                \n                    \n                        Selectors\n\n                    \n                \n\n            \n        \n\n    src/app/components/actions/login.action.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction('[Login Initiatied] Login',\n  props()\n)\n                        \n                    \n\n                \n                    \n                        Actions are POJO's with type and optional Payload.\nUnique events that happen throughout the application.\nFrom NgRx documentation.\n\nThere are a few rules to writing good actions within your application.\n\n\n  Upfront - write actions before developing features to understand and gain a shared knowledge of the feature being implemented.\n  Divide - categorize actions based on the event source.\n  Many - actions are inexpensive to write, so the more actions you write, the better you express flows in your application.\n  Event-Driven - capture events not commands as you are separating the description of an event and the handling of that event.\n  Descriptive - provide context that are targeted to a unique event with more detailed information you can use to aid in debugging with the developer tools.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginFailure\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction('[Login Failure] Login',\n  props()\n)\n                        \n                    \n\n                \n                    \n                        Action-Login-Failure\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction('[Login Success] Login',\n  props()\n)\n                        \n                    \n\n                \n                    \n                        Action-Login-Success\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction('[Logout initiated] logout', \nprops()\n)\n                        \n                    \n\n                \n                    \n                        Action-Logout\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction('[Profile] Editing',\n  props()\n)\n                        \n                    \n\n                \n                    \n                        Action-Edit-Profile\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profileFailure\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction('[Profile] Editing Failed',\n  props()\n)\n                        \n                    \n\n                \n                    \n                        Action-Edit-Failure\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profileSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction('[Profile] Editing Success',\n  props()\n)\n                        \n                    \n\n                \n                    \n                        Action-Edit-Success\n\n                    \n                \n\n            \n        \n\n    src/app/data/test/data.values.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            userProfile1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IProfile\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  title: 'Saurabh Sharma',\n  subTitle: 'Software Engineer.',\n  description: 'I am good engineer.',\n  giturl: 'https://samarthya.github.io',\n  imageUrl: '../../../assets/images/1.png',\n  linkedIn: 'https://www.linkedin.com/in/samarthyasaurabh',\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
